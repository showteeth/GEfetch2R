% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fastq.R
\name{DownloadFastq}
\alias{DownloadFastq}
\title{Download FASTQ Files.}
\usage{
DownloadFastq(
  gsm.df,
  out.folder = NULL,
  download.method = c("download.file", "ascp"),
  quiet = FALSE,
  timeout = 3600,
  ascp.path = NULL,
  max.rate = "300m",
  parallel = TRUE,
  use.cores = NULL
)
}
\arguments{
\item{gsm.df}{Dataframe contains GSM and Run numbers, obtained from \code{ExtractRun}.}

\item{out.folder}{Output folder. Default: NULL (current working directory).}

\item{download.method}{Method to download fastq files, chosen from "download.file" and "ascp". Default: "download.file".}

\item{quiet}{Logical value, whether to show downloading progress. Used when \code{download.method} is "download.file".
Default: FALSE (show).}

\item{timeout}{Maximum request time. Used when \code{download.method} is "download.file". Default: 3600.}

\item{ascp.path}{Path to ascp (/path/bin/ascp), please ensure that the relative path of asperaweb_id_dsa.openssh file
(/path/bin/ascp/../etc/asperaweb_id_dsa.openssh). Default: NULL (conduct automatic detection).}

\item{max.rate}{Max transfer rate. Used when \code{download.method} is "ascp". Default: 300m.}

\item{parallel}{Logical value, whether to download parallelly. Default: TRUE.}

\item{use.cores}{The number of cores used. Default: NULL (the minimum value of \code{nrow(gsm.df)} and \code{parallel::detectCores()}).}
}
\value{
Dataframe contains failed \code{gsm.df} of NULL.
}
\description{
Download FASTQ Files.
}
\examples{
GSE130636.runs <- ExtractRun(acce = "GSE130636", platform = "GPL20301")
# a small test
GSE130636.runs <- GSE130636.runs[GSE130636.runs$run \%in\% c("SRR9004325", "SRR9004326"), ]
# use download.file
download.file.res <- DownloadFastq(
  gsm.df = gsm.df, out.folder = "/path/to/output",
  download.method = "download.file", parallel = TRUE, use.cores = 2
)
# use ascp
ascp.res <- DownloadFastq(
  gsm.df = gsm.df, out.folder = "/home/songyabing/data/projects/tmp/scfetch",
  download.method = "ascp", ascp.path = "~/.aspera/connect/bin/ascp", parallel = TRUE, use.cores = 2
)
}
