[{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement songyb0519@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/INSTALL.html","id":null,"dir":"","previous_headings":"","what":"Installation","title":"Installation","text":", list issues related installation.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/INSTALL.html","id":"c14c17-standard-requested-but-cxx14cxx17-is-not-defined","dir":"","previous_headings":"","what":"C++14/C++17 standard requested but CXX14/CXX17 is not defined","title":"Installation","text":"common issue gcc version (following solution CentOS 7): Install gcc (root required): Configure R env: Reference","code":"# check gcc gcc --version   # gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)  # install gcc yum install centos-release-scl yum install devtoolset-8 scl enable devtoolset-8 bash  # check gcc version gcc --version   # gcc (GCC) 8.3.1 20190311 (Red Hat 8.3.1-3) # create ~/.R/Makevars first # change CXX to installed gcc path cat ~/.R/Makevars   # MAKEFLAGS = -j8   #    # ## C++ flags   # CXX=/opt/rh/devtoolset-8/root/usr/bin/g++   # CXX11=/opt/rh/devtoolset-8/root/usr/bin/g++   # CXX14=/opt/rh/devtoolset-8/root/usr/bin/g++   # CXX17=/opt/rh/devtoolset-8/root/usr/bin/g++   #    # CXXFLAGS=-O3 -march=native -Wno-ignored-attributes   # CXX11FLAGS=-O3 -march=native -Wno-ignored-attributes   # CXX14FLAGS=-O3 -march=native -Wno-ignored-attributes   # CXX17FLAGS=-O3 -march=native -Wno-ignored-attributes   #    # CXXPICFLAGS=-fPIC   # CXX11PICFLAGS=-fPIC   # CXX14PICFLAGS=-fPIC   # CXX17PICFLAGS=-fPIC   #    # CXX11STD=-std=c++11   # CXX14STD=-std=c++14   # CXX17STD=-std=c++17   #    # ## C flags   # CC=gcc   # CFLAGS=-O3 -march=native   #    # ## Fortran flags   # FC=gfortran   # F77=gfortran   # FFLAGS=-O3 -march=native   # FCFLAGS=-O3 -march=native"},{"path":"https://showteeth.github.io/GEfetch2R/INSTALL.html","id":"hdf5-please-ensure-that-at-least-version-1813-is-installed","dir":"","previous_headings":"","what":"hdf5: Please ensure that at least version 1.8.13 is installed","title":"Installation","text":"CentOS 7 installs hdf5 1.8.12 default. following solution: Install: Reference","code":"# download hdf5: https://www.hdfgroup.org/downloads/hdf5/source-code/  # cofigure tar -zxvf hdf5-1.14.2.tar.gz cd hdf5-1.14.2/ ./configure --prefix=/usr/local/hdf5 make make install install.packages(\"hdf5r\", configure.args=\"--with-hdf5=/usr/local/hdf5/bin/h5cc\")"},{"path":"https://showteeth.github.io/GEfetch2R/INSTALL.html","id":"seuratobject","dir":"","previous_headings":"","what":"SeuratObject","title":"Installation","text":"","code":"devtools::install_version(\"SeuratObject\", version = \"4.1.4\", repos = \"https://cran.r-project.org\")"},{"path":"https://showteeth.github.io/GEfetch2R/INSTALL.html","id":"general-solution","dir":"","previous_headings":"","what":"General solution","title":"Installation","text":"general purpose, can create new R environment (R version) using Conda, install packages via Conda, add R library path Conda .libPath(). Install Conda: reference Install R: conda install r-base=4.0.3 (keep version) Install packages: conda install xxxx Add R path: .libPaths(c(.libPaths(), \"/home/user/R/x86_64-conda-linux-gnu-library/4.0\")) can solve problems!!","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://showteeth.github.io/GEfetch2R/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DownloadMatrices","text":"GEfetch2R provides functions users download count matrices annotations (e.g. cell type annotation composition) GEO single-cell databases (e.g. PanglaoDB UCSC Cell Browser). GEfetch2R also supports loading downloaded data Seurat. now, public resources supported returned values:","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"geo","dir":"Articles","previous_headings":"","what":"GEO","title":"DownloadMatrices","text":"GEO international public repository archives freely distributes microarray, next-generation sequencing, forms high-throughput functional genomics data submitted research community. provides convenient way users explore select interested scRNA-seq datasets.","code":"## Warning: replacing previous import 'LoomExperiment::import' by ## 'reticulate::import' when loading 'GEfetch2R'"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"extract-metadata","dir":"Articles","previous_headings":"GEO","what":"Extract metadata","title":"DownloadMatrices","text":"GEfetch2R provides ExtractGEOMeta extract sample metadata, including sample title, source name/tissue, description, cell type, treatment, paper title, paper abstract, organism, protocol, data processing methods, et al. Show metadata:","code":"# library library(GEfetch2R)  # extract metadata of specified platform GSE200257.meta <- ExtractGEOMeta(acce = \"GSE200257\", platform = \"GPL24676\") # set VROOM_CONNECTION_SIZE to avoid error: Error: The size of the connection buffer (786432) was not large enough Sys.setenv(\"VROOM_CONNECTION_SIZE\" = 131072 * 60) # extract metadata of all platforms GSE94820.meta <- ExtractGEOMeta(acce = \"GSE94820\", platform = NULL) head(GSE94820.meta)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"download-matrix-and-load-to-seurat","dir":"Articles","previous_headings":"GEO","what":"Download matrix and load to Seurat","title":"DownloadMatrices","text":"manually check extracted metadata, users can download count matrix load count matrix Seurat ParseGEO. count matrix, ParseGEO supports downloading matrix supplementary files extracting ExpressionSet, users can control source specifying .supp detecting automatically (ParseGEO extract count matrix ExpressionSet first, count matrix NULL contains non-integer values, ParseGEO download supplementary files). supplementary files two main types: single count matrix file containing cells CellRanger-style outputs (barcode, matrix, feature/gene), users required choose type supplementary files supp.type. count matrix, ParseGEO load matrix Seurat automatically. multiple samples available, users can choose merge SeuratObject merge. Show GSE200257.seu: Show GSE94820.seu: structure downloaded count matrix 10x: bulk RNA-seq, set data.type = \"bulk\" ParseGEO, return count matrix.","code":"# cellranger out GSE200257.seu <- ParseGEO(   acce = \"GSE200257\", platform = NULL, supp.idx = 1,   down.supp = TRUE, supp.type = \"10x\",   out.folder = \"/Volumes/soyabean/GEfetch2R/dwonload_geo\" ) # count matrix GSE94820.seu <- ParseGEO(   acce = \"GSE94820\", platform = NULL,   supp.idx = 1, down.supp = TRUE,   supp.type = \"count\" ) # for cellranger output GSE200257.seu # for count matrix GSE94820.seu tree /Volumes/soyabean/GEfetch2R/dwonload_geo ## /Volumes/soyabean/GEfetch2R/dwonload_geo ## ├── GSM6025652_1 ## │   ├── barcodes.tsv.gz ## │   ├── features.tsv.gz ## │   └── matrix.mtx.gz ## ├── GSM6025653_2 ## │   ├── barcodes.tsv.gz ## │   ├── features.tsv.gz ## │   └── matrix.mtx.gz ## ├── GSM6025654_3 ## │   ├── barcodes.tsv.gz ## │   ├── features.tsv.gz ## │   └── matrix.mtx.gz ## └── GSM6025655_4 ##     ├── barcodes.tsv.gz ##     ├── features.tsv.gz ##     └── matrix.mtx.gz ##  ## 5 directories, 12 files"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"panglaodb","dir":"Articles","previous_headings":"","what":"PanglaoDB","title":"DownloadMatrices","text":"PanglaoDB database contains scRNA-seq datasets mouse human. now, contains 5,586,348 cells 1368 datasets (1063 Mus musculus 305 Homo sapiens). well organized metadata every dataset, including tissue, protocol, species, number cells cell type annotation (computationally identified). Daniel Osorio developed rPanglaoDB access PanglaoDB data, functions GEfetch2R based rPanglaoDB. Since PanglaoDB longer maintained, GEfetch2R cached metadata cell type composition use cached data default accelerate, users can access cached data PanglaoDBMeta (metadata) PanglaoDBComposition (cell type composition).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"summary-attributes","dir":"Articles","previous_headings":"PanglaoDB","what":"Summary attributes","title":"DownloadMatrices","text":"GEfetch2R provides StatDBAttribute summary attributes PanglaoDB:","code":"# use cached metadata StatDBAttribute(df = PanglaoDBMeta, filter = c(\"species\", \"protocol\"), database = \"PanglaoDB\") ## $species ##          Value  Num     Key ## 1 Mus musculus 1063 species ## 2 Homo sapiens  305 species ##  ## $protocol ##           Value  Num      Key ## 1  10x chromium 1046 protocol ## 2      drop-seq  204 protocol ## 3 microwell-seq   74 protocol ## 4    Smart-seq2   26 protocol ## 5   C1 Fluidigm   16 protocol ## 6       CEL-seq    1 protocol ## 7       inDrops    1 protocol"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"extract-metadata-1","dir":"Articles","previous_headings":"PanglaoDB","what":"Extract metadata","title":"DownloadMatrices","text":"GEfetch2R provides ExtractPanglaoDBMeta select interested datasets specified species, protocol, tissue cell number (available values attributes can obtained StatDBAttribute). User can also choose whether add cell type annotation every dataset show.cell.type. GEfetch2R uses cached metadata cell type composition default, users can change setting local.data = FALSE. Show metadata:","code":"hsa.meta <- ExtractPanglaoDBMeta(   species = \"Homo sapiens\", protocol = c(\"Smart-seq2\", \"10x chromium\"),   show.cell.type = TRUE, cell.num = c(1000, 2000) ) head(hsa.meta) ##         SRA        SRS                             Tissue     Protocol ## 1 SRA550660 SRS2089635 Peripheral blood mononuclear cells 10x chromium ## 2 SRA550660 SRS2089636 Peripheral blood mononuclear cells 10x chromium ## 3 SRA550660 SRS2089638 Peripheral blood mononuclear cells 10x chromium ## 4 SRA605365 SRS2492922            Nasal airway epithelium 10x chromium ## 5 SRA608611 SRS2517316                   Lung progenitors 10x chromium ## 6 SRA608353 SRS2517519           Hepatocellular carcinoma 10x chromium ##        Species Cells ## 1 Homo sapiens  1860 ## 2 Homo sapiens  1580 ## 3 Homo sapiens  1818 ## 4 Homo sapiens  1932 ## 5 Homo sapiens  1077 ## 6 Homo sapiens  1230 ##                                                                      CellType ## 1                                                           Unknown, NK cells ## 2                              Unknown, T cells, Plasmacytoid dendritic cells ## 3 Unknown, Gamma delta T cells, Dendritic cells, Plasmacytoid dendritic cells ## 4       Luminal epithelial cells, Basal cells, Keratinocytes, Ependymal cells ## 5                                           Unknown, Hepatocytes, Basal cells ## 6                                        Unknown, Hepatocytes, Foveolar cells ##   CellNum ## 1    1860 ## 2    1580 ## 3    1818 ## 4    1932 ## 5    1077 ## 6    1230"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"extract-cell-type-composition","dir":"Articles","previous_headings":"PanglaoDB","what":"Extract cell type composition","title":"DownloadMatrices","text":"GEfetch2R provides ExtractPanglaoDBComposition extract cell type annotation composition (use cached data default accelerate, users can change setting local.data = FALSE). Show extracted cell type annotation composition:","code":"hsa.composition <- ExtractPanglaoDBComposition(   species = \"Homo sapiens\",   protocol = c(\"Smart-seq2\", \"10x chromium\") ) head(hsa.composition) ##           SRA        SRS                        Tissue     Protocol ## 1.1 SRA553822 SRS2119548 Cultured embryonic stem cells 10x chromium ## 1.2 SRA553822 SRS2119548 Cultured embryonic stem cells 10x chromium ## 1.3 SRA553822 SRS2119548 Cultured embryonic stem cells 10x chromium ## 1.4 SRA553822 SRS2119548 Cultured embryonic stem cells 10x chromium ## 1.5 SRA553822 SRS2119548 Cultured embryonic stem cells 10x chromium ## 1.6 SRA553822 SRS2119548 Cultured embryonic stem cells 10x chromium ##          Species Cluster Cells Cell Type ## 1.1 Homo sapiens       0  1572   Unknown ## 1.2 Homo sapiens       1   563   Unknown ## 1.3 Homo sapiens       2   280   Unknown ## 1.4 Homo sapiens       3   270   Unknown ## 1.5 Homo sapiens       4   220   Unknown ## 1.6 Homo sapiens       5   192   Unknown"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"download-matrix-and-load-to-seurat-1","dir":"Articles","previous_headings":"PanglaoDB","what":"Download matrix and load to Seurat","title":"DownloadMatrices","text":"manually check extracted metadata, GEfetch2R provides ParsePanglaoDB download count matrix load count matrix Seurat. available cell type annotation, uses can filter datasets without specified cell type cell.type. Users can also include/exclude cells expressing specified genes include.gene/exclude.gene. count matrix, ParsePanglaoDB load matrix Seurat automatically. multiple datasets available, users can choose merge SeuratObject merge. Show returned SeuratObject:","code":"hsa.seu <- ParsePanglaoDB(hsa.meta[1:3, ], merge = TRUE) hsa.seu ## An object of class Seurat  ## 25917 features across 4996 samples within 1 assay  ## Active assay: RNA (25917 features, 0 variable features)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"ucsc-cell-browser","dir":"Articles","previous_headings":"","what":"UCSC Cell Browser","title":"DownloadMatrices","text":"UCSC Cell Browser web-based tool allows scientists interactively visualize scRNA-seq datasets. contains 1267 single cell datasets 25 different species. , organized hierarchical structure, can help users quickly locate datasets interested .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"show-available-datasets","dir":"Articles","previous_headings":"UCSC Cell Browser","what":"Show available datasets","title":"DownloadMatrices","text":"GEfetch2R provides ShowCBDatasets show available datasets. Due large number datasets, ShowCBDatasets enables users perform lazy load dataset json files instead downloading json files online (time-consuming!!!). lazy load requires users provide json.folder save json files set lazy = TRUE (first time run, ShowCBDatasets download current json files json.folder, next time run, lazy = TRUE, ShowCBDatasets load downloaded json files json.folder.). , ShowCBDatasets supports updating local datasets update = TRUE. Show metadata: number datasets available species:","code":"# first time run, the json files are stored under json.folder # ucsc.cb.samples = ShowCBDatasets(lazy = TRUE, json.folder = \"/Volumes/soyabean/GEfetch2R/cell_browser/json\", update = TRUE)  # second time run, load the downloaded json files ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, json.folder = \"/Volumes/soyabean/GEfetch2R/cell_browser/json\", update = FALSE)  # always read online # ucsc.cb.samples = ShowCBDatasets(lazy = FALSE) head(ucsc.cb.samples) ##                                 name                          shortLabel ## 1      ad-aging-brain/ad-aging-brain Aging Brain and Alzheimer's Disease ## 2     ad-aging-brain/ad-atac/erosion Aging Brain and Alzheimer's Disease ## 3          ad-aging-brain/ad-atac/hq Aging Brain and Alzheimer's Disease ## 4 ad-aging-brain/ad-atac/integration Aging Brain and Alzheimer's Disease ## 5      ad-aging-brain/ad-atac/rna-hq Aging Brain and Alzheimer's Disease ## 6    ad-aging-brain/microglia-states Aging Brain and Alzheimer's Disease ##                                                            subLabel tags ## 1             AD and Aging Prefrontal Cortex Across 427 individuals  10x ## 2                                  snATAC-seq of Epigenomic Erosion  10x ## 3 snATAC-seq - AD and aging prefrontal cortex across 92 individuals  10x ## 4                               Integrated snRNA-seq and snATAC-seq  10x ## 5  snRNA-seq - AD and aging prefrontal cortex across 92 individuals  10x ## 6                                Microglia States In The Aged Brain  10x ##                         body_parts                   diseases ## 1 brain, cortex, prefrontal cortex        Alzheimer’s disease ## 2                            brain Alzheimer's disease|parent ## 3                            brain Alzheimer's disease|parent ## 4                            brain Alzheimer's disease|parent ## 5                            brain Alzheimer's disease|parent ## 6 brain, cortex, prefrontal cortex        Alzheimer’s disease ##                   organisms      projects life_stages domains sources ## 1        Human (H. sapiens)        ROSMAP               atlas      NA ## 2 Human (H. sapiens)|parent ROSMAP|parent                          NA ## 3 Human (H. sapiens)|parent ROSMAP|parent                          NA ## 4 Human (H. sapiens)|parent ROSMAP|parent                          NA ## 5 Human (H. sapiens)|parent ROSMAP|parent                          NA ## 6        Human (H. sapiens)        ROSMAP               atlas      NA ##   sampleCount assays              matrix               barcode ## 1     2327742        ad430_matrix.mtx.gz ad430_barcodes.tsv.gz ## 2      437098              matrix.mtx.gz       barcodes.tsv.gz ## 3      171119              matrix.mtx.gz       barcodes.tsv.gz ## 4      586083              matrix.mtx.gz       barcodes.tsv.gz ## 5      414964              matrix.mtx.gz       barcodes.tsv.gz ## 6      152459              matrix.mtx.gz       barcodes.tsv.gz ##                 feature matrixType ## 1 ad430_features.tsv.gz        10x ## 2       features.tsv.gz        10x ## 3       features.tsv.gz        10x ## 4       features.tsv.gz        10x ## 5       features.tsv.gz        10x ## 6       features.tsv.gz        10x ##                                                                                                                        title ## 1 Single-cell atlas reveals correlates of high cognitive function, dementia, and resilience to Alzheimer's disease pathology ## 2                       Epigenomic dissection of Alzheimer's disease pinpoints causal variants and reveals epigenome erosion ## 3                       Epigenomic dissection of Alzheimer's disease pinpoints causal variants and reveals epigenome erosion ## 4                       Epigenomic dissection of Alzheimer's disease pinpoints causal variants and reveals epigenome erosion ## 5                       Epigenomic dissection of Alzheimer's disease pinpoints causal variants and reveals epigenome erosion ## 6                                                         Human Microglial State Dynamics in Alzheimer's Disease Progression ##   paper ## 1       ## 2       ## 3       ## 4       ## 5       ## 6       ##                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      abstract ## 1                                                                                                                                                                                                                                           \\nAlzheimer's disease (AD) is the most common cause of dementia worldwide, but\\nthe molecular and cellular mechanisms underlying cognitive impairment remain\\npoorly understood. To address this, we generated a single-cell transcriptomic\\natlas of the aged human prefrontal cortex covering 2.3 million cells from\\npost-mortem human brain samples of 427 individuals with varying degrees of AD\\npathology and cognitive impairment. Our analyses identified AD\\npathology-associated alterations shared between excitatory neuron subtypes,\\nrevealed a coordinated increase of the cohesin complex and DNA damage response\\nfactors in excitatory neurons and in oligodendrocytes, and uncovered genes and\\npathways associated with high cognitive function, dementia, and resilience to\\nAD pathology. Furthermore, we identified selectively vulnerable somatostatin\\ninhibitory neuron subtypes depleted in AD, discovered two distinct groups of\\ninhibitory neurons that were more abundant in individuals with preserved high\\ncognitive function late in life, and uncovered a link between inhibitory\\nneurons and resilience to AD pathology.\\n ## 2                                                                                                                                                                                                                                                                \\nRecent work has identified dozens of non-coding loci for Alzheimer's disease\\n(AD) risk, but their mechanisms and AD transcriptional regulatory circuitry are\\npoorly understood. Here, we profile epigenomic and transcriptomic landscapes of\\n850k nuclei from prefrontal cortexes of 92 individuals with and without AD to\\nbuild a map of the brain regulome, including epigenomic profiles,\\ntranscriptional regulators, co-accessibility modules, and peak-to-gene links in\\na cell-type-specific manner. We develop methods for multimodal integration and\\ndetecting regulatory modules using peak-to-gene linking. We show AD risk loci\\nare enriched in microglial enhancers and for specific TFs including SPI1, ELF2,\\nand RUNX1. We detect 9,628 cell-type-specific ATAC-QTL loci, which we integrate\\nalongside peak-to-gene links to prioritize AD variant regulatory circuits. We\\nreport differential accessibility of regulatory modules in late-AD in glia and\\nin early-AD in neurons. Strikingly, late-stage AD brains show global epigenome\\ndysregulation indicative of epigenome erosion and cell identity loss.\\n ## 3                                                                                                                                                                                                                                                                \\nRecent work has identified dozens of non-coding loci for Alzheimer's disease\\n(AD) risk, but their mechanisms and AD transcriptional regulatory circuitry are\\npoorly understood. Here, we profile epigenomic and transcriptomic landscapes of\\n850k nuclei from prefrontal cortexes of 92 individuals with and without AD to\\nbuild a map of the brain regulome, including epigenomic profiles,\\ntranscriptional regulators, co-accessibility modules, and peak-to-gene links in\\na cell-type-specific manner. We develop methods for multimodal integration and\\ndetecting regulatory modules using peak-to-gene linking. We show AD risk loci\\nare enriched in microglial enhancers and for specific TFs including SPI1, ELF2,\\nand RUNX1. We detect 9,628 cell-type-specific ATAC-QTL loci, which we integrate\\nalongside peak-to-gene links to prioritize AD variant regulatory circuits. We\\nreport differential accessibility of regulatory modules in late-AD in glia and\\nin early-AD in neurons. Strikingly, late-stage AD brains show global epigenome\\ndysregulation indicative of epigenome erosion and cell identity loss.\\n ## 4                                                                                                                                                                                                                                                                \\nRecent work has identified dozens of non-coding loci for Alzheimer's disease\\n(AD) risk, but their mechanisms and AD transcriptional regulatory circuitry are\\npoorly understood. Here, we profile epigenomic and transcriptomic landscapes of\\n850k nuclei from prefrontal cortexes of 92 individuals with and without AD to\\nbuild a map of the brain regulome, including epigenomic profiles,\\ntranscriptional regulators, co-accessibility modules, and peak-to-gene links in\\na cell-type-specific manner. We develop methods for multimodal integration and\\ndetecting regulatory modules using peak-to-gene linking. We show AD risk loci\\nare enriched in microglial enhancers and for specific TFs including SPI1, ELF2,\\nand RUNX1. We detect 9,628 cell-type-specific ATAC-QTL loci, which we integrate\\nalongside peak-to-gene links to prioritize AD variant regulatory circuits. We\\nreport differential accessibility of regulatory modules in late-AD in glia and\\nin early-AD in neurons. Strikingly, late-stage AD brains show global epigenome\\ndysregulation indicative of epigenome erosion and cell identity loss.\\n ## 5                                                                                                                                                                                                                                                                \\nRecent work has identified dozens of non-coding loci for Alzheimer's disease\\n(AD) risk, but their mechanisms and AD transcriptional regulatory circuitry are\\npoorly understood. Here, we profile epigenomic and transcriptomic landscapes of\\n850k nuclei from prefrontal cortexes of 92 individuals with and without AD to\\nbuild a map of the brain regulome, including epigenomic profiles,\\ntranscriptional regulators, co-accessibility modules, and peak-to-gene links in\\na cell-type-specific manner. We develop methods for multimodal integration and\\ndetecting regulatory modules using peak-to-gene linking. We show AD risk loci\\nare enriched in microglial enhancers and for specific TFs including SPI1, ELF2,\\nand RUNX1. We detect 9,628 cell-type-specific ATAC-QTL loci, which we integrate\\nalongside peak-to-gene links to prioritize AD variant regulatory circuits. We\\nreport differential accessibility of regulatory modules in late-AD in glia and\\nin early-AD in neurons. Strikingly, late-stage AD brains show global epigenome\\ndysregulation indicative of epigenome erosion and cell identity loss.\\n ## 6 \\nAltered microglial states affect neuroinflammation, neurodegeneration, and\\ndisease, but remain poorly understood. Here, we report 194k single-nucleus\\nmicroglial transcriptomes and epigenomes across 443 human subjects, and diverse\\nAlzheimer's disease (AD) pathological phenotypes. We annotate 12 microglial\\ntranscriptional states, including AD-dysregulated homeostatic, inflammatory,\\nand lipid-processing states. We identify 1,542 AD-differentially-expressed\\ngenes, including both microglia-state-specific and disease-stage-specific\\nalterations. By integrating epigenomic, transcriptomic, and motif information,\\nwe infer upstream regulators of microglial cell states, gene-regulatory\\nnetworks, enhancer-gene links, and transcription factor-driven microglial state\\ntransitions. We demonstrate that ectopic expression of our predicted\\nhomeostatic-state activators induces homeostatic features in human iPSC-derived\\nmicroglia-like cells, while inhibiting activators of inflammation can block\\ninflammatory progression. Lastly, we pinpoint the expression of AD-risk genes\\nin microglial states and differential expression of AD-risk genes and their\\nregulators during AD progression. Overall, we provide insights underlying\\nmicroglial states, including state-specific and AD-stage-specific microglial\\nalterations at unprecedented resolution. \\n ##   unit                         coords ## 1      UMAP_coordinates.coords.tsv.gz ## 2      UMAP_coordinates.coords.tsv.gz ## 3      UMAP_coordinates.coords.tsv.gz ## 4      UMAP_coordinates.coords.tsv.gz ## 5      UMAP_coordinates.coords.tsv.gz ## 6      UMAP_coordinates.coords.tsv.gzmethodsn<p>\\nWe selected 427 individuals from the Religious Orders Study and Rush Memory and\\nAging Project (ROSMAP), both ongoing longitudinal clinical-pathologic cohort\\nstudies of aging and dementia, in which all participants are brain donors. The\\nstudies include clinical data collected annually, detailed post- mortem\\npathological evaluations, and extensive genetic, epigenomic, transcriptomic,\\nproteomic, and metabolomic bulk-tissue profiling (DA et al., 2018) .\\nIndividuals were balanced between sexes (male:female ratio 212:215). Informed\\nconsent was obtained from each subject, and the Religious Orders Study and Rush\\nMemory and Aging Project were each approved by an Institutional Review Board\\n(IRB) of Rush University Medical Center. Participants also signed an Anatomic\\nGift Act, and a repository consent to allow their data to be repurposed.\\n\\n<p>\\nFor droplet-based snRNA-seq, libraries were prepared using the Chromium Single\\nCell 3′ Reagent Kits v3 according to the manufacturer's protocol (10x\\nGenomics). The generated snRNA-seq libraries were sequenced using NextSeq\\n500/550 High Output v2 kits (150 cycles) or NovaSeq 6000 S2 Reagent Kits. Gene\\ncounts were obtained by aligning reads to the GRCh38 genome using Cell Ranger\\nsoftware (v.3.0.2) (10x Genomics) (Zheng et al., 2017). To account for\\nunspliced nuclear transcripts, reads mapping to pre-mRNA were counted. After\\nquantification of pre-mRNA using the Cell Ranger count pipeline, the Cell\\nRanger aggr pipeline was used to aggregate all libraries (without equalizing\\nthe read depth between groups) to generate a gene-count matrix. The Cell Ranger\\n3.0 default parameters were used to call cell barcodes. We used SCANPY (Wolf,\\nAngerer and Theis, 2018) to process and cluster the expression profiles and\\ninfer cell identities of major cell classes. To remove doublets and\\npoor-quality cells, cells were excluded from subsequent analysis if they were\\nextreme outliers (observations outside the range [Q1 – k(Q3 – Q1),Q3 +\\nk(Q3-Q1)], with k=3 and Q1 and Q3 as the lower and upper quartiles) in terms of\\nnumber of genes, number of unique molecular identifiers (UMIs), and percentage\\nof mitochondrial genes. In addition, we called doublets using Scrublet (Wolock,\\nLopez and Klein, 2019) and flagged and removed cells that were labeled as\\ndoublets.\\nn<p>\\nWe selected 427 individuals from ROSMAP (Mathys et al., co-submitted) and\\nperformed snRNA-seq on the prefrontal cortex region of these samples. For 92 of\\nthe samples, we carried out snATAC profiling as well. The 92 samples are with a\\nvariety of AD-related pathological and cognitive measurements, and are grouped\\ninto 48 controls (22 female; 26 male), 29 early-stage AD (15 female; 14 male)\\nand 15 late-stage AD (9 female; 6 male) samples. The ages between AD groups are\\nmatched, without significant difference).  \\n\\n<p>\\nWe used \"cellranger-atac mkfastq\" (V1.1.0) to demultiplex BCL files into Fastq\\nraw sequencing data, and then ran \"cellranger-atac count\" to map the reads onto\\nhuman reference genome (GRCh38) and obtain the fragment file of each sample. We\\nthen utilized ArchR (V1.0.1) to process the snATAC-seq data, using fragment\\nfiles as input (Granja et al. 2021). We performed the first round of doublet\\nremoval within each sample using the \"filterDoublets\" function.\\n\\n<p>\\nFor the \"high-quality cell\" analysis, we selected the cells with TSS enrichment\\n> 6 and number of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=4, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We estimated gene expression score using ArchR, and then\\nquantified the cell type signature of each cluster based on PsychENCODE marker\\ngenes (PsychENCODE Consortium et al. 2015). We calculated the mean of gene\\nscores of all the cell marker genes in each cell type for each cluster, which\\nwere then used to assign cell types. We performed a second round of doublet\\nremoval at cluster level by discarding the cell clusters that show ambiguous\\ncell type marker signal and meanwhile locate between two clusters that show\\nclear cell type signature.\\n\\n<p>\\nFor the \"erosion\" analysis, we selected the cells with TSS enrichment > 1 and\\nnumber of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=3, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We performed a second round of doublet removal at cluster\\nlevel using the same strategy as \"TSS enrichment > 6\" analysis described above. \\nn<p>\\nWe selected 427 individuals from ROSMAP (Mathys et al., co-submitted) and\\nperformed snRNA-seq on the prefrontal cortex region of these samples. For 92 of\\nthe samples, we carried out snATAC profiling as well. The 92 samples are with a\\nvariety of AD-related pathological and cognitive measurements, and are grouped\\ninto 48 controls (22 female; 26 male), 29 early-stage AD (15 female; 14 male)\\nand 15 late-stage AD (9 female; 6 male) samples. The ages between AD groups are\\nmatched, without significant difference).  \\n\\n<p>\\nWe used \"cellranger-atac mkfastq\" (V1.1.0) to demultiplex BCL files into Fastq\\nraw sequencing data, and then ran \"cellranger-atac count\" to map the reads onto\\nhuman reference genome (GRCh38) and obtain the fragment file of each sample. We\\nthen utilized ArchR (V1.0.1) to process the snATAC-seq data, using fragment\\nfiles as input (Granja et al. 2021). We performed the first round of doublet\\nremoval within each sample using the \"filterDoublets\" function.\\n\\n<p>\\nFor the \"high-quality cell\" analysis, we selected the cells with TSS enrichment\\n> 6 and number of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=4, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We estimated gene expression score using ArchR, and then\\nquantified the cell type signature of each cluster based on PsychENCODE marker\\ngenes (PsychENCODE Consortium et al. 2015). We calculated the mean of gene\\nscores of all the cell marker genes in each cell type for each cluster, which\\nwere then used to assign cell types. We performed a second round of doublet\\nremoval at cluster level by discarding the cell clusters that show ambiguous\\ncell type marker signal and meanwhile locate between two clusters that show\\nclear cell type signature.\\n\\n<p>\\nFor the \"erosion\" analysis, we selected the cells with TSS enrichment > 1 and\\nnumber of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=3, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We performed a second round of doublet removal at cluster\\nlevel using the same strategy as \"TSS enrichment > 6\" analysis described above. \\nn<p>\\nWe selected 427 individuals from ROSMAP (Mathys et al., co-submitted) and\\nperformed snRNA-seq on the prefrontal cortex region of these samples. For 92 of\\nthe samples, we carried out snATAC profiling as well. The 92 samples are with a\\nvariety of AD-related pathological and cognitive measurements, and are grouped\\ninto 48 controls (22 female; 26 male), 29 early-stage AD (15 female; 14 male)\\nand 15 late-stage AD (9 female; 6 male) samples. The ages between AD groups are\\nmatched, without significant difference).  \\n\\n<p>\\nWe used \"cellranger-atac mkfastq\" (V1.1.0) to demultiplex BCL files into Fastq\\nraw sequencing data, and then ran \"cellranger-atac count\" to map the reads onto\\nhuman reference genome (GRCh38) and obtain the fragment file of each sample. We\\nthen utilized ArchR (V1.0.1) to process the snATAC-seq data, using fragment\\nfiles as input (Granja et al. 2021). We performed the first round of doublet\\nremoval within each sample using the \"filterDoublets\" function.\\n\\n<p>\\nFor the \"high-quality cell\" analysis, we selected the cells with TSS enrichment\\n> 6 and number of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=4, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We estimated gene expression score using ArchR, and then\\nquantified the cell type signature of each cluster based on PsychENCODE marker\\ngenes (PsychENCODE Consortium et al. 2015). We calculated the mean of gene\\nscores of all the cell marker genes in each cell type for each cluster, which\\nwere then used to assign cell types. We performed a second round of doublet\\nremoval at cluster level by discarding the cell clusters that show ambiguous\\ncell type marker signal and meanwhile locate between two clusters that show\\nclear cell type signature.\\n\\n<p>\\nFor the \"erosion\" analysis, we selected the cells with TSS enrichment > 1 and\\nnumber of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=3, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We performed a second round of doublet removal at cluster\\nlevel using the same strategy as \"TSS enrichment > 6\" analysis described above. \\nn<p>\\nWe selected 427 individuals from ROSMAP (Mathys et al., co-submitted) and\\nperformed snRNA-seq on the prefrontal cortex region of these samples. For 92 of\\nthe samples, we carried out snATAC profiling as well. The 92 samples are with a\\nvariety of AD-related pathological and cognitive measurements, and are grouped\\ninto 48 controls (22 female; 26 male), 29 early-stage AD (15 female; 14 male)\\nand 15 late-stage AD (9 female; 6 male) samples. The ages between AD groups are\\nmatched, without significant difference).  \\n\\n<p>\\nWe used \"cellranger-atac mkfastq\" (V1.1.0) to demultiplex BCL files into Fastq\\nraw sequencing data, and then ran \"cellranger-atac count\" to map the reads onto\\nhuman reference genome (GRCh38) and obtain the fragment file of each sample. We\\nthen utilized ArchR (V1.0.1) to process the snATAC-seq data, using fragment\\nfiles as input (Granja et al. 2021). We performed the first round of doublet\\nremoval within each sample using the \"filterDoublets\" function.\\n\\n<p>\\nFor the \"high-quality cell\" analysis, we selected the cells with TSS enrichment\\n> 6 and number of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=4, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We estimated gene expression score using ArchR, and then\\nquantified the cell type signature of each cluster based on PsychENCODE marker\\ngenes (PsychENCODE Consortium et al. 2015). We calculated the mean of gene\\nscores of all the cell marker genes in each cell type for each cluster, which\\nwere then used to assign cell types. We performed a second round of doublet\\nremoval at cluster level by discarding the cell clusters that show ambiguous\\ncell type marker signal and meanwhile locate between two clusters that show\\nclear cell type signature.\\n\\n<p>\\nFor the \"erosion\" analysis, we selected the cells with TSS enrichment > 1 and\\nnumber of fragments between 1000 to 100,000. We performed Iterative LSI\\ndimension reduction and clustering using a 500 bp tile matrix, with parameters\\n\"iterations=3, resolution=0.2, varFeat=50000\". Cell embedding visualization was\\nperformed using UMAP. We performed a second round of doublet removal at cluster\\nlevel using the same strategy as \"TSS enrichment > 6\" analysis described above. \\n ## 6 \\n<p>\\nNuclei isolation from frozen postmortem brain tissue: We isolated nuclei from\\nfrozen postmortem brain tissue as previously described (Mathys et al., Nature\\n2019) with some modifications. Briefly, we homogenized the brain tissue in 700\\nμL Homogenization buffer and filtered the homogenate through a 40 μm cell\\nstrainer (Corning, NY), added 450 μL Working solution and loaded it as a 25%\\nOptiPrep solution on top of a 30%/40% OptiPrep density gradient (750 μL 30%\\nOptiPrep solution, 300 μL 40% OptiPrep solution). We separated the nuclei by\\ncentrifugation using a fixed rotor, tabletop centrifuge (5 minutes, 10000g,\\n4˚C). We collected the nuclei pellet at the 30%/40% interphase, transferred it\\non a new tube, washed it twice with 1mL ice-cold PBS containing 0.04% BSA\\n(centrifuged 3 minutes, 300g, 4˚C) and finally resuspended it in 100 μL PBS\\ncontaining 0.04% BSA. After counting, we diluted the nuclei to a concentration\\nof 1000 nuclei per μL. We used the isolated nuclei for the droplet-based 10x\\nscRNA-seq assay, targeting 5000 nuclei per brain region and individual, and\\nprepared libraries using the Chromium Single-Cell 3′ Reagent Kits v3 (10x\\nGenomics, Pleasanton, CA) according to the manufacturer's protocol. We\\nsequenced pooled libraries using the NovaSeq 6000 S2 sequencing kits (100\\ncycles, Illumina).\\n\\n<p>\\nsnRNA-seq data processing: We mapped the raw reads to human reference genome\\nversion GRCh38 and quantified unique molecular identifiers (UMIs) counts for\\neach gene in each cell using CellRanger software v3.0.1 (10x Genomics). We\\npre-processed this count matrix (gene-cell) using the Seurat R package\\nv.4.0.3). We kept the cells with more than 500 UMIs and less than 5%\\nmitochondrial genes, and genes with expression at least in 50 cells for further\\nanalysis. We normalized the counts by the total UMI counts for each cell,\\nmultiplied by 10,000, and then log-transformed. We used the top 2,000 highly\\nvariable genes for principal component analysis (PCA) and  the top 30 principal\\ncomponents (PCs) as inputs to perform UMAP. We used Harmony for batch\\ncorrection. We used the resolution as 0.5 to identify clusters. We used\\nDoubletFinder to estimate the potential doublets formed by two or more cells\\nbased on the by default parameters. The cells with high doublet scores (0.2 as\\ncutoff) were removed for further analysis.After generating clusters, one\\ncluster showing high expression of markers of two or more cell types was also\\ntreated as doublets and removed for further analysis.\\n\\n<p>\\nIn Silico Sorting to enrich immune cells and cell type annotation in snRNA-seq\\ndata: For the full datasets with all cell types (2.8 million cells), we first\\nannotated the cell type for each cluster based on three widely-used canonical\\nmarkers of major cell types in the brain (including excitatory and inhibitory\\nneurons, astrocytes, oligodendrocytes, OPCs, microglia and vascular cells) and\\na list of markers for immune cells. We also tested the enrichment of a large\\nset of markers in highly expressed genes for each cluster to confirm the\\nannotation based on several marker genes. We next calculated the cell type\\nscores (i.e. astrocyte, oligodendrocyte, microglia, etc) for each cell, which\\nwere represented by the average expression of a group of markers for each cell\\ntype. The cells were then selected as microglia/immune cells for further\\nintegrative analysis if and only if (1) the clusters that the cells belong to\\nwere annotated as microglia/immune cells; and (2) the cells had the highest\\nscore for microglia/immune cells, and 3) the score for microglia/immune cells\\nwas 2-fold higher than the second highest score. For the selected\\nmicroglia/immune cells, we followed the same pipeline to perform dimensional\\nreduction and clustering with the same parameters as full datasets. We used the\\nWilcoxon rank-sum test in Seurat with customized parameters (min.pct = 0.25,\\nlogfc.threshold = 0.25) to identify highly expressed genes for each cluster\\ncompared to all cells from other clusters.\\n ##   geo ## 1     ## 2     ## 3     ## 4     ## 5     ## 6 # the number of datasets nrow(ucsc.cb.samples) ## [1] 1318 # available species unique(unlist(sapply(unique(gsub(pattern = \"\\\\|parent\", replacement = \"\", x = ucsc.cb.samples$organisms)), function(x) {   unlist(strsplit(x = x, split = \", \")) }))) ##  [1] \"Human (H. sapiens)\"                 \"Mouse (M. musculus)\"                ##  [3] \"Rhesus macaque (M. mulatta)\"        \"Chimp (P. troglodytes)\"             ##  [5] \"Brine Shrimp (A. franciscana)\"      \"Canis lupus familiaris\"             ##  [7] \"Dog (C. familiaris)\"                \"Human (H. Sapiens)\"                 ##  [9] \"C. intestinalis\"                    \"C. robusta\"                         ## [11] \"Zebrafish (D. rerio)\"               \"Fruit fly (D. melanogaster)\"        ## [13] \"Horse (E. caballus)\"                \"Hydra vulgaris\"                     ## [15] \"Capitella teleta\"                   \"Spongilla lacustris\"                ## [17] \"H. symbiolongicarpus\"               \"X. tropicalis\"                      ## [19] \"Marmoset (C. jacchus)\"              \"P. leidyi\"                          ## [21] \"Bonobo (P. paniscus)\"               \"Rat (R. norvegicus)\"                ## [23] \"S. mansoni\"                         \"Starlet Sea Anemone (N. vectensis)\" ## [25] \"Nematostella vectensis\"             \"Sea urchin (S. purpuratus)\"         ## [27] \"Mouse lemur (T. microcebus)\"        \"Human-Mouse Xenograft\"              ## [29] \"Xenopus laevis\""},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"summary-attributes-1","dir":"Articles","previous_headings":"UCSC Cell Browser","what":"Summary attributes","title":"DownloadMatrices","text":"GEfetch2R provides StatDBAttribute summary attributes UCSC Cell Browser:","code":"StatDBAttribute(   df = ucsc.cb.samples, filter = c(\"organism\", \"organ\"),   database = \"UCSC\", combine = TRUE ) ## # A tibble: 301 × 3 ## # Groups:   organisms [29] ##    organisms           body_parts        Num ##    <chr>               <chr>           <int> ##  1 human (h. sapiens)  brain             171 ##  2 human (h. sapiens)  eye               111 ##  3 human (h. sapiens)  retina            109 ##  4 mouse (m. musculus) brain              96 ##  5 human (h. sapiens)  lung               63 ##  6 human (h. sapiens)  muscle             46 ##  7 human (h. sapiens)  skeletal muscle    40 ##  8 human (h. sapiens)  cortex             38 ##  9 human (h. sapiens)  blood              34 ## 10 human (h. sapiens)  heart              32 ## # ℹ 291 more rows"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"extract-metadata-2","dir":"Articles","previous_headings":"UCSC Cell Browser","what":"Extract metadata","title":"DownloadMatrices","text":"GEfetch2R provides ExtractCBDatasets filter metadata collection, sub-collection, organ, disease status, organism, project cell number (available values attributes can obtained StatDBAttribute except cell number). attributes except cell number support fuzzy match fuzzy.match, useful selecting datasets. Show metadata:","code":"hbb.sample.df <- ExtractCBDatasets(   all.samples.df = ucsc.cb.samples, organ = c(\"skeletal muscle\"),   organism = \"Human (H. sapiens)\", cell.num = c(1000, 2000) ) head(hbb.sample.df) ##                                                 name      shortLabel ## 1 skeletal-muscle/embryonic/embryonic-wk7-8-myogenic Skeletal Muscle ## 2       skeletal-muscle/fetal/fetal-wk12-14-hindlimb Skeletal Muscle ## 3           skeletal-muscle/in-vitro/hx-protocol-wk4 Skeletal Muscle ## 4  skeletal-muscle/in-vitro/hx-protocol-wk6-myogenic Skeletal Muscle ## 5  skeletal-muscle/in-vitro/hx-protocol-wk8-myogenic Skeletal Muscle ## 6         skeletal-muscle/juvenile/juvenile-hindlimb Skeletal Muscle ##                             subLabel tags                     body_parts ## 1 Embryonic Week 7-8 Myogenic Subset      muscle, skeletal muscle|parent ## 2   Fetal Week 12-14 Hindlimb Muscle      muscle, skeletal muscle|parent ## 3         HX Protocol Week 4 Culture      muscle, skeletal muscle|parent ## 4 HX Protocol Week 6 Myogenic Subset      muscle, skeletal muscle|parent ## 5 HX Protocol Week 8 Myogenic Subset      muscle, skeletal muscle|parent ## 6           Juvenile Hindlimb Muscle      muscle, skeletal muscle|parent ##         diseases                 organisms projects life_stages domains sources ## 1 Healthy|parent Human (H. sapiens)|parent                                   NA ## 2 Healthy|parent Human (H. sapiens)|parent                                   NA ## 3 Healthy|parent Human (H. sapiens)|parent                                   NA ## 4 Healthy|parent Human (H. sapiens)|parent                                   NA ## 5 Healthy|parent Human (H. sapiens)|parent                                   NA ## 6 Healthy|parent Human (H. sapiens)|parent                                   NA ##   sampleCount assays            matrix barcode feature matrixType ## 1        1448        exprMatrix.tsv.gz                     matrix ## 2        1545        exprMatrix.tsv.gz                     matrix ## 3        1562        exprMatrix.tsv.gz                     matrix ## 4        1598        exprMatrix.tsv.gz                     matrix ## 5        1350        exprMatrix.tsv.gz                     matrix ## 6        1982        exprMatrix.tsv.gz                     matrix ##                                title paper ## 1 Embryonic Week 7-8 Myogenic Subset       ## 2   Fetal Week 12-14 Hindlimb Muscle       ## 3         HX Protocol Week 4 Culture       ## 4 HX Protocol Week 6 Myogenic Subset       ## 5 HX Protocol Week 8 Myogenic Subset       ## 6           Juvenile Hindlimb Muscle       ##                                                                                                                                                                                                                                                                                           abstract ## 1 \\nSingle cell transcriptomes of the skeletal muscle (SkM) lineage from hindlimbs\\nof 7-8 week human embryos (Carnegie Stage: CS19-21). Cells are subjected to\\nre-clustering to reveal potential heterogeneity within the myogenic subset.\\nThree independent biological samples are included.\\n ## 2                                             \\nSingle cell transcriptomes of the total skeletal muscle tissues of\\nhindlimbs from human fetuses of 12-14 weeks of development. Hematopoietic and\\nendothelial cells are pre-excluded by FACS. Two independent biological samples\\nare included.\\n ## 3                           \\nSingle cell transcriptomes of cell cultures differentiated from human\\npluripotent stem cells (hPSCs) following the HX protocol (Xi et al., Cell Rep,\\n2017) for 4 weeks. Cells are either non-enriched or enriched using an\\nendogenous PAX7-driven GFP reporter.\\n ## 4 \\nSingle cell transcriptomes of the skeletal muscle (SkM) lineage from human\\npluripotent stem cell (hPSCs) differentiated for 6 weeks using the HX protocol\\n(Xi et al., Cell Rep, 2017). Cells are subjected to re-clustering to reveal\\npotential heterogeneity within the myogenic subset.\\n ## 5 \\nSingle cell transcriptomes of the skeletal muscle (SkM) lineage from human\\npluripotent stem cell (hPSCs) differentiated for 8 weeks using the HX protocol\\n(Xi et al., Cell Rep, 2017). Cells are subjected to re-clustering to reveal\\npotential heterogeneity within the myogenic subset.\\n ## 6                                                           \\nSingle cell transcriptomes of the gastrocnemius or quadriceps muscles from\\nhuman juveniles. Hematopoietic and endothelial cells are pre-excluded by FACS.\\nTwo independent biological samples at 7 and 11 years old are included.\\n ##   unit                    coords ## 1      Seurat_tsne.coords.tsv.gz ## 2      Seurat_tsne.coords.tsv.gz ## 3      Seurat_tsne.coords.tsv.gz ## 4      Seurat_tsne.coords.tsv.gz ## 5      Seurat_tsne.coords.tsv.gz ## 6      Seurat_tsne.coords.tsv.gzmethods ## 1 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 2 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 3 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 4 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 5 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 6 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ##   geo ## 1     ## 2     ## 3     ## 4     ## 5     ## 6"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"extract-cell-type-composition-1","dir":"Articles","previous_headings":"UCSC Cell Browser","what":"Extract cell type composition","title":"DownloadMatrices","text":"GEfetch2R provides ExtractCBComposition extract cell type annotation composition. Show extracted cell type annotation composition:","code":"hbb.sample.ct <- ExtractCBComposition(   json.folder = \"/Volumes/soyabean/GEfetch2R/cell_browser/json\",   sample.df = hbb.sample.df ) head(hbb.sample.ct) ##        shortLabel                           subLabel  CellType Num tags ## 1 Skeletal Muscle Embryonic Week 7-8 Myogenic Subset        MP 785      ## 2 Skeletal Muscle Embryonic Week 7-8 Myogenic Subset        MB 303      ## 3 Skeletal Muscle Embryonic Week 7-8 Myogenic Subset SkM.Mesen 264      ## 4 Skeletal Muscle Embryonic Week 7-8 Myogenic Subset        MC  96      ## 5 Skeletal Muscle   Fetal Week 12-14 Hindlimb Muscle       MSC 822      ## 6 Skeletal Muscle   Fetal Week 12-14 Hindlimb Muscle       SkM 554      ##                       body_parts       diseases                 organisms ## 1 muscle, skeletal muscle|parent Healthy|parent Human (H. sapiens)|parent ## 2 muscle, skeletal muscle|parent Healthy|parent Human (H. sapiens)|parent ## 3 muscle, skeletal muscle|parent Healthy|parent Human (H. sapiens)|parent ## 4 muscle, skeletal muscle|parent Healthy|parent Human (H. sapiens)|parent ## 5 muscle, skeletal muscle|parent Healthy|parent Human (H. sapiens)|parent ## 6 muscle, skeletal muscle|parent Healthy|parent Human (H. sapiens)|parent ##   projects life_stages domains sources sampleCount assays ## 1                                   NA        1448        ## 2                                   NA        1448        ## 3                                   NA        1448        ## 4                                   NA        1448        ## 5                                   NA        1545        ## 6                                   NA        1545        ##                                title paper ## 1 Embryonic Week 7-8 Myogenic Subset       ## 2 Embryonic Week 7-8 Myogenic Subset       ## 3 Embryonic Week 7-8 Myogenic Subset       ## 4 Embryonic Week 7-8 Myogenic Subset       ## 5   Fetal Week 12-14 Hindlimb Muscle       ## 6   Fetal Week 12-14 Hindlimb Muscle       ##                                                                                                                                                                                                                                                                                           abstract ## 1 \\nSingle cell transcriptomes of the skeletal muscle (SkM) lineage from hindlimbs\\nof 7-8 week human embryos (Carnegie Stage: CS19-21). Cells are subjected to\\nre-clustering to reveal potential heterogeneity within the myogenic subset.\\nThree independent biological samples are included.\\n ## 2 \\nSingle cell transcriptomes of the skeletal muscle (SkM) lineage from hindlimbs\\nof 7-8 week human embryos (Carnegie Stage: CS19-21). Cells are subjected to\\nre-clustering to reveal potential heterogeneity within the myogenic subset.\\nThree independent biological samples are included.\\n ## 3 \\nSingle cell transcriptomes of the skeletal muscle (SkM) lineage from hindlimbs\\nof 7-8 week human embryos (Carnegie Stage: CS19-21). Cells are subjected to\\nre-clustering to reveal potential heterogeneity within the myogenic subset.\\nThree independent biological samples are included.\\n ## 4 \\nSingle cell transcriptomes of the skeletal muscle (SkM) lineage from hindlimbs\\nof 7-8 week human embryos (Carnegie Stage: CS19-21). Cells are subjected to\\nre-clustering to reveal potential heterogeneity within the myogenic subset.\\nThree independent biological samples are included.\\n ## 5                                             \\nSingle cell transcriptomes of the total skeletal muscle tissues of\\nhindlimbs from human fetuses of 12-14 weeks of development. Hematopoietic and\\nendothelial cells are pre-excluded by FACS. Two independent biological samples\\nare included.\\n ## 6                                             \\nSingle cell transcriptomes of the total skeletal muscle tissues of\\nhindlimbs from human fetuses of 12-14 weeks of development. Hematopoietic and\\nendothelial cells are pre-excluded by FACS. Two independent biological samples\\nare included.\\nmethods ## 1 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 2 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 3 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 4 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 5 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ## 6 <h3>Single cell preparation, cell capture and library construction<\/h3>\\n<p>\\nWhole hindlimbs of developmental week 5-9 human embryos and fetuses (feet\\nexcluded for week 7.75-9), total hindlimb skeletal muscles of week 12-18 human\\nfetuses, and gastrocnemius or quadriceps muscles from juvenile and adult human\\nsubjects were digested into single cells. Dissociated cells were either sorted\\n(fetal week 12 and above) to exclude the hematopoietic and endothelial lineages\\nor directly used for downstream processing. For directed myogenic\\ndifferentiation, human pluripotent stem cells (hPSCs) were differentiated using\\nthree published protocols (HX protocol: Xi et al., Cell Rep, 2017; JC protocol:\\nChal et al., Nat Biotechnol, 2015; MS protocol: Shelton et al., Stem Cell Rep,\\n2014). Cell cultures were dissociated at indicated time points. Cells were\\neither not enriched or sorted based on an endogenous PAX7-driven GFP reporter\\nor cell surface combination of ERBB3+/NGFR+/HNK1- (Hicks, et al., Nat Cell\\nBiol, 2018).\\n<\/p>\\n\\n<p>\\nPrepared single cell solutions were subjected to single cell capture and\\ndroplet formation following instructions in the online Drop-seq protocol v.3.1\\n(<a href=\"http://mccarrolllab.org/download/905/\"\\ntarget=\"_blank\">http://mccarrolllab.org/download/905/<\/a>) and those published\\nin the original Drop-seq paper (Macosko et al., Cell, 2015).\\n<\/p>\\n\\n<h3>Raw read processing and computational analysis of single cell transcriptomes<\/h3>\\n<p>\\nThe raw sequencing reads were processed using the Drop-seq_tools-1.13 pipeline\\nfrom the McCaroll lab\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/releases/tag/v1.13<\/a>),\\nfollowing the general guidelines from the Drop-seq Alignment Cookbook v1.2\\n(<a href=\"https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf\"\\ntarget=\"_blank\">https://github.com/broadinstitute/Drop-seq/files/2425535/Drop-seqAlignmentCookbookv1.2Jan2016.pdf<\/a>)\\n(Macosko et al., Cell, 2015). Indexed reads were aligned to the human reference\\ngenome hg19 and digital gene expression matrices (DGEs) were generated by\\ncounting the number of unique transcripts for each gene associated with each\\ncell barcodes.\\n<\/p>\\n\\n<p>\\nDownstream computational analysis of scRNA-seq data was mainly performed using\\nthe R package Seurat v2.3.3 (<a href=\"https://github.com/satijalab/seurat/releases/tag/v2.3.3\"\\ntarget=\"_blank\">https://github.com/satijalab/seurat/releases/tag/v2.3.3<\/a>)\\n(Butler et al., Nat Biotechnol, 2018) by largely following the standard guidelines from the Satija\\nlab (<a href=\"https://satijalab.org/seurat/\" target=\"_blank\">https://satijalab.org/seurat/<\/a>).\\nSeurat objects were generated with DGEs\\nconstructed as described above. Violin plots of number of expressed genes and\\nunique transcripts (nGene and nUMI, respectively) of each cell were generated\\nand outliers with too high or too low nGene/nUMI were removed to exclude\\npotential cell doublets/aggregates or low quality cells/cell debris,\\nrespectively, based on each object/sample. Raw count data were normalized and\\nscaled with regression on effects from cell cycle (Tirosh et al., Science,\\n2016) and dissociation-associated stress response (van den Brink et al., Nat\\nMethods, 2017). Highly variable genes from each dataset were obtained to\\ncalculate the top variable PCs, which were further used in tSNE dimensional\\nreduction and cell clustering. The skeletal muscle cell cluster from individual\\ndataset was further isolated in silico and subjected to re-clustering to reveal\\npotential myogenic subpopulations. Skeletal muscle stem and progenitor cells\\nfrom different stage in vivo human samples were computationally purified and\\nassembled to construct a trajectory of human myogenesis using diffusion map in\\nSeurat. Myogenic progenitors derived from hPSCs in vitro were aligned to the\\ntrajectory to determine their developmental identities.\\n<\/p>\\n ##   geo ## 1     ## 2     ## 3     ## 4     ## 5     ## 6"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadMatrices.html","id":"load-the-online-datasets-to-seurat","dir":"Articles","previous_headings":"UCSC Cell Browser","what":"Load the online datasets to Seurat","title":"DownloadMatrices","text":"manually check extracted metadata, GEfetch2R provides ParseCBDatasets load online count matrix Seurat. attributes available ExtractCBDatasets also . Please note loading process provided ParseCBDatasets load online count matrix instead downloading local. multiple datasets available, users can choose merge SeuratObject merge. ParseCBDatasets supports extracting subset metadata gene: Show returned SeuratObject:","code":"# parse the whole datasets hbb.sample.seu <- ParseCBDatasets(sample.df = hbb.sample.df) # subset metadata and gene hbb.sample.seu <- ParseCBDatasets(   sample.df = hbb.sample.df, obs.value.filter = \"Cell.Type == 'MP' & Phase == 'G2M'\",   include.genes = c(     \"PAX7\", \"MYF5\", \"C1QTNF3\", \"MYOD1\", \"MYOG\", \"RASSF4\", \"MYH3\", \"MYL4\",     \"TNNT3\", \"PDGFRA\", \"OGN\", \"COL3A1\"   ) ) hbb.sample.seu ## An object of class Seurat  ## 14 features across 5684 samples within 1 assay  ## Active assay: RNA (14 features, 0 variable features)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DownloadObjects","text":"GEfetch2R provides functions users download processed single-cell RNA-seq data Zenodo, CELLxGENE Human Cell Atlas, including RDS, RData, h5ad, h5, loom objects. now, public resources supported returned values:","code":"## Warning: replacing previous import 'LoomExperiment::import' by ## 'reticulate::import' when loading 'GEfetch2R'"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"zenodo","dir":"Articles","previous_headings":"","what":"Zenodo","title":"DownloadObjects","text":"Zenodo contains various types processed objects, SeuratObject clustered annotated, AnnData contains processed results generated scanpy.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"extract-metadata","dir":"Articles","previous_headings":"Zenodo","what":"Extract metadata","title":"DownloadObjects","text":"GEfetch2R provides ExtractZenodoMeta extract dataset metadata, including dataset title, description, available files corresponding md5. Please note dataset restricted access, returned dataframe empty. Show metadata:","code":"# library library(GEfetch2R)  # single doi zebrafish.df <- ExtractZenodoMeta(doi = \"10.5281/zenodo.7243603\") # vector dois multi.dois <- ExtractZenodoMeta(doi = c(\"1111\", \"10.5281/zenodo.7243603\", \"10.5281/zenodo.7244441\")) # single doi zebrafish.df ##                              title ## 1 zebrafish scRNA data set objects ## 2 zebrafish scRNA data set objectsdescription ## 1 <p>Combined and converted scRNA data from http://tome.gs.washington.edu/ (Qiu et al. 2022), see a detailed description of the study here: https://www.nature.com/articles/s41588-022-01018-x<\/p>\\n\\n<p>Data were downloaded from http://tome.gs.washington.edu/ as R rds files, combined into a single Seurat object and converted into loom and AnnData (h5ad) files to be able to analyse with e.g. python scanpy package.<\/p>\\n\\n<p>If you use this data, please cite Farrel et al. 2018, Wagner et al. 2018 and Qiu et al. 2022.<\/p> ## 2 <p>Combined and converted scRNA data from http://tome.gs.washington.edu/ (Qiu et al. 2022), see a detailed description of the study here: https://www.nature.com/articles/s41588-022-01018-x<\/p>\\n\\n<p>Data were downloaded from http://tome.gs.washington.edu/ as R rds files, combined into a single Seurat object and converted into loom and AnnData (h5ad) files to be able to analyse with e.g. python scanpy package.<\/p>\\n\\n<p>If you use this data, please cite Farrel et al. 2018, Wagner et al. 2018 and Qiu et al. 2022.<\/p> ##                                                                         url ## 1  https://zenodo.org/api/records/7243603/files/zebrafish_data.h5ad/content ## 2 https://zenodo.org/api/records/7243603/files/zebrafish_data.RData/content ##               filename                              md5   license ## 1  zebrafish_data.h5ad 124f2229128918b411a7dc7931558f97 cc-by-4.0 ## 2 zebrafish_data.RData a08c3ebd285b370fcf34cf2f8f9bdb59 cc-by-4.0 # vector dois multi.dois ##                              title ## 1 zebrafish scRNA data set objects ## 2 zebrafish scRNA data set objects ## 3      frog scRNA data set objects ## 4      frog scRNA data set objectsdescription ## 1 <p>Combined and converted scRNA data from http://tome.gs.washington.edu/ (Qiu et al. 2022), see a detailed description of the study here: https://www.nature.com/articles/s41588-022-01018-x<\/p>\\n\\n<p>Data were downloaded from http://tome.gs.washington.edu/ as R rds files, combined into a single Seurat object and converted into loom and AnnData (h5ad) files to be able to analyse with e.g. python scanpy package.<\/p>\\n\\n<p>If you use this data, please cite Farrel et al. 2018, Wagner et al. 2018 and Qiu et al. 2022.<\/p> ## 2 <p>Combined and converted scRNA data from http://tome.gs.washington.edu/ (Qiu et al. 2022), see a detailed description of the study here: https://www.nature.com/articles/s41588-022-01018-x<\/p>\\n\\n<p>Data were downloaded from http://tome.gs.washington.edu/ as R rds files, combined into a single Seurat object and converted into loom and AnnData (h5ad) files to be able to analyse with e.g. python scanpy package.<\/p>\\n\\n<p>If you use this data, please cite Farrel et al. 2018, Wagner et al. 2018 and Qiu et al. 2022.<\/p> ## 3                     <p>Combined and converted scRNA data from http://tome.gs.washington.edu/ (Qiu et al. 2022), see a detailed description of the study here: https://www.nature.com/articles/s41588-022-01018-x<\/p>\\n\\n<p>Data were downloaded from http://tome.gs.washington.edu/ as R rds files, combined into a single Seurat object and converted into loom and AnnData (h5ad) files to be able to analyse with e.g. python scanpy package.<\/p>\\n\\n<p>If you use this data, please cite Briggs et al. 2018 and Qiu et al. 2022.<\/p> ## 4                     <p>Combined and converted scRNA data from http://tome.gs.washington.edu/ (Qiu et al. 2022), see a detailed description of the study here: https://www.nature.com/articles/s41588-022-01018-x<\/p>\\n\\n<p>Data were downloaded from http://tome.gs.washington.edu/ as R rds files, combined into a single Seurat object and converted into loom and AnnData (h5ad) files to be able to analyse with e.g. python scanpy package.<\/p>\\n\\n<p>If you use this data, please cite Briggs et al. 2018 and Qiu et al. 2022.<\/p> ##                                                                         url ## 1  https://zenodo.org/api/records/7243603/files/zebrafish_data.h5ad/content ## 2 https://zenodo.org/api/records/7243603/files/zebrafish_data.RData/content ## 3       https://zenodo.org/api/records/7244441/files/frog_data.h5ad/content ## 4      https://zenodo.org/api/records/7244441/files/frog_data.RData/content ##               filename                              md5   license ## 1  zebrafish_data.h5ad 124f2229128918b411a7dc7931558f97 cc-by-4.0 ## 2 zebrafish_data.RData a08c3ebd285b370fcf34cf2f8f9bdb59 cc-by-4.0 ## 3       frog_data.h5ad 7be7d6ff024ab2c8579b4d0edb2428e3 cc-by-4.0 ## 4      frog_data.RData c80f46320c0cff9e341bed195f12c3b1 cc-by-4.0"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"download-object-and-load-to-r","dir":"Articles","previous_headings":"Zenodo","what":"Download object and load to R","title":"DownloadObjects","text":"manually check extracted metadata, users can download specified objects ParseZenodo. downloaded objects controlled file.ext provided object formats lower case (e.g. rds/rdata/h5ad). returned value dataframe containing failed objects SeuratObject (file.ext rds). dataframe, users can re-run ParseZenodo setting doi.df returned value. Show returned SeuratObject: structure downloaded objects:","code":"# download objects multi.dois.parse <- ParseZenodo(   doi = c(\"1111\", \"10.5281/zenodo.7243603\", \"10.5281/zenodo.7244441\"),   file.ext = c(\"rdata\"),   out.folder = \"/Volumes/soyabean/GEfetch2R/download_zenodo\" )  # return SeuratObject sinle.doi.parse.seu <- ParseZenodo(   doi = \"10.5281/zenodo.8011282\",   file.ext = c(\"rds\"), return.seu = TRUE,   out.folder = \"/Volumes/soyabean/GEfetch2R/download_zenodo\" ) sinle.doi.parse.seu ## An object of class Seurat  ## 19594 features across 9219 samples within 2 assays  ## Active assay: RNA (17594 features, 0 variable features) ##  1 other assay present: integrated ##  2 dimensional reductions calculated: pca, umap tree /Volumes/soyabean/GEfetch2R/download_zenodo ## /Volumes/soyabean/GEfetch2R/download_zenodo ## ├── PyMTM_immune_scRNA.rds ## ├── frog_data.RData ## └── zebrafish_data.RData ##  ## 1 directory, 3 files"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"cellxgene","dir":"Articles","previous_headings":"","what":"CELLxGENE","title":"DownloadObjects","text":"CELLxGENE web server contains 1598 single-cell datasets, users can explore, download upload datasets. downloaded datasets provided CELLxGENE two formats: h5ad (AnnData v0.8) rds (Seurat v4). CELLxGENE provides R package (cellxgene.census) access data, sometimes ’s timely updated. GEfetch2R also supports users access CELLxGENE via cellxgene.census (use.census = TRUE).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"show-available-datasets","dir":"Articles","previous_headings":"CELLxGENE","what":"Show available datasets","title":"DownloadObjects","text":"GEfetch2R provides ShowCELLxGENEDatasets extract dataset metadata, including dataset title, description, contact, organism, ethnicity, sex, tissue, disease, assay, suspension type, cell type, et al. Show metadata:","code":"# all available datasets all.cellxgene.datasets <- ShowCELLxGENEDatasets() head(all.cellxgene.datasets) ##                                                                                 title ## 1                                                                        Plaque Atlas ## 2        Single-cell reconstruction of follicular remodeling in the human adult ovary ## 3 Molecular characterization of selectively vulnerable neurons in Alzheimer's Disease ## 4 Molecular characterization of selectively vulnerable neurons in Alzheimer's Disease ## 5 Molecular characterization of selectively vulnerable neurons in Alzheimer's Disease ## 6 Molecular characterization of selectively vulnerable neurons in Alzheimer's Diseasedescription ## 1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           A curation of publicly available atherosclerotic plaque scRNAseq datasets including annotation and validation. ## 2 The ovary is perhaps the most dynamic organ in the human body, only rivaled by the uterus. The molecular mechanisms that regulate follicular growth and regression, ensuring ovarian tissue homeostasis, remain elusive. We have performed single-cell RNA-sequencing using human adult ovaries to provide a map of the molecular signature of growing and regressing follicular populations. We have identified different types of granulosa and theca cells and detected local production of components of the complement system by (atretic) theca cells and stromal cells. We also have detected a mixture of adaptive and innate immune cells, as well as several types of endothelial and smooth muscle cells to aid the remodeling process. Our results highlight the relevance of mapping whole adult organs at the single-cell level and reflect ongoing efforts to map the human body. The association between complement system and follicular remodeling may provide key insights in reproductive biology and (in)fertilityingle-nuclei RNA sequencing of caudal entorhinal cortex and superior frontal gyrus from individuals spanning the neuropathological progression of AD ## 4                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Single-nuclei RNA sequencing of caudal entorhinal cortex and superior frontal gyrus from individuals spanning the neuropathological progression ofingle-nuclei RNA sequencing of caudal entorhinal cortex and superior frontal gyrus from individuals spanning the neuropathological progression ofingle-nuclei RNA sequencing of caudal entorhinal cortex and superior frontal gyrus from individuals spanning the neuropathological progression of AD ##                          doi                    contact ## 1  10.1101/2024.09.11.612431          Korbinian Träuble ## 2 10.1038/s41467-019-11036-9 S. M. Chuva de Sousa Lopes ## 3 10.1038/s41593-020-00764-7            Martin Kampmann ## 4 10.1038/s41593-020-00764-7            Martin Kampmann ## 5 10.1038/s41593-020-00764-7            Martin Kampmann ## 6 10.1038/s41593-020-00764-7            Martin Kampmann ##                            contact_email                        collection_id ## 1 korbinian.traeuble@helmholtz-munich.de db70986c-7d91-49fe-a399-a4730be394ac ## 2                          lopes@lumc.nl 2902f08c-f83c-470e-a541-e463e25e5058 ## 3               Martin.Kampmann@ucsf.edu 180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 4               Martin.Kampmann@ucsf.edu 180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 5               Martin.Kampmann@ucsf.edu 180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 6               Martin.Kampmann@ucsf.edu 180bff9c-c8a5-4539-b13b-ddbc00d643e6 ##                                                                      collection_url ## 1 https://cellxgene.cziscience.com/collections/db70986c-7d91-49fe-a399-a4730be394ac ## 2 https://cellxgene.cziscience.com/collections/2902f08c-f83c-470e-a541-e463e25e5058 ## 3 https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 4 https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 5 https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 6 https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ##   consortia            curator_name visibility                assay ## 1                     James Chaffer     PUBLIC 10x 3' v2, 10x 3' v3 ## 2           Jennifer Yu-Sheng Chien     PUBLIC            10x 3' v2 ## 3           Jennifer Yu-Sheng Chien     PUBLIC            10x 3' v2 ## 4           Jennifer Yu-Sheng Chien     PUBLIC            10x 3' v2 ## 5           Jennifer Yu-Sheng Chien     PUBLIC            10x 3' v2 ## 6           Jennifer Yu-Sheng Chien     PUBLIC            10x 3' v2 ##                                                                                                                                                                                                       assets ## 1 4221495897, 1216838411, H5AD, RDS, https://datasets.cellxgene.cziscience.com/999a6b92-46ca-498e-b1ee-5fc43b6988ef.h5ad, https://datasets.cellxgene.cziscience.com/999a6b92-46ca-498e-b1ee-5fc43b6988ef.rds ## 2    105862325, 96479066, H5AD, RDS, https://datasets.cellxgene.cziscience.com/2afef4bd-99af-41f4-b507-f80718b6a8ef.h5ad, https://datasets.cellxgene.cziscience.com/2afef4bd-99af-41f4-b507-f80718b6a8ef.rds ## 3     17724244, 14805677, H5AD, RDS, https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.h5ad, https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.rds ## 4     47491494, 46270555, H5AD, RDS, https://datasets.cellxgene.cziscience.com/000198ac-27c7-4b9f-9fd4-6362a5b91596.h5ad, https://datasets.cellxgene.cziscience.com/000198ac-27c7-4b9f-9fd4-6362a5b91596.rds ## 5       9460591, 7134383, H5AD, RDS, https://datasets.cellxgene.cziscience.com/017837df-b8be-4a4f-bc08-c5f14bd8815a.h5ad, https://datasets.cellxgene.cziscience.com/017837df-b8be-4a4f-bc08-c5f14bd8815a.rds ## 6     16025334, 13487453, H5AD, RDS, https://datasets.cellxgene.cziscience.com/3512034b-9a5c-4dba-9dfb-cead9f9840dc.h5ad, https://datasets.cellxgene.cziscience.com/3512034b-9a5c-4dba-9dfb-cead9f9840dc.rds ##   cell_count ## 1     184623 ## 2      20676 ## 3       8168 ## 4       8362 ## 5       3799 ## 6       5970 ##                                                                                                                                             cell_type ## 1 B cell, T cell, dendritic cell, endothelial cell, fibroblast, macrophage, mast cell, monocyte, natural killer cell, plasma cell, smooth muscle cell ## 2  B cell, T cell, endothelial cell, granulosa cell, innate lymphoid cell, natural killer cell, smooth muscle cell, stromal cell of ovary, theca cell ## 3                                                                                                                                     oligodendrocyte ## 4                                                                                                                                glutamatergic neuron ## 5                                                                                                                              mature microglial cell ## 6                                                                                                                                    mature astrocyte ##                                                                                                                                                                                                                                                                                                         citation ## 1  Publication: https://doi.org/10.1101/2024.09.11.612431 Dataset Version: https://datasets.cellxgene.cziscience.com/999a6b92-46ca-498e-b1ee-5fc43b6988ef.h5ad curated and distributed by CZ CELLxGENE Discover in Collection: https://cellxgene.cziscience.com/collections/db70986c-7d91-49fe-a399-a4730be394ac ## 2 Publication: https://doi.org/10.1038/s41467-019-11036-9 Dataset Version: https://datasets.cellxgene.cziscience.com/2afef4bd-99af-41f4-b507-f80718b6a8ef.h5ad curated and distributed by CZ CELLxGENE Discover in Collection: https://cellxgene.cziscience.com/collections/2902f08c-f83c-470e-a541-e463e25e5058 ## 3 Publication: https://doi.org/10.1038/s41593-020-00764-7 Dataset Version: https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.h5ad curated and distributed by CZ CELLxGENE Discover in Collection: https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 4 Publication: https://doi.org/10.1038/s41593-020-00764-7 Dataset Version: https://datasets.cellxgene.cziscience.com/000198ac-27c7-4b9f-9fd4-6362a5b91596.h5ad curated and distributed by CZ CELLxGENE Discover in Collection: https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 5 Publication: https://doi.org/10.1038/s41593-020-00764-7 Dataset Version: https://datasets.cellxgene.cziscience.com/017837df-b8be-4a4f-bc08-c5f14bd8815a.h5ad curated and distributed by CZ CELLxGENE Discover in Collection: https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ## 6 Publication: https://doi.org/10.1038/s41593-020-00764-7 Dataset Version: https://datasets.cellxgene.cziscience.com/3512034b-9a5c-4dba-9dfb-cead9f9840dc.h5ad curated and distributed by CZ CELLxGENE Discover in Collection: https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ##                             dataset_id                   dataset_version_id ## 1 72955cdb-bd92-4135-aa52-21f33f9640db 999a6b92-46ca-498e-b1ee-5fc43b6988ef ## 2 1f1c5c14-5949-4c81-b28e-b272e271b672 2afef4bd-99af-41f4-b507-f80718b6a8ef ## 3 f9ad5649-f372-43e1-a3a8-423383e5a8a2 d9db936c-41c6-4398-a8c4-a9dca34a225e ## 4 cd77258f-b08b-4c89-b93f-6e6f146b1a4d 000198ac-27c7-4b9f-9fd4-6362a5b91596 ## 5 bdacc907-7c26-419f-8808-969eab3ca2e8 017837df-b8be-4a4f-bc08-c5f14bd8815a ## 6 b94e3bdf-a385-49cc-b312-7a63cc28b77a 3512034b-9a5c-4dba-9dfb-cead9f9840dc ##                                                                                                                                                                                       development_stage ## 1 54-year-old stage, 58-year-old stage, 65-year-old stage, 67-year-old stage, 74-year-old stage, 76-year-old stage, 77-year-old stage, 82-year-old stage, 83-year-old stage, 87-year-old stage, unknown ## 2                                                                                                                                                                                           adult stage ## 3                                       50-year-old stage, 60-year-old stage, 71-year-old stage, 72-year-old stage, 77-year-old stage, 80 year-old and over stage, 82-year-old stage, 87-year-old stage ## 4                                       50-year-old stage, 60-year-old stage, 71-year-old stage, 72-year-old stage, 77-year-old stage, 80 year-old and over stage, 82-year-old stage, 87-year-old stage ## 5                                       50-year-old stage, 60-year-old stage, 71-year-old stage, 72-year-old stage, 77-year-old stage, 80 year-old and over stage, 82-year-old stage, 87-year-old stage ## 6                                       50-year-old stage, 60-year-old stage, 71-year-old stage, 72-year-old stage, 77-year-old stage, 80 year-old and over stage, 82-year-old stage, 87-year-old stage ##                     disease ## 1           atherosclerosis ## 2                    normal ## 3 Alzheimer disease, normal ## 4 Alzheimer disease, normal ## 5 Alzheimer disease, normal ## 6 Alzheimer disease, normaldonor_id ## 1 2_Pauli, 3_Pauli, 4_Pauli, 5_Pauli, 6_Pauli, 7_Pauli, 8_Pauli, 9_Pauli, 1_Alsaigh, 2_Alsaigh, 3_Alsaigh, 1_Fernandez, 2_Fernandez, 3_Fernandez, 3A_Fernandez, 4_Fernandez, 5_Fernandez, 6_Fernandez, 1_Wirka, 2_Wirka, 3_Wirka, 4_Wirka, 1_Emoto_ACS, 2_Emoto_SAP, 3_Chowdhury, 6_Chowdhury, 10_Chowdhury, 4_Chowdhury, 5_Chowdhury, 12_Chowdhury, 11_Chowdhury, 1_Chowdhury, 2_Chowdhury, 7_Chowdhury, 9_Chowdhury, 8_Chowdhury, 1_Pan, 2_Pan, 3_Pan, 1_Dib, 2_Dib, 3_Dib, 4_Dib, 5_Dib, 6_Dib, 1_2_Slysz, 3_Slysz, 4_Slysz, 1_2_3_Slysz_femoral, 4_Slysz_femoral, 5_Slysz_femoral, 6_Slysz_femoral, 7_Slysz_femoral, 8_Slysz_femoral, 9_Slysz_femoral, 1_Jaiswal, 2_Jaiswalpat9, pat7, pat0, pat3, patembeddings ## 1                     X_scpoli, X_umap ## 2 X_mnn.correct, X_pca, X_tsne, X_umap ## 3         X_cca, X_cca.aligned, X_tsne ## 4         X_cca, X_cca.aligned, X_tsne ## 5         X_cca, X_cca.aligned, X_tsne ## 6         X_cca, X_cca.aligned, X_tsne ##                                                                   explorer_url ## 1 https://cellxgene.cziscience.com/e/72955cdb-bd92-4135-aa52-21f33f9640db.cxg/ ## 2 https://cellxgene.cziscience.com/e/1f1c5c14-5949-4c81-b28e-b272e271b672.cxg/ ## 3 https://cellxgene.cziscience.com/e/f9ad5649-f372-43e1-a3a8-423383e5a8a2.cxg/ ## 4 https://cellxgene.cziscience.com/e/cd77258f-b08b-4c89-b93f-6e6f146b1a4d.cxg/ ## 5 https://cellxgene.cziscience.com/e/bdacc907-7c26-419f-8808-969eab3ca2e8.cxg/ ## 6 https://cellxgene.cziscience.com/e/b94e3bdf-a385-49cc-b312-7a63cc28b77a.cxg/ ##   feature_biotype feature_count feature_reference is_primary_data ## 1            gene         28033    NCBITaxon:9606            TRUE ## 2            gene         32839    NCBITaxon:9606            TRUE ## 3            gene         32743    NCBITaxon:9606           FALSE ## 4            gene         32743    NCBITaxon:9606           FALSE ## 5            gene         32743    NCBITaxon:9606           FALSE ## 6            gene         32743    NCBITaxon:9606           FALSE ##   mean_genes_per_cell     organism primary_cell_count              published_at ## 1           1390.0576 Homo sapiens             184623 2024-09-24T15:53:59+00:00 ## 2            942.2772 Homo sapiens              20676 2022-06-20T09:32:24+00:00 ## 3            599.5956 Homo sapiens                  0 2020-11-20T13:39:38+00:00 ## 4           2165.4574 Homo sapiens                  0 2020-11-20T13:39:40+00:00 ## 5            585.7452 Homo sapiens                  0 2020-11-20T13:39:43+00:00 ## 6            777.2630 Homo sapiens                  0 2020-11-20T13:39:41+00:00 ##   raw_data_location                revised_at schema_version ## 1             raw.X 2024-10-10T20:20:32+00:00          5.2.0 ## 2             raw.X 2024-10-10T20:20:32+00:00          5.2.0 ## 3                 X 2024-10-10T20:20:33+00:00          5.2.0 ## 4                 X 2024-10-10T20:20:33+00:00          5.2.0 ## 5                 X 2024-10-10T20:20:33+00:00          5.2.0 ## 6                 X 2024-10-10T20:20:33+00:00          5.2.0 ##   self_reported_ethnicity                   sex spatial suspension_type ## 1       European, unknown female, male, unknown      NA            cell ## 2                 unknown                female      NA            cell ## 3                 unknown                  male      NA         nucleus ## 4                 unknown                  male      NA         nucleus ## 5                 unknown                  male      NA         nucleus ## 6                 unknown                  male      NA         nucleus ##                                                    tissue ## 1 carotid artery segment, coronary artery, femoral artery ## 2                                                   ovary ## 3                                       entorhinal cortex ## 4                                       entorhinal cortex ## 5                                  superior frontal gyrus ## 6                                  superior frontal gyrus ##                                                                                          dataset_description ## 1                                                                                               plaque atlas ## 2                               Single-cell reconstruction of follicular remodeling in the human adult ovary ## 3    Molecular characterization of selectively vulnerable neurons in Alzheimer’s Disease: EC oligodendrocyte ## 4 Molecular characterization of selectively vulnerable neurons in Alzheimer’s Disease: EC excitatory neurons ## 5         Molecular characterization of selectively vulnerable neurons in Alzheimer’s Disease: SFG microglia ## 6        Molecular characterization of selectively vulnerable neurons in Alzheimer’s Disease: SFG astrocytes ##   tombstone x_approximate_distribution spatial.has_fullres spatial.is_single ## 1     FALSE                       <NA>                  NA                NA ## 2     FALSE                       <NA>                  NA                NA ## 3     FALSE                       <NA>                  NA                NA ## 4     FALSE                       <NA>                  NA                NA ## 5     FALSE                       <NA>                  NA                NA ## 6     FALSE                       <NA>                  NA                NA ##   batch_condition default_embedding ## 1                              <NA> ## 2                              <NA> ## 3                              <NA> ## 4                              <NA> ## 5                              <NA> ## 6                              <NA> ##                                                                               rds_id ## 1 https://datasets.cellxgene.cziscience.com/999a6b92-46ca-498e-b1ee-5fc43b6988ef.rds ## 2 https://datasets.cellxgene.cziscience.com/2afef4bd-99af-41f4-b507-f80718b6a8ef.rds ## 3 https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.rds ## 4 https://datasets.cellxgene.cziscience.com/000198ac-27c7-4b9f-9fd4-6362a5b91596.rds ## 5 https://datasets.cellxgene.cziscience.com/017837df-b8be-4a4f-bc08-c5f14bd8815a.rds ## 6 https://datasets.cellxgene.cziscience.com/3512034b-9a5c-4dba-9dfb-cead9f9840dc.rds ##                                                                               h5ad_id ## 1 https://datasets.cellxgene.cziscience.com/999a6b92-46ca-498e-b1ee-5fc43b6988ef.h5ad ## 2 https://datasets.cellxgene.cziscience.com/2afef4bd-99af-41f4-b507-f80718b6a8ef.h5ad ## 3 https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.h5ad ## 4 https://datasets.cellxgene.cziscience.com/000198ac-27c7-4b9f-9fd4-6362a5b91596.h5ad ## 5 https://datasets.cellxgene.cziscience.com/017837df-b8be-4a4f-bc08-c5f14bd8815a.h5ad ## 6 https://datasets.cellxgene.cziscience.com/3512034b-9a5c-4dba-9dfb-cead9f9840dc.h5ad"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"summary-attributes","dir":"Articles","previous_headings":"CELLxGENE","what":"Summary attributes","title":"DownloadObjects","text":"GEfetch2R provides StatDBAttribute summary attributes CELLxGENE:","code":"StatDBAttribute(   df = all.cellxgene.datasets, filter = c(\"organism\", \"sex\", \"disease\"),   database = \"CELLxGENE\", combine = TRUE ) ## # A tibble: 343 × 4 ## # Groups:   organism, sex [18] ##    organism     sex     disease    Num ##    <chr>        <chr>   <chr>    <int> ##  1 homo sapiens male    normal     856 ##  2 homo sapiens female  normal     691 ##  3 mus musculus male    normal     191 ##  4 homo sapiens unknown normal     146 ##  5 mus musculus female  normal     143 ##  6 mus musculus unknown normal     123 ##  7 homo sapiens female  covid-19    50 ##  8 homo sapiens female  dementia    50 ##  9 homo sapiens male    dementia    50 ## 10 homo sapiens male    covid-19    42 ## # ℹ 333 more rows # # use cellxgene.census # StatDBAttribute(filter = c(\"disease\", \"tissue\", \"cell_type\"), database = \"CELLxGENE\", #                 use.census = TRUE, organism = \"homo_sapiens\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"extract-metadata-1","dir":"Articles","previous_headings":"CELLxGENE","what":"Extract metadata","title":"DownloadObjects","text":"GEfetch2R provides ExtractCELLxGENEMeta filter dataset metadata, available values attributes can obtained StatDBAttribute except cell number: Show metadata:","code":"# human 10x v2 and v3 datasets human.10x.cellxgene.meta <- ExtractCELLxGENEMeta(   all.samples.df = all.cellxgene.datasets,   assay = c(\"10x 3' v2\", \"10x 3' v3\"), organism = \"Homo sapiens\" ) # subset cellxgene.down.meta <- human.10x.cellxgene.meta[human.10x.cellxgene.meta$cell_type == \"oligodendrocyte\" &   human.10x.cellxgene.meta$tissue == \"entorhinal cortex\", ] head(cellxgene.down.meta) ##                                                                                 title ## 3 Molecular characterization of selectively vulnerable neurons in Alzheimer's Disease ##                                                                                                                                             description ## 3 Single-nuclei RNA sequencing of caudal entorhinal cortex and superior frontal gyrus from individuals spanning the neuropathological progression of AD ##                          doi         contact            contact_email ## 3 10.1038/s41593-020-00764-7 Martin Kampmann Martin.Kampmann@ucsf.edu ##                          collection_id ## 3 180bff9c-c8a5-4539-b13b-ddbc00d643e6 ##                                                                      collection_url ## 3 https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ##   consortia            curator_name visibility     assay ## 3           Jennifer Yu-Sheng Chien     PUBLIC 10x 3' v2 ##                                                                                                                                                                                                   assets ## 3 17724244, 14805677, H5AD, RDS, https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.h5ad, https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.rds ##   cell_count       cell_type ## 3       8168 oligodendrocyte ##                                                                                                                                                                                                                                                                                                         citation ## 3 Publication: https://doi.org/10.1038/s41593-020-00764-7 Dataset Version: https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.h5ad curated and distributed by CZ CELLxGENE Discover in Collection: https://cellxgene.cziscience.com/collections/180bff9c-c8a5-4539-b13b-ddbc00d643e6 ##                             dataset_id                   dataset_version_id ## 3 f9ad5649-f372-43e1-a3a8-423383e5a8a2 d9db936c-41c6-4398-a8c4-a9dca34a225e ##                                                                                                                                                 development_stage ## 3 50-year-old stage, 60-year-old stage, 71-year-old stage, 72-year-old stage, 77-year-old stage, 80 year-old and over stage, 82-year-old stage, 87-year-old stage ##                     disease                      donor_id ## 3 Alzheimer disease, normal 3, 1, 2, 5, 6, 7, 4, 8, 9, 10 ##                     embeddings ## 3 X_cca, X_cca.aligned, X_tsne ##                                                                   explorer_url ## 3 https://cellxgene.cziscience.com/e/f9ad5649-f372-43e1-a3a8-423383e5a8a2.cxg/ ##   feature_biotype feature_count feature_reference is_primary_data ## 3            gene         32743    NCBITaxon:9606           FALSE ##   mean_genes_per_cell     organism primary_cell_count              published_at ## 3            599.5956 Homo sapiens                  0 2020-11-20T13:39:38+00:00 ##   raw_data_location                revised_at schema_version ## 3                 X 2024-10-10T20:20:33+00:00          5.2.0 ##   self_reported_ethnicity  sex spatial suspension_type            tissue ## 3                 unknown male      NA         nucleus entorhinal cortex ##                                                                                       dataset_description ## 3 Molecular characterization of selectively vulnerable neurons in Alzheimer’s Disease: EC oligodendrocyte ##   tombstone x_approximate_distribution spatial.has_fullres spatial.is_single ## 3     FALSE                       <NA>                  NA                NA ##   batch_condition default_embedding ## 3                              <NA> ##                                                                               rds_id ## 3 https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.rds ##                                                                               h5ad_id ## 3 https://datasets.cellxgene.cziscience.com/d9db936c-41c6-4398-a8c4-a9dca34a225e.h5ad"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"download-object-and-load-to-r-1","dir":"Articles","previous_headings":"CELLxGENE","what":"Download object and load to R","title":"DownloadObjects","text":"manually check extracted metadata, users can download specified objects ParseCELLxGENE. downloaded objects controlled file.ext (choose \"rds\" \"h5ad\"). returned value dataframe containing failed objects SeuratObject (file.ext rds). dataframe, users can re-run ParseCELLxGENE setting meta returned value. using cellxgene.census, users can subset metadata gene. Show returned SeuratObject: Show returned SeuratObject (cellxgene.census): structure downloaded objects:","code":"# download objects cellxgene.down <- ParseCELLxGENE(   meta = cellxgene.down.meta, file.ext = \"rds\",   out.folder = \"/Volumes/soyabean/GEfetch2R/download_cellxgene\" )  # retuen SeuratObject cellxgene.down.seu <- ParseCELLxGENE(   meta = cellxgene.down.meta, file.ext = \"rds\", return.seu = TRUE,   obs.value.filter = \"cell_type == 'oligodendrocyte' & disease == 'Alzheimer disease'\",   obs.keys = c(\"cell_type\", \"disease\", \"sex\", \"suspension_type\", \"development_stage\"),   out.folder = \"/Volumes/soyabean/GEfetch2R/download_cellxgene\" )  # use cellxgene.census (support subset, but update is not timely) cellxgene.down.census <- ParseCELLxGENE(   use.census = TRUE, organism = \"Homo sapiens\",   obs.value.filter = \"cell_type == 'B cell' & tissue_general == 'lung' & disease == 'COVID-19'\",   obs.keys = c(\"cell_type\", \"tissue_general\", \"disease\", \"sex\"),   include.genes = c(\"ENSG00000161798\", \"ENSG00000188229\") ) cellxgene.down.seu ## An object of class Seurat  ## 32743 features across 6873 samples within 1 assay  ## Active assay: RNA (32743 features, 0 variable features) ##  3 dimensional reductions calculated: cca, cca.aligned, tsne cellxgene.down.census ## An object of class Seurat  ## 2 features across 2729 samples within 1 assay  ## Active assay: RNA (2 features, 0 variable features) tree /Volumes/soyabean/GEfetch2R/download_cellxgene ## /Volumes/soyabean/GEfetch2R/download_cellxgene ## └── Molecular.characterization.of.selectively.vulnerable.neurons.in.Alzheimer.s.Disease..EC.oligodendrocyte.rds ##  ## 1 directory, 1 file"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"human-cell-atlas","dir":"Articles","previous_headings":"","what":"Human Cell Atlas","title":"DownloadObjects","text":"Human Cell Atlas aims map every cell type human body, contains 484 projects, Homo sapiens (also includes projects Mus musculus, Macaca mulatta canis lupus familiaris).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"show-available-datasets-1","dir":"Articles","previous_headings":"Human Cell Atlas","what":"Show available datasets","title":"DownloadObjects","text":"GEfetch2R provides ShowHCAProjects extract detailed project metadata, including project title, description, organism, sex, organ/organPart, disease, assay, preservation method, sample type, suspension type, cell type, development stage, et al. 484 unique projects five different catalogs (dcp29, dcp30, dcp1, lm2, lm3): Show metadata:","code":"all.hca.projects <- ShowHCAProjects() head(all.hca.projects) ##                                                                                             projectTitle ## 1                                                                  1.3 Million Brain Cells from E18 Mice ## 2                            A Cellular Anatomy of the Normal Adult Human Prostate and Prostatic Urethra ## 3                                               A Cellular Atlas of Pitx2-Dependent Cardiac Development. ## 4                              A Human Liver Cell Atlas reveals Heterogeneity and Epithelial Progenitors ## 5                          A Partial Picture of the Single-Cell Transcriptomics of Human IgA Nephropathy ## 6 A Protocol for Revealing Oral Neutrophil Heterogeneity by Single-Cell Immune Profiling in Human Saliva ##                              projectId              projectShortname ## 1 74b6d569-3b11-42ef-b6b1-a0454522b4a0                    1M Neurons ## 2 53c53cd4-8127-4e12-bc7f-8fe1610a715c             ProstateCellAtlas ## 3 7027adc6-c9c9-46f3-84ee-9badc3a4f53b          Pitx2DevelopingHeart ## 4 94e4ee09-9b4b-410a-84dc-a751ad36d0df   LiverCellAtlasHeterogeneity ## 5 c5b475f2-76b3-4a8e-8465-f3b69828fec3      Tang-Human-IgAN-GEXSCOPE ## 6 60ea42e1-af49-42f5-8164-d641fdb696bc PRJNA640427_human_neutrophilsprojectDescriptionortex, hippocampus, and subventricular zone were purchased from BrainBits (C57EHCV). They were from 2 E18 C57BL/6 mice dissected on the same day, shipped overnight on ice, and stored at 4C until being prepared for scRNA-Seq. Brain tissues were dissociated following the Demonstrated Protocol for Mouse Embryonic Neural Tissue (https://support.10xgenomics.com/single-cell/sample-prep/doc/demonstrated-protocol-dissociation-of-mouse-embryonic-neural-tissue-for-single-cell-rna-sequencing). 69 scRNA-Seq libraries were made from first mouse brain 2 days after the dissection. Another 64 scRNA-Seq libraries were made from second mouse brain 6 days after the dissection. ## 2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    A comprehensive cellular anatomy of normal human prostate is essential for solving the cellular origins of benign prostatic hyperplasia and prostate cancer. The tools used to analyze the contribution of individual cell types are not robust. We provide a cellular atlas of the young adult human prostate and prostatic urethra using an iterative process of single-cell RNA sequencing (scRNA-seq) and flow cytometry on ∼98,000 cells taken from different anatomical regions. Immunohistochemistry with newly derived cell type-specific markers revealed the distribution of each epithelial and stromal cell type on whole mounts, revising our understanding of zonal anatomy. Based on discovered cell surface markers, flow cytometry antibody panels were designed to improve the purification of each cell type, with each gate confirmed by scRNA-seq. The molecular classification, anatomical distribution, and purification tools for each cell type in the human prostate create a powerful resource for experimental design in human prostate diseaseingle-cell RNA sequencing was applied to study the role of Pitx2 expression in heart development in mice.  Over 75,000 single cardiac cell transcriptomes between two key developmental timepoints in control and Pitx2-null embryos were amplified and sequenced. ## 4                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 We perfomed single-cell RNA-sequnecing of around 10,000 cells from normal human liver tissue to construct a human liver cell atlas. We reveal previously unknown subtypes in different cell type compartments. Overall design: Single cells were isolated from human liver resection specimens and then sorted by FACS into 384 well plates in a unbiased way and on the basis of cell surface markers for distinct cell types. ScRNA-seq was done using the mCelSeq2 protocol. ## 5 Aa comprehensive scRNA-seq analysis of human renal biopsies from IgAN. We showed for the first time that IgAN mesangial cells displayed increased expression of several novel genes including MALAT1, GADD45B, SOX4, and EDIL3, which were related to cell proliferation and matrix accumulation. The overexpressed genes in tubule cells of IgAN were mainly enriched in inflammatory pathways including TNF signaling, IL-17 signaling, and NOD-like receptor signaling. Furthermore, we compared the results of 4 IgAN patients with the published scRNA-Seq data of healthy kidney tissues of three human donors in order to further validate the findings in our study. The results also verified that the overexpressed genes in tubule cells from IgAN patients were mainly enriched in inflammatory pathways including TNF signaling, IL-17 signaling, and NOD-like receptor signaling. The receptor-ligand crosstalk analysis revealed potential interactions between mesangial cells and other cells in IgAN. IgAN patients with overt proteinuria displayed elevated genes participating in several signaling pathways compared with microproteinuria group. It needs to be mentioned that based on number of mesangial cells and other kidney cells analyzed in this study, the results of our study are preliminary and needs to be confirmed on larger number of cells from larger number of patients and controls in future studies. Therefore, these results offer new insight into pathogenesis and identify new therapeutic targets for IgAN. ## 6                                 Neutrophils are the most abundant white blood cells in the human body responsible for fighting viral, bacterial and fungi infections. Out of the 100 billion neutrophils produced daily, it is estimated that 10 % of these cells end up in oral biofluids. Because saliva is a fluid accessible through non-invasive techniques, it is an optimal source of cells and molecule surveillance in health and disease. While neutrophils are abundant in saliva, scientific advancements in neutrophil biology have been hampered likely due to their short life span, inability to divide once terminally differentiated, sensitivity to physical stress, and low RNA content. Here, we devise a protocol aiming to understand neutrophil heterogeneity by improving isolation methods, single-cell RNA extraction, sequencing and bioinformatic pipelines. Advanced flow cytometry 3D analysis, and machine learning validated our gating system model, by including positive neutrophil markers and excluding other immune cells and uncovered neutrophil heterogeneity. Considering specific cell markers, unique mitochondrial content, stringent and less stringent filtering strategies, our transcriptome single cell findings unraveled novel neutrophil subpopulations. Collectively, this methodology accelerates the discovery of salivary immune landscapes, with the promise of improving the understanding of diversification mechanisms, clinical diagnostics in health and disease, and guide targeted therapies. ##                                                                                             publications ## 1                                   Massively parallel digital transcriptional profiling of single cells ## 2                            A Cellular Anatomy of the Normal Adult Human Prostate and Prostatic Urethra ## 3                                               A cellular atlas of Pit2x-dependent cardiac development. ## 4                             A human liver cell atlas reveals heterogeneity and epithelial progenitors. ## 5                          A Partial Picture of the Single-Cell Transcriptomics of Human IgA Nephropathy ## 6 A Protocol for Revealing Oral Neutrophil Heterogeneity by Single-Cell Immune Profiling in Human Saliva ##                                                                                                                                                                                                                                                                                                                  laboratory ## 1                                                                                                                                                                                                                                                                               Human Cell Atlas Data Coordination Platform ## 2                                                                                                                                                                                                                                                                    Human Cell Atlas Data Coordination Platform|Strand Lab ## 3                                                                                                                                                                                                                       Department of Molecular Physiology and Biophysics|Human Cell Atlas|Program in Developmental Biology ## 4                                                                                                                                                                                                                                                                                                                        NA ## 5 Centre for Inflammatory Diseases|Department of Hematology|Department of Medical Records & Information|Department of Nephrology|Department of Nephrology;Centre for Inflammatory Diseases|Department of Organ Transplantation|Department of Pathology|Department of Ultrasound|Human Cell Atlas Data Coordination Platform ## 6                                                                                                                                                                                                                                                                                                          Human Cell Atlas ##                          accessions accessible estimatedCellCount ## 1  GSE93421, SRP096558, PRJNA360949       TRUE            1330000 ## 2                         GSE117403       TRUE             108700 ## 3 SRP198380, GSE131181, PRJNA542873       TRUE              75000 ## 4 SRP174502, GSE124395, PRJNA511895       TRUE              10000 ## 5 GSE171314, SRP313266, PRJNA719108       TRUE              20570 ## 6            SRP271375, PRJNA640427       TRUE               1145 ##       sampleEntityType          organ ## 1            specimens          brain ## 2            specimens prostate gland ## 3            specimens          heart ## 4 organoids, specimens   liver, liver ## 5            specimens         kidney ## 6            specimens    oral cavity ##                                                 organPart ## 1                                                  cortex ## 2 peripheral zone of prostate|transition zone of prostate ## 3                                                      NA ## 4                                                    , NA ## 5                                                      NA ## 6                                                  salivasamplerain|E18_20161004_BrainrPz|D17PrTz|D27PrPz|D27PrTz|D35PrPz|D35PrTzhet|SAMN11640779_wt|SAMN11640780|SAMN11640781_het|SAMN11640781_wt|SAMN11640782_het|SAMN11640782_wt|SAMN11640783|SAMN11640784|SAMN11640785_het|SAMN11640785_wt|SAMN11640786_het|SAMN11640786_wt|SAMN11640787|SAMN11640788|SAMN11640789|SAMN11640790 ## 4 SAMN10645790|SAMN10645791|SAMN10645843|SAMN10645847|SAMN10645915|SAMN10645916|SAMN10645917|SAMN10645918|SAMN10645919|SAMN10645920|SAMN10645921|SAMN10645922|SAMN10645923|SAMN10645924, SAMN10645729|SAMN10645734|SAMN10645735|SAMN10645736|SAMN10645737|SAMN10645738|SAMN10645739|SAMN10645741|SAMN10645744|SAMN10645745|SAMN10645746|SAMN10645747|SAMN10645748|SAMN10645749|SAMN10645750|SAMN10645751|SAMN10645756|SAMN10645758|SAMN10645761|SAMN10645773|SAMN10645782|SAMN10645810|SAMN10645830|SAMN10645831|SAMN10645832|SAMN10645833|SAMN10645834|SAMN10645835|SAMN10645836|SAMN10645837|SAMN10645838|SAMN10645839|SAMN10645840|SAMN10645848|SAMN10645849|SAMN10645850|SAMN10645851|SAMN10645852|SAMN10645853|SAMN10645854|SAMN10645855|SAMN10645856|SAMN10645857|SAMN10645858|SAMN10645860|SAMN10645861|SAMN10645862|SAMN10645863|SAMN10645864|SAMN10645873|SAMN10645880|SAMN10645881|SAMN10645882|SAMN10645883|SAMN10645884|SAMN10645885|SAMN10645886|SAMN10645888|SAMN10645892|SAMN10645911|SAMN10645935|SAMN10645945|SAMN10645954|SAMN10645955|SAMN10645956|SAMN10645962|SAMN10645963|SAMN10645964|SAMN10645965|SAMN10645966|SAMN10645967|SAMN10645968|SAMN10645969|SAMN10645970|SAMN10645971|SAMN10645972|SAMN10645973|SAMN10645974|SAMN10645977|SAMN10645978|SAMN10645979|SAMN10645980|SAMN10645989|SAMN10646005|SAMN10646007|SAMN10646011|SAMN10646013|SAMN10646019|SAMN10646032|SAMN10646036|SAMN10646037|SAMN10646038|SAMN10646039|SAMN10646040|SAMN10646041|SAMN10646042|SAMN10646043|SAMN10646044|SAMN10646045|kidney_1_igan|kidney_2_igan|kidney_3_igan|kidney_4_igan|kidney_5_healthysaliva_sample1|saliva_sample2|saliva_sample3 ##                             disease preservationMethod donorCount ## 1                            normal              fresh          2 ## 2                            normal              fresh          3 ## 3                            normal                 NA         17 ## 4 , hepatocellular carcinoma|normal               , NA         23 ## 5     IgA glomerulonephritis|normal                 NA          5 ## 6                            normal                 NA          3 ##                    developmentStage genusSpecies biologicalSex ## 1                mouse embryo stage Mus musculus       unknown ## 2                 human adult stage Homo sapiens          male ## 3 Theiler stage 17|Theiler stage 21 Mus musculus       unknown ## 4                 human adult stage Homo sapiens       unknown ## 5                 human adult stage Homo sapiens   female|male ## 6                 human adult stage Homo sapiens          male ##                                                                                                                                                                                                              selectedCellType ## 1                                                                                                                                                                                                                      neuron ## 2 basal cell of prostate epithelium|epithelial cell of prostate|fibroblast of connective tissue of prostate|luminal cell of prostate epithelium|prostate epithelial cell|prostate stromal cell|smooth muscle cell of prostateneutrophil ##   catalog                              entryId ## 1   dcp43 74b6d569-3b11-42ef-b6b1-a0454522b4a0 ## 2   dcp43 53c53cd4-8127-4e12-bc7f-8fe1610a715c ## 3   dcp43 7027adc6-c9c9-46f3-84ee-9badc3a4f53b ## 4   dcp43 94e4ee09-9b4b-410a-84dc-a751ad36d0df ## 5   dcp43 c5b475f2-76b3-4a8e-8465-f3b69828fec3 ## 6   dcp43 60ea42e1-af49-42f5-8164-d641fdb696bc ##                               sourceId ## 1 53e00b4b-4351-4131-b873-7931f3d4037f ## 2 1d18ed01-dce0-4f9d-8ff0-61a56e63854b ## 3 aae2cbe1-2c21-4abe-a611-71d1c778657d ## 4 c95bf55d-7f4e-47b0-af97-198823f21aaa ## 5 be6cf599-d084-4c5e-a89f-95308dbac4cd ## 6 6abbe02d-b89d-49b2-b639-b45f21d5baa7 ##                                                                                                      sourceSpec ## 1 tdr:bigquery:gcp:datarepo-aa6a9210:hca_prod_74b6d5693b1142efb6b1a0454522b4a0__20220117_dcp2_20220307_dcp14:/0 ## 2 tdr:bigquery:gcp:datarepo-d13e36e7:hca_prod_53c53cd481274e12bc7f8fe1610a715c__20220117_dcp2_20231002_dcp32:/0 ## 3 tdr:bigquery:gcp:datarepo-1840929b:hca_prod_7027adc6c9c946f384ee9badc3a4f53b__20220117_dcp2_20230815_dcp30:/0 ## 4 tdr:bigquery:gcp:datarepo-071fb08c:hca_prod_94e4ee099b4b410a84dca751ad36d0df__20220519_dcp2_20220804_dcp19:/0 ## 5 tdr:bigquery:gcp:datarepo-b3b1e92f:hca_prod_c5b475f276b34a8e8465f3b69828fec3__20230331_dcp2_20230331_dcp26:/0 ## 6 tdr:bigquery:gcp:datarepo-41cca7ce:hca_prod_60ea42e1af4942f58164d641fdb696bc__20220117_dcp2_20230314_dcp25:/0 ##                                                               workflow ## 1                                                                      ## 2                    optimus_post_processing_v1.0.0|optimus_v4.2.3, ,  ## 3                    optimus_post_processing_v1.0.0|optimus_v4.2.2, ,  ## 4 analysis_protocol_normalization|analysis_protocol_quantification, ,  ## 5                                                analysis_protocol, ,  ## 6                                                                      ##   libraryConstructionApproach nucleicAcidSource instrumentManufacturerModel ## 1                 10x 3' v2,      single cell,        , Illumina HiSeq 4000 ## 2       , 10X v2 sequencing,    , single cell,     , , Illumina NextSeq 500 ## 3    , 10X 3' v2 sequencing,    , single cell,     , , Illumina NextSeq 500 ## 4                , CEL-seq2,    , single cell,      , , Illumina HiSeq 2500 ## 5     , GEXSCOPE technology,    , single cell,         , , Illumina HiSeq X ## 6                Smart-seq2,      single cell,      , Illumina NovaSeq 6000 ##   pairedEnd cellLineID cellLineType cellLinemodelOrgan ## 1   , FALSE                                            ## 2 , , FALSE                                            ## 3 , , FALSE                                            ## 4 , , FALSE                                            ## 5  , , TRUE                                            ## 6    , TRUE                                            ##                                                                                                                                                                             organoidsID ## 1                                                                                                                                                                                       ## 2                                                                                                                                                                                       ## 3                                                                                                                                                                                       ## 4 SAMN10645790|SAMN10645791|SAMN10645843|SAMN10645847|SAMN10645915|SAMN10645916|SAMN10645917|SAMN10645918|SAMN10645919|SAMN10645920|SAMN10645921|SAMN10645922|SAMN10645923|SAMN10645924 ## 5                                                                                                                                                                                       ## 6                                                                                                                                                                                       ##   organoidsmodelOrgan organoidsmodelOrganPart            lastModifiedDate ## 1                                             2021-10-20T09:03:20.617000Z ## 2                                             2022-08-31T14:47:54.785000Z ## 3                                             2022-08-31T14:47:30.838000Z ## 4               liver                      NA 2022-04-21T15:03:35.422000Z ## 5                                             2023-03-20T11:06:31.139000Z ## 6                                             2021-09-30T17:38:34.675000Z"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"summary-attributes-1","dir":"Articles","previous_headings":"Human Cell Atlas","what":"Summary attributes","title":"DownloadObjects","text":"GEfetch2R provides StatDBAttribute summary attributes Human Cell Atlas:","code":"StatDBAttribute(df = all.hca.projects, filter = c(\"organism\", \"sex\"), database = \"HCA\") ## $organism ##                    Value Num      Key ## 1           homo sapiens 464 organism ## 2           mus musculus  56 organism ## 3 canis lupus familiaris   1 organism ## 4         macaca mulatta   1 organism ##  ## $sex ##     Value Num Key ## 1  female 353 sex ## 2    male 348 sex ## 3 unknown 151 sex ## 4   mixed   5 sex"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"extract-metadata-2","dir":"Articles","previous_headings":"Human Cell Atlas","what":"Extract metadata","title":"DownloadObjects","text":"GEfetch2R provides ExtractHCAMeta filter projects metadata, available values attributes can obtained StatDBAttribute except cell number: Show metadata:","code":"# human 10x v2 and v3 datasets hca.human.10x.projects <- ExtractHCAMeta(   all.projects.df = all.hca.projects, organism = \"Homo sapiens\",   protocol = c(\"10x 3' v2\", \"10x 3' v3\") ) head(hca.human.10x.projects) ##                                                                                                                 projectTitle ## 1                                                                           A Single-Cell Atlas of the Human Healthy Airways ## 2                                                                    A Single-Cell Transcriptomic Atlas of Human Skin Aging. ## 3                                                A human breast atlas integrating single-cell proteomics and transcriptomics ## 4                                                              A human cell atlas of the pressure-induced hypertrophic heart ## 5                                                               A human embryonic limb cell atlas resolved in space and time ## 6 A human fetal lung cell atlas uncovers proximal-distal gradients of differentiation and key regulators of epithelial fates ##                              projectId                 projectShortname ## 1 ef1e3497-515e-4bbe-8d4c-10161854b699              healthyAirwaysAtlas ## 2 923d3231-7295-4184-b3f6-c3082766a8c7                   AgingSkinAtlas ## 3 9b876d31-0739-4e96-9846-f76e6a427279         breastTranscriptomeAtlas ## 4 902dc043-7091-445c-9442-d72e163b9879 PressureInducedHypertrophicHeart ## 5 b176d756-62d8-4933-83a4-8b026380262f                EmbryonicHindlimb ## 6 2fe3c60b-ac1a-4c61-9b59-f6556c0fce63                  FetalLungImmuneprojectDescription ## 1 Rationale: The respiratory tract constitutes an elaborated line of defense that is based on a unique cellular ecosystem. Single-cell profiling methods enable the investigation of cell population distributions and transcriptional changes along the airways.Methods: We have explored the cellular heterogeneity of the human airway epithelium in 10 healthy living volunteers by single-cell RNA profiling. 77,969 cells were collected at 35 distinct locations, from the nose to the 12th division of the airway tree.Results: The resulting atlas is composed of a high percentage of epithelial cells (89.1%), but also immune (6.2%) and stromal (4.7%) cells with distinct cellular proportions in different regions of the airways. It reveals differential gene expression between identical cell types (suprabasal, secretory, and multiciliated cells) from the nose (MUC4, PI3, SIX3) and tracheobronchial (SCGB1A1, TFF3) airways. By contrast, cell-type specific gene expression is stable across all tracheobronchial samples. Our atlas improves the description of ionocytes, pulmonary neuro-endocrine (PNEC) and brush cells, and identifies a related population of NREP-positive cells. We also report the association of KRT13 with dividing cells that are reminiscent of previously described mouse “hillock” cells, and with squamous cells expressing SCEL, SPRR1A/B.Conclusions: Robust characterization of a single-cell cohort in healthy airways establishes a valuable resource for future investigations. The precise description of the continuum existing\\nfrom the nasal epithelium to successive divisions of the airways and the stable gene expression profile of these regions better defines conditions under which relevant tracheobronchial proxies of human respiratory diseases can be developedkin undergoes constant self-renewal, and its functional decline is a visible consequence of aging. Understanding human skin aging requires in-depth knowledge of the molecular and functional properties of various skin cell types. We performed single-cell RNA sequencing of human eyelid skin from healthy individuals across different ages and identified eleven canonical cell types, as well as six subpopulations of basal cells. Further analysis revealed progressive accumulation of photoaging-related changes and increased chronic inflammation with age. Transcriptional factors involved in the developmental process underwent early-onset decline during aging. Furthermore, inhibition of key transcription factors HES1 in fibroblasts and KLF6 in keratinocytes not only compromised cell proliferation, but also increased inflammation and cellular senescence during aging. Lastly, we found that genetic activation of HES1 or pharmacological treatment with quercetin alleviated cellular senescence of dermal fibroblasts. These findings provide a single-cell molecular framework of human skin aging, providing a rich resource for developing therapeutic strategies against aging-related skin disordershe breast is a dynamic organ whose response to physiological and pathophysiological conditions alters its disease susceptibility, yet the specific effects of these clinical variables on cell state remain poorly annotated. We present a unified, high-resolution breast atlas by integrating single-cell RNA-seq, mass cytometry, and cyclic immunofluorescence, encompassing a myriad of states. We define cell subtypes within the alveolar, hormone-sensing, and basal epithelial lineages, delineating associations of several subtypes with cancer risk factors, including age, parity, and BRCA2 germline mutation. Of particular interest is a subset of alveolar cells termed basal-luminal (BL) cells, which exhibit poor transcriptional lineage fidelity, accumulate with age, and carry a gene signature associated with basal-like breast cancer. We further utilize a medium-depletion approach to identify molecular factors regulating cell-subtype proportion in organoids. Together, these data are a rich resource to elucidate diverse mammary cell states. Overall design: A total of 16 breast samples were assayed (4 samples from reductive mammoplasties and 12 from prophylactic mastectomiesathological cardiac hypertrophy is a leading cause of heart failure, but knowledge of the full repertoire of cardiac cells and their gene expression profiles in the human hypertrophic heart is missing. Here, by using large-scale single-nucleus transcriptomics, we present the transcriptional response of human cardiomyocytes to pressure overload caused by aortic valve stenosis and describe major alterations in cardiac cellular crosstalk. Hypertrophied cardiomyocytes had reduced input from endothelial cells and fibroblasts. Genes encoding Eph receptor tyrosine kinases, particularly EPHB1, were significantly downregulated in cardiomyocytes of the hypertrophied heart. Consequently, EPHB1 activation by its ligand ephrin (EFN)B2, which is mainly expressed by endothelial cells, was reduced. EFNB2 inhibited cardiomyocyte hypertrophy in vitro, while silencing its expression in endothelial cells induced hypertrophy in co-cultured cardiomyocytes. Our human cell atlas of the hypertrophied heart highlights the importance of intercellular crosstalk in disease pathogenesis and provides a valuable resource. ## 5                                                                                                                                                                                                        Human limbs emerge during the fourth post-conception week as mesenchymal buds, which develop into fully formed limbs over the subsequent months. This process is orchestrated by numerous temporally and spatially restricted gene expression programmes, making congenital alterations in phenotype common. Decades of work with model organisms have defined the fundamental mechanisms underlying vertebrate limb development, but an in-depth characterization of this process in humans has yet to be performed. Here we detail human embryonic limb development across space and time using single-cell and spatial transcriptomics. We demonstrate extensive diversification of cells from a few multipotent progenitors to myriad differentiated cell states, including several novel cell populations. We uncover two waves of human muscle development, each characterized by different cell states regulated by separate gene expression programmes, and identify musculin (MSC) as a key transcriptional repressor maintaining muscle stem cell identity. Through assembly of multiple anatomically continuous spatial transcriptomic samples using VisiumStitcher, we map cells across a sagittal section of a whole fetal hindlimb. We reveal a clear anatomical segregation between genes linked to brachydactyly and polysyndactyly, and uncover transcriptionally and spatially distinct populations of the mesenchyme in the autopod. Finally, we perform single-cell RNA sequencing on mouse embryonic limbs to facilitate cross-species developmental comparison, finding substantial homology between the two species. ## 6                                                                                                                                                                                                                                                             We present a multiomic cell atlas of human lung development that combines single cell RNA and ATAC sequencing, high throughput spatial transcriptomics and single cell imaging. Coupling single cell methods with spatial analysis has allowed a comprehensive cellular survey of the epithelial, mesenchymal, endothelial and erythrocyte/leukocyte compartments from 5-22 post conception weeks. We identify new cell states in all compartments. These include developmental-specific secretory progenitors that resemble cells in adult fibrotic lungs and a new subtype of neuroendocrine cell related to human small cell lung cancer; observations which strengthen the connections between development and disease/regeneration. Our datasets are available for the community to download and interact with through our web interface ( https://fetal-lung.cellgeni.sanger.ac.uk ). Finally, to illustrate its general utility, we use our cell atlas to generate predictions about cell-cell signalling and transcription factor hierarchies which we test using organoid models. Highlights Spatiotemporal atlas of human lung development from 5-22 post conception weeks identifies 147 cell types/states. Tracking the developmental origins of multiple cell compartments, including new progenitor states. Functional diversity of fibroblasts in distinct anatomical signalling niches. Resource applied to interrogate and experimentally test the transcription factor code controlling neuroendocrine cell heterogeneity and the origins of small cell lung cancer. ##                                                                                                                 publications ## 1                                                                          A Single-Cell Atlas of the Human Healthy Airways. ## 2                                                                    A Single-Cell Transcriptomic Atlas of Human Skin Aging. ## 3                                                A human breast atlas integrating single-cell proteomics and transcriptomics ## 4                                                              A human cell atlas of the pressure-induced hypertrophic heart ## 5                                                               A human embryonic limb cell atlas resolved in space and time ## 6 A human fetal lung cell atlas uncovers proximal-distal gradients of differentiation and key regulators of epithelial fateslaboratory ## 1                                                                                                                                                      Memorial Sloan Kettering Cancer Center, New York, New York|Université Côte d'Azur, CNRS, Institut Pharmacologie Moléculaire et Cellulaire, Sophia-Antipolis, France.|Université Côte d'Azur, Centre Hospitalier Universitaire de Nice, Fédération Hospitalo-Universitaire OncoAge, CNRS, Inserm, Institute for Research on Cancer and Aging Nice Team 3, Pulmonology Department, Nice, Franceardiopulmonary Institute; Cardiac Metabolism Group, Department of Cardiology|Department of Cardiovascular Surgery|Institute for Cardiovascular Regeneration|Institute for Cardiovascular Regeneration; Cardiopulmonary Institute ## 5 Department of Clinical Neurosciences|Division of Biology and Biological Engineering|INSERM, CNRS, Institut de la Vision|John van Geest Centre for Brain Repair, Department of Clinical Neurosciences; Wellcome-MRC Cambridge Stem Cell Institute|Key Laboratory of Tropical Disease Control of Ministry of Education, Zhongshan School of Medicine, Institute of Human Virology|MRC Human Genetics Unit, IGC, WGH|The Key Laboratory for Stem Cells and Tissue Engineering, Zhongshan School of Medicine|Wellcome-MRC Cambridge Stem Cell Instituteaccessions ## 1                                                                                           EGAS00001004082 ## 2                                                                                                           ## 3                                                                         SRP329970, GSE180878, PRJNA749859 ## 4                                                                                              E-MTAB-11268 ## 5 ERP119958, ERP129376, ERP160032, E-MTAB-8813, E-MTAB-10514, E-MTAB-10367, PRJEB36736, PRJEB45293, S-SUBS5 ## 6                                                    E-MTAB-11265, E-MTAB-11278, E-MTAB-11267, E-MTAB-11266 ##   accessible estimatedCellCount     sampleEntityType                 organ ## 1       TRUE              77969            specimens bronchus|nose|trachea ## 2       TRUE              35678            specimens          skin of body ## 3       TRUE              52682            specimens                breast ## 4       TRUE              88536            specimens                 heart ## 5       TRUE             125955            specimens     forelimb|hindlimb ## 6       TRUE                 NA organoids, specimens      lung, heart|lung ##                                                                                                          organPart ## 1                  epithelium of bronchus|epithelium of trachea|inferior nasal concha|terminal bronchus epithelium ## 2                                                                                                               NA ## 3                                                                                                               NA ## 4                                                                            interventricular septum muscular part ## 5 forelimb stylopod|forelimb zeugopod|hindlimb bud|hindlimb stylopod|hindlimb zeugopod|manus|pes|right hindlimb|NA ## 6                                                                              , heart atrium|lung|lung epitheliumsampleiop_Int1|D322_Biop_Nas1|D322_Biop_Pro1|D326_Biop_Int1|D326_Biop_Pro1|D326_Brus_Dis1|D337_Brus_Dis1|D339_Biop_Int1|D339_Biop_Nas1|D339_Biop_Pro1|D339_Brus_Dis1|D344_Biop_Int1|D344_Biop_Nas1|D344_Biop_Pro1|D344_Brus_Dis1|D353_Biop_Int2|D353_Biop_Pro1|D353_Brus_Dis1|D353_Brus_Nas1|D354_Biop_Int2|D354_Biop_Pro1|D354_Brus_Dis1|D363_Biop_Int2|D363_Biop_Pro1|D363_Brus_Dis1|D363_Brus_Nas1|D367_Biop_Int1|D367_Biop_Pro1|D367_Brus_Dis1|D367_Brus_Nas1|D372_Biop_Int1|D372_Biop_Int2|D372_Biop_Pro1|D372_Brus_Dis1|D372_Brus_Nas|HRS118997|HRS118998|HRS118999|HRS119000|HRS119001|HRS119002|HRS119003|HRS119004 ## 3                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           SAMN20422990|SAMN20422991|SAMN20422992|SAMN20422993|SAMN20422994|SAMN20422995|SAMN20422996|SAMN20422997|SAMN20422998|SAMN20422999|SAMN20423000|SAMN20423001|SAMN20423002|SAMN20423003|SAMN20423004|specimen|AS2_specimen|AS3_specimen|AS4_specimen|AS5_specimene15_mid|11_e15_dist|12_e13|13_e14|1_e13_5|3_e11|4_e12|5_e13|6_e15|7_e10_5|8_e15_whole|9_e15_prox|C1-FSM-0-SC-1|C13-FSM-0-SC-1|C3-FSM-0-SC-1|C34-FSM-0-SC-1|C35-FSM-0-SC-1|C36-FSM--SC-1|C36-FSM--SC-2|C4-FSM-0-SC-1|C42-FLEG-0-FO-1|C5-FSM-0-SC-1|C58-FLEG-0-FO-2-S15-D1-ii|C58-FLEG-0-FO-2-S16-D1-iii|C59-FLEG-0-FO-1-S11-C1-ii|C59-FLEG-0-FO-1-S18-D1-i|C59-FLEG-0-FO-1-S5-C1-i|C68-FARM-1-SC-1|C68-FARM-2-SC-1|C68-FARM-3-SC-1|C68-FLEG-1-SC-1|C68-FLEG-2-SC-1|C68-FLEG-3-SC-1|C70-FLEG-0-FO-2-S10-A1-ii|C70-FLEG-0-FO-2-S11-B1-i|C70-FLEG-0-FO-2-S20-B1-ii|C70-FLEG-0-FO-2-S7-A1-i|C72-FARM-0-SC-1|C72-FARM-0-SC-2|C72-FARM-0-SC-3|C72-FLEG-0-SC-1|C72-FLEG-0-SC-2|C72-FLEG-0-SC-3|C9-FSM-0-SC-1|GSM4227224|GSM4227225|GSM4227226|GSM4227227|GSM4498677|GSM4498678|RFL-D_1|RFL-D_2|RFL-M_1|RFL-M_2|RFL-P_1|RFL-P_2|RHL-D_1|RHL-D_2|RHL-M_1|RHL-M_2|RHL-P_1|RHL-P_2|RHL-P_3 ## 6 HDBR-N13393_ASCL1_OE|HDBR-N13393_Ctrl_OE|HDBR-N13393_NEUROD1_OE|HDBR-N13393_NEUROG3_OE|HDBR-N13393_PAX9_OE|HDBR-N13393_RFX6_OE|HDBR-N13393_TFAP2A_OE|HDBR-N13393_deltaNp63alpha_OE|HDBR1915_ASCL1_OE|HDBR1915_Ctrl_OE|HDBR1915_NEUROD1_OE|HDBR1915_NEUROG3_OE|HDBR1915_PAX9_OE|HDBR1915_RFX6_OE|HDBR1915_TFAP2A_OE|HDBR1915_deltaNp63alpha_OE|HDBR2174_ASCL1_OE|HDBR2174_Ctrl_OE|HDBR2174_NEUROD1_OE|HDBR2174_NEUROG3_OE|HDBR2174_PAX9_OE|HDBR2174_RFX6_OE|HDBR2174_TFAP2A_OE|HDBR2174_deltaNp63alpha_OE, 15413-LNG--FO-3_specimen|15415-LNG--FO-2_specimen|15417-LNG-0-FO-4_specimen|15424-LNG-0-FO-3_specimen|15428-LNG-0-FO-2_specimen|15737-FLNG-1(distal)_specimen|15739-FLNG-1(distal)_specimen|15739-FLNG-3(proximal)_specimen|15773-FLNG-3(proximal)_specimen|5478STDY7698210specimen|5698STDY7839908specimen|5698STDY7839910specimen|5698STDY7839918specimen|5891STDY8062349specimen|5891STDY8062350specimen|5891STDY8062351specimen|5891STDY8062352specimen|5891STDY8062353specimen|5891STDY8062354specimen|5891STDY8062355specimen|5891STDY8062356specimen|5891STDY9030806_8specimen|5891STDY9030807_9specimen|Hst4-LNG--FO-1_specimen|Hst5-LNG--FO-1_specimen|Hst7-LNG--FO-2_specimen|SIGAA10specimen|SIGAB10specimen|SIGAC10specimen|SIGAE6specimen|SIGAF6specimen|SIGAG12specimen|SIGAG6specimen|SIGAH10specimen|SIGAH12specimen|SIGAH4specimen|WSSS8011222specimen|WSSS8012016specimen|WSSS_F_LNG8713176specimen|WSSS_F_LNG8713177specimen|WSSS_F_LNG8713178specimen_15168proximal|WSSS_F_LNG8713179specimen_15168distal|WSSS_F_LNG8713184specimen_15233proximal|WSSS_F_LNG8713185specimen_15233distal|WSSS_F_LNG8713186specimen_proximal|WSSS_F_LNG8713187specimen_distal ##                 disease         preservationMethod donorCount ## 1                normal                         NA         10 ## 2                normal                         NA          9 ## 3                normal                         NA         16 ## 4 aortic valve stenosis    cryopreservation, other          5 ## 5                normal cryopreservation, other|NA         36 ## 6              , normaldevelopmentStagehuman adult stageadolescent stage|human adult stagehuman adult stage ## 4                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           human adult stage ## 5                                                                                                                                                                                                                                                             10th week post-fertilization human stage|9th week post-fertilization human stage|Carnegie stage 21|Carnegie stage 22|Carnegie stage 23|embryo stage|embryonic day 10.5|embryonic day 11.5|embryonic day 12|embryonic day 12.5|embryonic day 13|embryonic day 13.5|embryonic day 14.5|embryonic day 15.5|embryonic day 16.5|embryonic day 18.5|embryonic day 9.5 ## 6 11th week post-fertilization human stage|12th week post-fertilization human stage|13th week post-fertilization human stage|14th week post-fertilization human stage|15th week post-fertilization human stage|16th week post-fertilization human stage|17th week post-fertilization human stage|18th week post-fertilization human stage|19th week post-fertilization human stage|20th week post-fertilization human stage|21st week post-fertilization human stage|22nd week post-fertilization human stage|9th week post-fertilization human stage|Carnegie stage 14|Carnegie stage 17|Carnegie stage 22|Carnegie stage 23 ##                genusSpecies       biologicalSex selectedCellType catalog ## 1              Homo sapiens         female|male       NA, NA, NA   dcp43 ## 2              Homo sapiens              female               NA   dcp43 ## 3              Homo sapiens              female               NA   dcp43 ## 4              Homo sapiens         female|male               NA   dcp43 ## 5 Homo sapiens|Mus musculus female|male|unknown           NA, NA   dcp43 ## 6              Homo sapiens female|male|unknown           NA, NA   dcp43 ##                                entryId                             sourceId ## 1 ef1e3497-515e-4bbe-8d4c-10161854b699 949febcd-69f0-4c61-aaf8-52252d0ae5cd ## 2 923d3231-7295-4184-b3f6-c3082766a8c7 445d8c04-718b-4367-9616-38d106e4431b ## 3 9b876d31-0739-4e96-9846-f76e6a427279 d5994701-3915-4357-a3f7-d1b3d8ebb0ee ## 4 902dc043-7091-445c-9442-d72e163b9879 52a17083-f001-4e0f-b207-6b1d8fa32579 ## 5 b176d756-62d8-4933-83a4-8b026380262f 124b11a6-66a9-4e3e-b14a-255d21521b53 ## 6 2fe3c60b-ac1a-4c61-9b59-f6556c0fce63 f52e9f35-cbbb-43f9-bb87-94f9d2788bf6 ##                                                                                                      sourceSpec ## 1 tdr:bigquery:gcp:datarepo-145a904d:hca_prod_ef1e3497515e4bbe8d4c10161854b699__20220118_dcp2_20231213_dcp34:/0 ## 2 tdr:bigquery:gcp:datarepo-64e86c6c:hca_prod_923d323172954184b3f6c3082766a8c7__20220906_dcp2_20230314_dcp25:/0 ## 3 tdr:bigquery:gcp:datarepo-9f5be9ac:hca_prod_9b876d3107394e969846f76e6a427279__20220906_dcp2_20230314_dcp25:/0 ## 4 tdr:bigquery:gcp:datarepo-f0498b78:hca_prod_902dc0437091445c9442d72e163b9879__20240201_dcp2_20240328_dcp37:/0 ## 5 tdr:bigquery:gcp:datarepo-582bf509:hca_prod_b176d75662d8493383a48b026380262f__20240903_dcp2_20240904_dcp42:/0 ## 6 tdr:bigquery:gcp:datarepo-573f4ced:hca_prod_2fe3c60bac1a4c619b59f6556c0fce63__20220606_dcp2_20230314_dcp25:/0 ##                                                                             workflow ## 1 ap_matrixNormalization|ap_rawMatrixGeneration_hg19|ap_rawMatrixGeneration_hg38, ,  ## 2                                                                                    ## 3                                        analysis_protocol_1|analysis_protocol_2, ,  ## 4                                                          raw_matrix_generation, ,  ## 5                                               scRNA_analysis|visium_analysis, , ,  ## 6                           processed_matrix_ap|raw_matrix_ap|visium_matrix_ap, , ,  ##                                                     libraryConstructionApproach ## 1                                                                 , 10x 3' v2,  ## 2                                                                   10x 3' v2,  ## 3                                                                 , 10x 3' v2,  ## 4                                                                 , 10x 3' v3,  ## 5            , , 10x 3' v2|10x 3' v3|10x 5' v1|Visium Spatial Gene Expression,  ## 6 , , 10x 3' v2|10x 3' v3|10x 5' v1|Visium Spatial Gene Expression|scATAC-seq,  ##             nucleicAcidSource                     instrumentManufacturerModel ## 1             , single cell,    , , Illumina NextSeq 500|Illumina NextSeq 550 ## 2               single cell,                          , Illumina NovaSeq 6000 ## 3             , single cell,                             , , Illumina HiSeq X ## 4          , single nucleus,                        , , Illumina NovaSeq 6000 ## 5 , , bulk cell|single cell,  , , , Illumina HiSeq 4000|Illumina NovaSeq 6000 ## 6           , , single cell,  , , , Illumina HiSeq 4000|Illumina NovaSeq 6000 ##     pairedEnd cellLineID cellLineType cellLinemodelOrgan ## 1   , , FALSE                                            ## 2     , FALSE                                            ## 3   , , FALSE                                            ## 4   , , FALSE                                            ## 5 , , , FALSE                                            ## 6 , , , FALSE                                            ##                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         organoids|HDBR-N13393_Ctrl_OE|HDBR-N13393_NEUROD1_OE|HDBR-N13393_NEUROG3_OE|HDBR-N13393_PAX9_OE|HDBR-N13393_RFX6_OE|HDBR-N13393_TFAP2A_OE|HDBR-N13393_deltaNp63alpha_OE|HDBR-N13393_organoid|HDBR1915_ASCL1_OE|HDBR1915_Ctrl_OE|HDBR1915_NEUROD1_OE|HDBR1915_NEUROG3_OE|HDBR1915_PAX9_OE|HDBR1915_RFX6_OE|HDBR1915_TFAP2A_OE|HDBR1915_deltaNp63alpha_OE|HDBR1915_organoid|HDBR2174_ASCL1_OE|HDBR2174_Ctrl_OE|HDBR2174_NEUROD1_OE|HDBR2174_NEUROG3_OE|HDBR2174_PAX9_OE|HDBR2174_RFX6_OE|HDBR2174_TFAP2A_OE|HDBR2174_deltaNp63alpha_OE|HDBR2174_organoid ##   organoidsmodelOrgan organoidsmodelOrganPart            lastModifiedDate ## 1                                             2023-11-02T12:30:26.777000Z ## 2                                             2022-08-08T11:11:06.854000Z ## 3                                             2022-08-23T12:48:58.239000Z ## 4                                             2024-03-06T13:09:41.289000Z ## 5                                             2024-07-03T12:56:39.509000Z ## 6                lung epithelial cell of lung 2022-05-20T09:34:37.057000Z"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadObjects.html","id":"download-object-and-load-to-r-2","dir":"Articles","previous_headings":"Human Cell Atlas","what":"Download object and load to R","title":"DownloadObjects","text":"manually check extracted metadata, users can download specified objects ParseHCA. downloaded objects controlled file.ext (choose \"rds\", \"rdata\", \"h5\", \"h5ad\" \"loom\"). returned value dataframe containing failed objects SeuratObject (file.ext rds). dataframe, users can re-run ParseHCA setting meta returned value. Show returned SeuratObject: example structure downloaded objects:","code":"# download objects hca.down <- ParseHCA(   meta = hca.human.10x.projects[1:4, ], out.folder = \"/Volumes/soyabean/GEfetch2R/download_hca\",   file.ext = c(\"h5ad\", \"rds\") )  # return SeuratObject hca.down.seu <- ParseHCA(   meta = hca.human.10x.projects[1:4, ], out.folder = \"/Volumes/soyabean/GEfetch2R/download_hca\",   file.ext = c(\"h5ad\", \"rds\"), return.seu = TRUE ) hca.down.seu ## An object of class Seurat  ## 33555 features across 88536 samples within 1 assay  ## Active assay: RNA (33555 features, 2000 variable features) ##  3 dimensional reductions calculated: pca, harmony, umap tree /Volumes/soyabean/GEfetch2R/download_hca ## /Volumes/soyabean/GEfetch2R/download_hca ## └── seurat_object_hca_as_harmonized_AS_SP_nuc_refined_cells.rds ##  ## 1 directory, 1 file"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DownloadRaw","text":"common situation need use unified software version (e.g. CellRanger) obtain count matrix, order better integrate compare multiple datasets. , use GEfetch2R download raw data (sra/fastq/bam). bam files, GEfetch2R also provides function user convert bam fastq files. GEfetch2R supports downloading raw data (sra/fastq/bam) SRA ENA GEO accessions. general, downloading raw data ENA much faster SRA, ascp parallel support.","code":"#> Warning: replacing previous import 'LoomExperiment::import' by #> 'reticulate::import' when loading 'GEfetch2R'"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"extract-all-samples-runs","dir":"Articles","previous_headings":"Download sra","what":"Extract all samples (runs)","title":"DownloadRaw","text":"fastq files stored SRA/ENA, GEfetch2R can extract sample information run number GEO accessions users can also provide dataframe containing run number interested samples. Extract samples GSE130636 platform GPL20301 (use platform = NULL platforms): Show sample information:","code":"# library library(GEfetch2R) GSE130636.runs <- ExtractRun(acce = \"GSE130636\", platform = \"GPL20301\") # a small test GSE130636.runs <- GSE130636.runs[GSE130636.runs$run %in% c(\"SRR9004346\", \"SRR9004351\"), ] head(GSE130636.runs) #>                   run experiment   gsm_name         title geo_accession #> SRR9004346 SRR9004346 SRX5783052 GSM3745993 Fovea donor 2    GSM3745993 #> SRR9004351 SRR9004351 SRX5783052 GSM3745993 Fovea donor 2    GSM3745993 #>                           status submission_date last_update_date type #> SRR9004346 Public on May 17 2019     May 02 2019      Dec 20 2019  SRA #> SRR9004351 Public on May 17 2019     May 02 2019      Dec 20 2019  SRA #>            channel_count source_name_ch1 organism_ch1 taxid_ch1 #> SRR9004346             1          Retina Homo sapiens      9606 #> SRR9004351             1          Retina Homo sapiens      9606 #>            characteristics_ch1 characteristics_ch1.1 molecule_ch1 #> SRR9004346     location: Fovea        donor: Donor 2    total RNA #> SRR9004351     location: Fovea        donor: Donor 2    totalextract_protocol_ch1 #> SRR9004346 A 2-mm foveal centered and a 4-mm peripheral punch from the inferotemporal region were acquired from three clinically normal human donors. Tissue was dissociated using the Papain Dissociation System (Worthington Biochemical Corporation, Lakewood NJ). Dissociated cells were resuspended in DMSO-based Recovery Cell Culture Freezing Media (Life Technologies Corporation, Grand Island NY). Suspensions were placed in a Cryo-Safe cooler (CryoSafe, Summerville SC) to cool at 1°C/minute in a -80°C freezer for 3-8 hours before storage in liquid nitrogen. #> SRR9004351 A 2-mm foveal centered and a 4-mm peripheral punch from the inferotemporal region were acquired from three clinically normal human donors. Tissue was dissociated using the Papain Dissociation System (Worthington Biochemical Corporation, Lakewood NJ). Dissociated cells were resuspended in DMSO-based Recovery Cell Culture Freezing Media (Life Technologies Corporation, Grand Island NY). Suspensions were placed in a Cryo-Safe cooler (CryoSafe, Summerville SC) to cool at 1°C/minute in a -80°C freezer for 3-8 hours before storage in liquid nitrogen. #>                                                                                                                                                                                                                                                                                                                                                                                                                        extract_protocol_ch1.1 #> SRR9004346 Single-cell RNA libraries were prepared for sequencing using standard 10X genomics protocols. Briefly, cryopreserved samples were thawed, and single cells were captured and barcoded using the Chromium System with the v3 single cell-reagent kit (10x Genomics, Pleasanton CA). Sequencing was performed on pooled libraries using the Illumina HiSeq 4000 platform (San Diego, CA), generating 150 base pair paired-end reads. #> SRR9004351 Single-cell RNA libraries were prepared for sequencing using standard 10X genomics protocols. Briefly, cryopreserved samples were thawed, and single cells were captured and barcoded using the Chromium System with the v3 single cell-reagent kit (10x Genomics, Pleasanton CA). Sequencing was performed on pooled libraries using the Illumina HiSeq 4000 platform (San Diego, CA), generating 150 base pair paired-end reads. #>                                                                                             data_processing #> SRR9004346 FASTQ files were generated from the raw BCL files using Illumina’s bcl2fastq conversion program. #> SRR9004351 FASTQ files were generated from the raw BCL files using Illumina’s bcl2fastq conversion program. #>                                                                                                                                                                                           data_processing.1 #> SRR9004346 Sequenced reads were mapped to the CellRanger human genome build hg19 (v3.0.0) with CellRanger (v3.0.1) using the CellRanger default human GTF and the following parameter: --expect-cells=8000. #> SRR9004351 Sequenced reads were mapped to the CellRanger human genome build hg19 (v3.0.0) with CellRanger (v3.0.1) using the CellRanger default human GTF and the following parameter: --expect-cells=8000. #>                                                                                                                            data_processing.2 #> SRR9004346 The six samples were collectively aggregated with the cellranger aggr function with the following parameter: --normalized=mapped. #> SRR9004351 The six samples were collectively aggregated with the cellranger aggr function with the following parameter: --normalized=mapped. #>            data_processing = Cells were filtered with Seurat (v2.3.4) FilterCells function. Cells with nUMIs less than 200 (to remove cells with poor read quality) or greater than 2500 (to remove cells likely to be doublets) were removed. Cells with greater tha ... #> SRR9004346                                                                                                                                                                                                                                                         TRUE). #> SRR9004351                                                                                                                                                                                                                                                         TRUE). #>            data_processing = Aggregated reads were normalized with Seurat (v2.3.4) with the following command: NormalizeData(object = seurat_object, normalization.method = \"LogNormalize\",  scale.factor = 10000). Variable genes were identified from downstream no ... #> SRR9004346                                                                                                                                                                                                                                    c(\"nUMI\", \"percent.mito\")). #> SRR9004351                                                                                                                                                                                                                                    c(\"nUMI\", \"percent.mito\")). #>                                                                                                                                                                                                                                                                                                      data_processing.3 #> SRR9004346 Clustering was performed with Seurat (v2.3.4) FindClusters. In order to generate the shared nearest neighbor (SNN) graph, the principal component analysis reduction technique was utilized for the first 10 principal components. A granularity resolution value of 0.6 was used to discriminate clusters. #> SRR9004351 Clustering was performed with Seurat (v2.3.4) FindClusters. In order to generate the shared nearest neighbor (SNN) graph, the principal component analysis reduction technique was utilized for the first 10 principal components. A granularity resolution value of 0.6 was used to discriminate clusters. #>             data_processing.4 #> SRR9004346 Genome_build: hg19 #> SRR9004351 Genome_build: hg19 #>                                                                                                                                                                                                                                                                                                                                                                                        data_processing.5 #> SRR9004346 Supplementary_files_format_and_content: Processed expression data matrix files are provided in tab-delimited format. Log-normalized expression values (from the seurat_object@data slot) were appended to relevant metadata (barcode and cluster label from the manuscript). Each row represents a unique cell, and columns correspond to metadata and log normalized gene expression values. #> SRR9004351 Supplementary_files_format_and_content: Processed expression data matrix files are provided in tab-delimited format. Log-normalized expression values (from the seurat_object@data slot) were appended to relevant metadata (barcode and cluster label from the manuscript). Each row represents a unique cell, and columns correspond to metadata and log normalized gene expression values. #>            platform_id  contact_name          contact_email  contact_institute #> SRR9004346    GPL20301 Todd,,Scheetz todd-scheetz@uiowa.edu UNIVERSITY OF IOWA #> SRR9004351    GPL20301 Todd,,Scheetz todd-scheetz@uiowa.edu UNIVERSITY OF IOWA #>            contact_address contact_city contact_state contact_zip/postal_code #> SRR9004346      3181B MERF    Iowa City            IA                   52242 #> SRR9004351      3181B MERF    Iowa City            IA                   52242 #>            contact_country    instrument_model library_selection library_source #> SRR9004346             USA Illumina HiSeq 4000              cDNA TRANSCRIPTOMIC #> SRR9004351             USA Illumina HiSeq 4000              cDNA TRANSCRIPTOMIC #>            library_strategy                 relation #> SRR9004346          RNA-Seq Reanalyzed by: GSE142449 #> SRR9004351          RNA-Seq Reanalyzed by: GSE142449 #>                                                                relation.1 #> SRR9004346 BioSample: https://www.ncbi.nlm.nih.gov/biosample/SAMN11566805 #> SRR9004351 BioSample: https://www.ncbi.nlm.nih.gov/biosample/SAMN11566805 #>                                                       relation.2 #> SRR9004346 SRA: https://www.ncbi.nlm.nih.gov/sra?term=SRX5783052 #> SRR9004351 SRA: https://www.ncbi.nlm.nih.gov/sra?term=SRX5783052 #>                                                                                                     supplementary_file_1 #> SRR9004346 ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM3745nnn/GSM3745993/suppl/GSM3745993_fovea_donor_2_expression.tsv.gz #> SRR9004351 ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM3745nnn/GSM3745993/suppl/GSM3745993_fovea_donor_2_expression.tsv.gz #>            series_id data_row_count library_layout taxon_id #> SRR9004346 GSE130636              0         PAIRED     9606 #> SRR9004351 GSE130636              0         PAIRED     9606 #>                          ebi_dir              ncbi_dir #> SRR9004346 SRR900/006/SRR9004346 SRR900/006/SRR9004346 #> SRR9004351 SRR900/001/SRR9004351 SRR900/001/SRR9004351"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"download-sra-1","dir":"Articles","previous_headings":"Download sra","what":"Download sra","title":"DownloadRaw","text":"dataframe contains gsm run number, GEfetch2R use prefetch download sra files SRA using ascp/download.file download sra files ENA. returned value dataframe contains failed runs. NULL, users can re-run DownloadSRA setting gsm.df returned value. Download SRA: Download ENA (parallel): .folder structure : gsm_number/run_number.","code":"# download GSE130636.down <- DownloadSRA(   gsm.df = GSE130636.runs,   prefetch.path = \"/Users/soyabean/software/sratoolkit.3.0.6-mac64/bin/prefetch\",   out.folder = \"/Volumes/soyabean/GEfetch2R/download_fastq\" ) # GSE130636.down is null or dataframe contains failed runs out.folder <- tempdir() # download from ENA using download.file GSE130636.down <- DownloadSRA(   gsm.df = GSE130636.runs, download.method = \"download.file\",   timeout = 3600, out.folder = \"/path/to/download_fastq\",   parallel = TRUE, use.cores = 2 )  # download from ENA using ascp GSE130636.down <- DownloadSRA(   gsm.df = GSE130636.runs, download.method = \"ascp\",   ascp.path = \"~/.aspera/connect/bin/ascp\", max.rate = \"300m\",   rename = TRUE, out.folder = \"/path/to/download_fastq\",   parallel = TRUE, use.cores = 2 )  # GSE130636.down is null or dataframe contains failed runs"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"split-sra-to-generate-fastq","dir":"Articles","previous_headings":"Download fastq","what":"Split sra to generate fastq","title":"DownloadRaw","text":"obtaining sra files, GEfetch2R provides function SplitSRA split sra files fastq files using parallel-fastq-dump (parallel, fastest gzip output), fasterq-dump (parallel, fast unzipped output) fastq-dump (slowest gzip output). fastqs generated 10x Genomics, SplitSRA can identify read1, read2 index files format read1 read2 10x required format (sample1_S1_L001_R1_001.fastq.gz sample1_S1_L001_R2_001.fastq.gz). detail, file read length 26 28 considered read1, files read length 8 10 considered index files remain file considered read2. read length rules Sequencing Requirements Single Cell 3’ Sequencing Requirements Single Cell V(D)J. returned value vector failed sra files. NULL, users can re-run SplitSRA setting sra.path returned value. final .folder structure :","code":"# parallel-fastq-dump requires sratools.path GSE130636.split <- SplitSRA(   sra.folder = \"/Volumes/soyabean/GEfetch2R/download_fastq\",   fastq.type = \"10x\",   split.cmd.path = \"/Applications/anaconda3/bin/parallel-fastq-dump\",   sratools.path = \"/usr/local/bin\", split.cmd.paras = \"--gzip\",   split.cmd.threads = 4 ) tree /Volumes/soyabean/GEfetch2R/download_fastq #>  [01;34m/Volumes/soyabean/GEfetch2R/download_fastq [0m #> └──  [01;34mGSM3745993 [0m #>     ├──  [01;34mSRR9004346 [0m #>     │   ├──  [01;32mSRR9004346.sra [0m #>     │   ├──  [01;32mSRR9004346_1.fastq.gz [0m #>     │   ├──  [01;32mSRR9004346_2.fastq.gz [0m #>     │   ├──  [01;32mSRR9004346_S1_L001_R1_001.fastq.gz [0m #>     │   └──  [01;32mSRR9004346_S1_L001_R2_001.fastq.gz [0m #>     └──  [01;34mSRR9004351 [0m #>         ├──  [01;32mSRR9004351.sra [0m #>         ├──  [01;32mSRR9004351_1.fastq.gz [0m #>         ├──  [01;32mSRR9004351_2.fastq.gz [0m #>         ├──  [01;32mSRR9004351_S1_L001_R1_001.fastq.gz [0m #>         └──  [01;32mSRR9004351_S1_L001_R2_001.fastq.gz [0m #>  #> 4 directories, 10 files"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"download-fastq-directly-from-ena","dir":"Articles","previous_headings":"Download fastq","what":"Download fastq directly from ENA","title":"DownloadRaw","text":"Alternatively, GEfetch2R provides function DownloadFastq download fastq files directly ENA (parallel, faster method). returned value dataframe contains failed runs. NULL, users can re-run DownloadFastq setting gsm.df returned value.","code":"# use download.file GSE130636.down.fastq <- DownloadFastq(   gsm.df = GSE130636.runs, out.folder = \"/path/to/download_fastq\",   download.method = \"download.file\",   parallel = TRUE, use.cores = 2 )  # use ascp GSE130636.down.fastq <- DownloadFastq(   gsm.df = GSE130636.runs, out.folder = \"/path/to/download_fastq\",   download.method = \"ascp\", ascp.path = \"~/.aspera/connect/bin/ascp\", max.rate = \"300m\",   parallel = TRUE, use.cores = 2 )"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"extract-all-samples-runs-1","dir":"Articles","previous_headings":"Download bam","what":"Extract all samples (runs)","title":"DownloadRaw","text":"GEfetch2R can extract sample information run number GEO accessions users can also provide dataframe containing run number interested samples. Show sample information:","code":"GSE138266.runs <- ExtractRun(acce = \"GSE138266\", platform = \"GPL18573\") head(GSE138266.runs) #>                     run experiment   gsm_name        title geo_accession #> SRR10211566 SRR10211566 SRX6931254 GSM4104137 MS60249_PBMC    GSM4104137 #>                            status submission_date last_update_date type #> SRR10211566 Public on Dec 10 2019     Oct 01 2019      Dec 10 2019  SRA #>             channel_count                   source_name_ch1 organism_ch1 #> SRR10211566             1 peripheral blood mononuclear cell Homo sapiens #>             taxid_ch1                   characteristics_ch1 molecule_ch1 #> SRR10211566      9606 disease condition: Multiple Sclerosis    total RNA #>                                                                                                                                                                                                                                                                                           extract_protocol_ch1 #> SRR10211566 Patient Inclusion Criterior: 1) treatment naive patients with a first episode suggestive of MS (i.e. clinically isolated syndrome (CIS)) or with relapsing-remitting (RR)MS diagnosed based on MAGNIMS criteria86, 2) patients receiving LP for diagnostic purposes and consenting to participateextract_protocol_ch1.1 #> SRR10211566 Patient Exclusion Criterior: 1) questionable diagnosis of MS by clinical signs or magnetic resonance imaging (MRI) findings, 2) secondary chronic progressive MS or primary progressive MS. IIH patients were included, if they gave informed consent. Exclusion criteria for all patients were: 1) immunologically relevant co-morbidities (e.g. rheumatologic diseases), 2) severe concomitant infectious diseases (e.g. HIV, meningitis, encephalitis), 3) pregnancy or breastfeeding, 4) younger than 18 years, 5) mental illness impairing the ability to give informed consent, 6) artificial blood contamination during the lumbar puncture resulting in >200 red blood cells / μl. #>                                                                                  extract_protocol_ch1.2 #> SRR10211566 Chromium Single Cell Controller using the Chromium Single Cell 3' Library & Gel Bead Kit v2 #>                     extract_protocol_ch1.3 #> SRR10211566 AMPure beads (Beckman Coulter) #>                                                                        extract_protocol_ch1.4 #> SRR10211566  Illumina Nextseq 500 using the High-Out 75 cycle kit with a 26-8-0-57 read setup #>              description #> SRR10211566 MS60249_PBMC #>                                                               data_processing #> SRR10211566 Raw bcl files were de-multiplexed using cellranger v2.0.2 mkfastq #>                                                                                                                                     data_processing.1 #> SRR10211566 Subsequent read alignments and transcript counting was done individually for each sample using cellranger count with standard parameters. #>                                                                                                              data_processing.2 #> SRR10211566 Cellranger aggr was employed, to ensure that all samples had the same number of confidently mapped reads per cell. #>                data_processing.3 #> SRR10211566 Genome_build: GRCh38 #>                                                                     data_processing.4 #> SRR10211566 Supplementary_files_format_and_content: Standard cellranger output format #>             platform_id contact_name                 contact_email #> SRR10211566    GPL18573 Chenling,,Xu chenlingantelope@berkeley.edu #>             contact_laboratory    contact_department contact_institute #> SRR10211566          Yosef Lab Computational Biology       UC Berkeley #>             contact_address contact_city contact_state contact_zip/postal_code #> SRR10211566    Stanley Hall     Berkeley            CA                   94704 #>             contact_country     instrument_model library_selection #> SRR10211566             USA Illumina NextSeq 500              cDNA #>             library_source library_strategy #> SRR10211566 TRANSCRIPTOMIC          RNA-Seq #>                                                                   relation #> SRR10211566 BioSample: https://www.ncbi.nlm.nih.gov/biosample/SAMN12880976 #>                                                        relation.1 #> SRR10211566 SRA: https://www.ncbi.nlm.nih.gov/sra?term=SRX6931254 #>                                                                                                           supplementary_file_1 #> SRR10211566 ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4104nnn/GSM4104137/suppl/GSM4104137_MS60249_PBMCs_GRCh38_barcodes.tsv.gz #>                                                                                                        supplementary_file_2 #> SRR10211566 ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4104nnn/GSM4104137/suppl/GSM4104137_MS60249_PBMCs_GRCh38_genes.tsv.gz #>                                                                                                         supplementary_file_3 #> SRR10211566 ftp://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4104nnn/GSM4104137/suppl/GSM4104137_MS60249_PBMCs_GRCh38_matrix.mtx.gz #>             series_id data_row_count library_layout taxon_id #> SRR10211566 GSE138266              0         PAIRED     9606 #>                            ebi_dir               ncbi_dir #> SRR10211566 SRR102/066/SRR10211566 SRR102/066/SRR10211566"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"download-bam-from-sra","dir":"Articles","previous_headings":"Download bam","what":"Download bam from SRA","title":"DownloadRaw","text":"dataframe contains gsm run number, GEfetch2R provides DownloadBam download bam files using prefetch. supports 10x generated bam files normal bam files. 10x generated bam: bam files generated 10x softwares (e.g. CellRanger) contain custom tags kept using default parameters prefetch, GEfetch2R adds --type TenX make sure downloaded bam files contain tags. normal bam: normal bam files, DownloadBam download sra files first convert sra files bam files sam-dump. testing efficiency prefetch + sam-dump sam-dump, former much faster latter (52G sra 72G bam files): returned value dataframe containing failed runs (either failed download sra files failed convert bam files normal bam; failed download bam files 10x generated bam). NULL, users can re-run DownloadBam setting gsm.df returned value. following example download 10x generated bam file: .folder structure : gsm_number/run_number.","code":"# # use prefetch to download sra file # prefetch -X 60G SRR1976036 # # real    117m26.334s # # user    16m42.062s # # sys 3m28.295s  # # use sam-dump to convert sra to bam # time (sam-dump SRR1976036.sra | samtools view -bS - -o SRR1976036.bam) # # real    536m2.721s # # user    749m41.421s # # sys 20m49.069s   # use sam-dump to download bam directly # time (sam-dump SRR1976036 | samtools view -bS - -o SRR1976036.bam) # # more than 36hrs only get ~3G bam files, too slow # a small test GSE138266.runs <- GSE138266.runs[GSE138266.runs$run %in% c(\"SRR10211566\"), ] # download GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs,   prefetch.path = \"/Users/soyabean/software/sratoolkit.3.0.6-mac64/bin/prefetch\",   out.folder = \"/Volumes/soyabean/GEfetch2R/download_bam\" ) # GSE138266.down is null or dataframe contains failed runs"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"download-bam-from-ena","dir":"Articles","previous_headings":"Download bam","what":"Download bam from ENA","title":"DownloadRaw","text":"returned value dataframe containing failed runs. NULL, users can re-run DownloadBam setting gsm.df returned value. following example download 10x generated bam file ENA:","code":"# download.file GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, download.method = \"download.file\",   timeout = 3600, out.folder = \"/path/to/download_bam\",   parallel = TRUE, use.cores = 2 ) # ascp GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, download.method = \"ascp\",   ascp.path = \"~/.aspera/connect/bin/ascp\", max.rate = \"300m\",   rename = TRUE, out.folder = \"/path/to/download_bam\",   parallel = TRUE, use.cores = 2 )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"convert-bam-to-fastq","dir":"Articles","previous_headings":"Download bam","what":"Convert bam to fastq","title":"DownloadRaw","text":"downloaded bam files, GEfetch2R provides function Bam2Fastq convert bam files fastq files. bam files generated 10x softwares, Bam2Fastq utilizes bamtofastq tool developed 10x Genomics, otherwise, samtools utilized. returned value vector bam files failed convert fastq files. NULL, users can re-run Bam2Fastq setting bam.path returned value. final .folder structure :","code":"GSE138266.convert <- Bam2Fastq(   bam.folder = \"/Volumes/soyabean/GEfetch2R/download_bam\", bam.type = \"10x\",   bamtofastq.path = \"/Users/soyabean/software/bamtofastq_macos\",   bamtofastq.paras = \"--nthreads 4\" ) tree /Volumes/soyabean/GEfetch2R/download_bam #>  [01;34m/Volumes/soyabean/GEfetch2R/download_bam [0m #> └──  [01;34mGSM4104137 [0m #>     └──  [01;34mSRR10211566 [0m #>         ├──  [01;34mbam2fastq [0m #>         │   └──  [01;34mMS60249_PBMC_2_0_MissingLibrary_1_H72VGBGX2 [0m #>         │       ├──  [01;32mbamtofastq_S1_L001_I1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L001_I1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L001_R1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L001_R1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L001_R2_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L001_R2_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L002_I1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L002_I1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L002_R1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L002_R1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L002_R2_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L002_R2_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L003_I1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L003_I1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L003_R1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L003_R1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L003_R2_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L003_R2_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L004_I1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L004_I1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L004_R1_001.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L004_R1_002.fastq.gz [0m #>         │       ├──  [01;32mbamtofastq_S1_L004_R2_001.fastq.gz [0m #>         │       └──  [01;32mbamtofastq_S1_L004_R2_002.fastq.gz [0m #>         └──  [01;32mbamfiles_MS60249_PBMC_possorted_genome_bam.bam [0m #>  #> 5 directories, 25 files"},{"path":"https://showteeth.github.io/GEfetch2R/articles/DownloadRaw.html","id":"load-fastq-to-r","dir":"Articles","previous_headings":"","what":"Load fastq to R","title":"DownloadRaw","text":"downloaded/converted fastq files, GEfetch2R provides function Fastq2R align reference genome CellRanger (10x-generated fastq files) STAR (Smart-seq2 bulk RNA-seq data), load output Seurat (10x-generated fastq files) DESEq2 (Smart-seq2 bulk RNA-seq data). , use downloaded fastq files example. two runs (SRR9004346 SRR9004351) corresponding sample name GSM3745993. running CellRanger, process SRR9004346 SRR9004351 single merged sample specifying --sample=SRR9004346,SRR9004351: Since fastq files Smart-seq2 bulk RNA-seq data usually included single run, sample.dir specify parent directory run (sample.dir = \"/Volumes/soyabean/GEfetch2R/download_fastq/GSM3745993\" example).","code":"# run CellRanger (10x Genomics) seu <- Fastq2R(   sample.dir = \"/Volumes/soyabean/GEfetch2R/download_fastq\",   ref = \"/path/to/10x/ref\",   method = \"CellRanger\",   out.folder = \"/path/to/results\",   st.path = \"/path/to/cellranger\",   st.paras = \"--chemistry=auto --jobmode=local\" ) # run STAR (Smart-seq2 or bulk RNA-seq) deobj <- Fastq2R(   sample.dir = \"/path/to/fastq\",   ref = \"/path/to/star/ref\",   method = \"STAR\",   out.folder = \"/path/to/results\",   st.path = \"/path/to/STAR\",   st.paras = \"--outBAMsortingThreadN 4 --twopassMode None\" )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R designed accelerate users download prepare single-cell datasets public resources. can used : Download fastq files GEO/SRA, foramt fastq files standard style can identified 10x softwares (e.g. CellRanger). Download bam files GEO/SRA, support downloading original 10x generated bam files (custom tags) normal bam files, convert bam files fastq files. Download scRNA-seq matrix annotation (e.g. cell type) information GEO, PanglanDB UCSC Cell Browser, load downnloaded matrix Seurat. Download processed objects Zeenodo CELLxGENE. Formats conversion widely used single cell objects (SeuratObject, AnnData, SingleCellExperiment, CellDataSet/cell_data_set loom).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R R package distributed part CRAN. install package, start R enter: data structures conversion, GEfetch2R requires several python pcakages, can install : general, recommended install Github repository (update timely). GEfetch2R installed, can loaded following command.","code":"# install via CRAN (v0.5.0) # old version, it's better to install via Github install.packages(\"GEfetch2R\") # if you install from CRAN, you should install the following packages # install.packages(\"devtools\") #In case you have not installed it. devtools::install_github(\"alexvpickering/GEOfastq\") # download fastq devtools::install_github(\"cellgeni/sceasy\") # format conversion devtools::install_github(\"mojaveazure/seurat-disk\") # format conversion devtools::install_github(\"satijalab/seurat-wrappers\") # format conversion  # install via Github (v0.5.0) devtools::install_github(\"showteeth/GEfetch2R\") # install python packages conda install -c bioconda loompy anndata # or pip install anndata loompy library(\"GEfetch2R\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"downloas-fastq-and-bam","dir":"Articles","previous_headings":"","what":"Downloas fastq and bam","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"Since downloading process time-consuming, provide commands used illustrate usage.","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"prepare-run-number","dir":"Articles","previous_headings":"Downloas fastq and bam > Downloas fastq","what":"Prepare run number","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"fastq files stored SRA, GEfetch2R can extract sample information run number GEO accession number users can also provide dataframe contains run number interested samples. Extract samples GSE130636 platform GPL20301 (use platform = NULL platforms):","code":"GSE130636.runs <- ExtractRun(acce = \"GSE130636\", platform = \"GPL20301\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-sra","dir":"Articles","previous_headings":"Downloas fastq and bam > Downloas fastq","what":"Download sra","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"dataframe contains gsm run number, GEfetch2R download sra files using prefetch. returned result dataframe contains failed runs. NULL, users can re-run DownloadSRA setting gsm.df returned result. .folder structure : gsm_number/run_number.","code":"# a small test GSE130636.runs <- GSE130636.runs[GSE130636.runs$run %in% c(\"SRR9004346\", \"SRR9004351\"), ] # download, you may need to set prefetch.path out.folder <- tempdir() GSE130636.down <- DownloadSRA(   gsm.df = GSE130636.runs,   out.folder = out.folder ) # GSE130636.down is null or dataframe contains failed runs"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"split-fastq","dir":"Articles","previous_headings":"Downloas fastq and bam > Downloas fastq","what":"Split fastq","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"obtaining sra files, GEfetch2R provides function SplitSRA split sra files fastq files using parallel-fastq-dump (parallel, fastest gzip output), fasterq-dump (parallel, fast unzipped output) fastq-dump (slowest gzip output). fastqs generated 10x Genomics, SplitSRA can identify read1, read2 index files format read1 read2 10x required format (sample1_S1_L001_R1_001.fastq.gz sample1_S1_L001_R2_001.fastq.gz). detail, file read length 26 28 considered read1, files read length 8 10 considered index files remain file considered read2. read length rules Sequencing Requirements Single Cell 3’ Sequencing Requirements Single Cell V(D)J. returned result vector failed sra files. NULL, users can re-run SplitSRA setting sra.path returned result.","code":"# parallel-fastq-dump requires sratools.path # you may need to set split.cmd.path and sratools.path sra.folder <- tempdir() GSE130636.split <- SplitSRA(   sra.folder = sra.folder,   fastq.type = \"10x\", split.cmd.threads = 4 )"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"prepare-run-number-1","dir":"Articles","previous_headings":"Downloas fastq and bam > Download bam","what":"Prepare run number","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R can extract sample information run number GEO accession number users can also provide dataframe contains run number interested samples.","code":"GSE138266.runs <- ExtractRun(acce = \"GSE138266\", platform = \"GPL18573\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-bam-1","dir":"Articles","previous_headings":"Downloas fastq and bam > Download bam","what":"Download bam","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"dataframe contains gsm run number, GEfetch2R provides DownloadBam download bam files using prefetch. suooorts 10x generated bam files normal bam files. 10x generated bam: bam files generated 10x softwares (e.g. CellRanger) contain custom tags kept using default parameters prefetch, GEfetch2R adds --type TenX make sure downloaded bam files contain tags. normal bam: normal bam files, DownloadBam download sra files first convert sra files bam files sam-dump. testing efficiency prefetch + sam-dump sam-dump, former much faster latter (52G sra 72G bam files): returned result dataframe containing failed runs (either failed download sra files failed convert bam files normal bam; failed download bam files 10x generated bam). NULL, users can re-run DownloadBam setting gsm.df returned result. following example download 10x generated bam file: .folder structure : gsm_number/run_number.","code":"# # use prefetch to download sra file # prefetch -X 60G SRR1976036 # # real    117m26.334s # # user    16m42.062s # # sys 3m28.295s  # # use sam-dump to convert sra to bam # time (sam-dump SRR1976036.sra | samtools view -bS - -o SRR1976036.bam) # # real    536m2.721s # # user    749m41.421s # # sys 20m49.069s   # use sam-dump to download bam directly # time (sam-dump SRR1976036 | samtools view -bS - -o SRR1976036.bam) # # more than 36hrs only get ~3G bam files, too slow # a small test GSE138266.runs <- GSE138266.runs[GSE138266.runs$run %in% c(\"SRR10211566\"), ] # download, you may need to set prefetch.path out.folder <- tempdir() GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs,   out.folder = out.folder ) # GSE138266.down is null or dataframe contains failed runs"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"convert-bam-to-fastq","dir":"Articles","previous_headings":"Downloas fastq and bam > Download bam","what":"Convert bam to fastq","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"downloaded bam files, GEfetch2R provides function Bam2Fastq convert bam files fastq files. bam files generated 10x softwares, Bam2Fastq utilizes bamtofastq tool developed 10x Genomics. returned result vector bam files failed convert fastq files. NULL, users can re-run Bam2Fastq setting bam.path returned result.","code":"bam.folder <- tempdir() # you may need to set bamtofastq.path and bamtofastq.paras GSE138266.convert <- Bam2Fastq(   bam.folder = bam.folder )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-count-matrix","dir":"Articles","previous_headings":"","what":"Download count matrix","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides functions users download count matrices annotations (e.g. cell type annotation composition) GEO single-cell databases (e.g. PanglaoDB UCSC Cell Browser). GEfetch2R also supports loading downloaded data Seurat. now, public resources supported returned results:","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"geo","dir":"Articles","previous_headings":"Download count matrix","what":"GEO","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEO international public repository archives freely distributes microarray, next-generation sequencing, forms high-throughput functional genomics data submitted research community. provides convenient way users explore select interested scRNA-seq datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"extract-metadata","dir":"Articles","previous_headings":"Download count matrix > GEO","what":"Extract metadata","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ExtractGEOMeta extract sample metadata, including sample title, source name/tissue, description, cell type, treatment, paper title, paper abstract, organism, protocol, data processing methods, et al.","code":"# extract metadata of specified platform GSE200257.meta <- ExtractGEOMeta(acce = \"GSE200257\", platform = \"GPL24676\") # set VROOM_CONNECTION_SIZE to avoid error: Error: The size of the connection buffer (786432) was not large enough Sys.setenv(\"VROOM_CONNECTION_SIZE\" = 131072 * 60) # extract metadata of all platforms GSE94820.meta <- ExtractGEOMeta(acce = \"GSE94820\", platform = NULL)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-matrix-and-load-to-seurat","dir":"Articles","previous_headings":"Download count matrix > GEO","what":"Download matrix and load to Seurat","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"manually check extracted metadata, users can download count matrix load count matrix Seurat ParseGEO. count matrix, ParseGEO supports downloading matrix supplementary files extracting ExpressionSet, users can control source specifying .supp detecting automatically (ParseGEO extract count matrix ExpressionSet first, count matrix NULL contains non-integer values, ParseGEO download supplementary files). supplementary files two main types: single count matrix file containing cells CellRanger-style outputs (barcode, matrix, feature/gene), users required choose type supplementary files supp.type. count matrix, ParseGEO load matrix Seurat automatically. multiple samples available, users can choose merge SeuratObject merge. bulk RNA-seq, set data.type = \"bulk\" ParseGEO, return count matrix.","code":"# for cellranger output out.folder <- tempdir() GSE200257.seu <- ParseGEO(   acce = \"GSE200257\", platform = NULL, supp.idx = 1, down.supp = TRUE, supp.type = \"10x\",   out.folder = out.folder ) # for count matrix, no need to specify out.folder, download count matrix to tmp folder GSE94820.seu <- ParseGEO(acce = \"GSE94820\", platform = NULL, supp.idx = 1, down.supp = TRUE, supp.type = \"count\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"panglaodb","dir":"Articles","previous_headings":"Download count matrix","what":"PanglaoDB","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"PanglaoDB database contains scRNA-seq datasets mouse human. now, contains 5,586,348 cells 1368 datasets (1063 Mus musculus 305 Homo sapiens). well organized metadata every dataset, including tissue, protocol, species, number cells cell type annotation (computationally identified). Daniel Osorio developed rPanglaoDB access PanglaoDB data, functions GEfetch2R based rPanglaoDB. Since PanglaoDB longer maintained, GEfetch2R cached metadata cell type composition use cached data default accelerate, users can access cached data PanglaoDBMeta (metadata) PanglaoDBComposition (cell type composition).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"summarise-attributes","dir":"Articles","previous_headings":"Download count matrix > PanglaoDB","what":"Summarise attributes","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides StatDBAttribute summary attributes PanglaoDB:","code":"# use cached metadata StatDBAttribute(df = PanglaoDBMeta, filter = c(\"species\", \"protocol\"), database = \"PanglaoDB\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"extract-metadata-1","dir":"Articles","previous_headings":"Download count matrix > PanglaoDB","what":"Extract metadata","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ExtractPanglaoDBMeta select interested datasets specified species, protocol, tissue cell number (available values attributes can obtained StatDBAttribute). User can also choose whether add cell type annotation every dataset show.cell.type. GEfetch2R uses cached metadata cell type composition default, users can change setting local.data = FALSE.","code":"hsa.meta <- ExtractPanglaoDBMeta(   species = \"Homo sapiens\", protocol = c(\"Smart-seq2\", \"10x chromium\"),   show.cell.type = TRUE, cell.num = c(1000, 2000) )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"extract-cell-type-composition","dir":"Articles","previous_headings":"Download count matrix > PanglaoDB","what":"Extract cell type composition","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ExtractPanglaoDBComposition extract cell type annotation composition (use cached data default accelerate, users can change setting local.data = FALSE).","code":"hsa.composition <- ExtractPanglaoDBComposition(species = \"Homo sapiens\", protocol = c(\"Smart-seq2\", \"10x chromium\"))"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-matrix-and-load-to-seurat-1","dir":"Articles","previous_headings":"Download count matrix > PanglaoDB","what":"Download matrix and load to Seurat","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"manually check extracted metadata, GEfetch2R provides ParsePanglaoDB download count matrix load count matrix Seurat. available cell type annotation, uses can filter datasets without specified cell type cell.type. Users can also include/exclude cells expressing specified genes include.gene/exclude.gene. count matrix, ParsePanglaoDB load matrix Seurat automatically. multiple datasets available, users can choose merge SeuratObject merge.","code":"# small test hsa.seu <- ParsePanglaoDB(hsa.meta[1:3, ], merge = TRUE)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"ucsc-cell-browser","dir":"Articles","previous_headings":"Download count matrix","what":"UCSC Cell Browser","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"UCSC Cell Browser web-based tool allows scientists interactively visualize scRNA-seq datasets. contains 1040 single cell datasets 17 different species. , organized hierarchical structure, can help users quickly locate datasets interested .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"show-available-datasets","dir":"Articles","previous_headings":"Download count matrix > UCSC Cell Browser","what":"Show available datasets","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ShowCBDatasets show available datasets. Due large number datasets, ShowCBDatasets enables users perform lazy load dataset json files instead downloading json files online (time-consuming!!!). lazy load requires users provide json.folder save json files set lazy = TRUE (first time run, ShowCBDatasets download current json files json.folder, next time run, lazy = TRUE, ShowCBDatasets load downloaded json files json.folder.). , ShowCBDatasets supports updating local datasets update = TRUE. number datasets available species:","code":"json.folder <- tempdir() # first time run, the json files are stored under json.folder # ucsc.cb.samples = ShowCBDatasets(lazy = TRUE, json.folder = json.folder, update = TRUE)  # second time run, load the downloaded json files ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, json.folder = json.folder, update = FALSE)  # always read online # ucsc.cb.samples = ShowCBDatasets(lazy = FALSE) # the number of datasets nrow(ucsc.cb.samples)  # available species unique(unlist(sapply(unique(gsub(pattern = \"\\\\|parent\", replacement = \"\", x = ucsc.cb.samples$organisms)), function(x) {   unlist(strsplit(x = x, split = \", \")) })))"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"summarise-attributes-1","dir":"Articles","previous_headings":"Download count matrix > UCSC Cell Browser","what":"Summarise attributes","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides StatDBAttribute summary attributes UCSC Cell Browser:","code":"StatDBAttribute(df = ucsc.cb.samples, filter = c(\"organism\", \"organ\"), database = \"UCSC\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"extract-metadata-2","dir":"Articles","previous_headings":"Download count matrix > UCSC Cell Browser","what":"Extract metadata","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ExtractCBDatasets filter metadata collection, sub-collection, organ, disease status, organism, project cell number (available values attributes can obtained StatDBAttribute except cell number). attributes except cell number support fuzzy match fuzzy.match, useful selecting datasets.","code":"hbb.sample.df <- ExtractCBDatasets(all.samples.df = ucsc.cb.samples, organ = c(\"brain\", \"blood\"), organism = \"Human (H. sapiens)\", cell.num = c(1000, 2000))"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"extract-cell-type-composition-1","dir":"Articles","previous_headings":"Download count matrix > UCSC Cell Browser","what":"Extract cell type composition","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ExtractCBComposition extract cell type annotation composition.","code":"hbb.sample.ct <- ExtractCBComposition(json.folder = json.folder, sample.df = hbb.sample.df)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"load-the-online-datasets-to-seurat","dir":"Articles","previous_headings":"Download count matrix > UCSC Cell Browser","what":"Load the online datasets to Seurat","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"manually check extracted metadata, GEfetch2R provides ParseCBDatasets load online count matrix Seurat. attributes available ExtractCBDatasets also . Please note loading process provided ParseCBDatasets load online count matrix instead downloading local. multiple datasets available, users can choose merge SeuratObject merge.","code":"hbb.sample.seu <- ParseCBDatasets(sample.df = hbb.sample.df)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-object","dir":"Articles","previous_headings":"","what":"Download object","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides functions users download processed single-cell RNA-seq data Zenodo, CELLxGENE Human Cell Atlas, including RDS, RData, h5ad, h5, loom objects. now, public resources supported returned results:","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"zenodo","dir":"Articles","previous_headings":"Download object","what":"Zenodo","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"Zenodo contains various types processed objects, SeuratObject clustered annotated, AnnData contains processed results generated scanpy.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"extract-metadata-3","dir":"Articles","previous_headings":"Download object > Zenodo","what":"Extract metadata","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ExtractZenodoMeta extract dataset metadata, including dataset title, description, available files corresponding md5. Please note dataset restricted access, returned dataframe empty.","code":"# single doi zebrafish.df <- ExtractZenodoMeta(doi = \"10.5281/zenodo.7243603\")  # vector dois multi.dois <- ExtractZenodoMeta(doi = c(\"1111\", \"10.5281/zenodo.7243603\", \"10.5281/zenodo.7244441\"))"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-object-1","dir":"Articles","previous_headings":"Download object > Zenodo","what":"Download object","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"manually check extracted metadata, users can download specified objects ParseZenodo. downloaded objects controlled file.ext provided object formats lower case (e.g. rds/rdata/h5ad). returned result dataframe containing failed objects. NULL, users can re-run ParseZenodo setting doi.df returned result.","code":"out.folder <- tempdir() multi.dois.parse <- ParseZenodo(   doi = c(\"1111\", \"10.5281/zenodo.7243603\", \"10.5281/zenodo.7244441\"),   file.ext = c(\"rdata\", \"rds\"), out.folder = out.folder )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"cellxgene","dir":"Articles","previous_headings":"Download object","what":"CELLxGENE","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"CELLxGENE web server contains 910 single-cell datasets, users can explore, download upload datasets. downloaded datasets provided CELLxGENE two formats: h5ad (AnnData v0.8) rds (Seurat v4).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"show-available-datasets-1","dir":"Articles","previous_headings":"Download object > CELLxGENE","what":"Show available datasets","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ShowCELLxGENEDatasets extract dataset metadata, including dataset title, description, contact, organism, ethnicity, sex, tissue, disease, assay, suspension type, cell type, et al.","code":"# all available datasets all.cellxgene.datasets <- ShowCELLxGENEDatasets()"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"summarise-attributes-2","dir":"Articles","previous_headings":"Download object > CELLxGENE","what":"Summarise attributes","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides StatDBAttribute summary attributes CELLxGENE:","code":"StatDBAttribute(df = all.cellxgene.datasets, filter = c(\"organism\", \"sex\"), database = \"CELLxGENE\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"extract-metadata-4","dir":"Articles","previous_headings":"Download object > CELLxGENE","what":"Extract metadata","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"GEfetch2R provides ExtractCELLxGENEMeta filter dataset metadata, available values attributes can obtained StatDBAttribute except cell number:","code":"# human 10x v2 and v3 datasets human.10x.cellxgene.meta <- ExtractCELLxGENEMeta(   all.samples.df = all.cellxgene.datasets,   assay = c(\"10x 3' v2\", \"10x 3' v3\"), organism = \"Homo sapiens\" )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"download-object-2","dir":"Articles","previous_headings":"Download object > CELLxGENE","what":"Download object","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"manually check extracted metadata, users can download specified objects ParseCELLxGENE. downloaded objects controlled file.ext (choose \"rds\" \"h5ad\"). returned result dataframe containing failed datasets. NULL, users can re-run ParseCELLxGENE setting meta returned result.","code":"out.folder <- tempdir() ParseCELLxGENE(   meta = human.10x.cellxgene.meta[1:5, ], file.ext = \"rds\",   out.folder = out.folder )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"format-conversion","dir":"Articles","previous_headings":"","what":"Format conversion","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"many tools developed process scRNA-seq data, Scanpy, Seurat, scran Monocle. tools objects, Anndata Scanpy, SeuratObject Seurat, SingleCellExperiment scran CellDataSet/cell_data_set Monocle2/Monocle3. also file format designed large omics datasets, loom. perform comprehensive scRNA-seq data analysis, usually need combine multiple tools, means need perform object conversion frequently. facilitate user analysis scRNA-seq data, GEfetch2R provides multiple functions perform object conversion widely used tools formats. object conversion implemented GEfetch2R two main advantages: one-step conversion different objects. conversion intermediate objects, thus preventing unnecessary information loss. tools used object conversion developed team source/destination object far possible. example, use SeuratDisk convert SeuratObject loom, use zellkonverter perform conversion SingleCellExperiment Anndata. tools, use sceasy perform conversion.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"test-data","dir":"Articles","previous_headings":"Format conversion","what":"Test data","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"SeuratObject: SingleCellExperiment:","code":"# library library(Seurat) # pbmc_small library(scRNAseq) # seger # object pbmc_small seger <- scRNAseq::SegerstolpePancreasData()"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"convert-seuratobject-to-other-objects","dir":"Articles","previous_headings":"Format conversion","what":"Convert SeuratObject to other objects","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":", convert SeuratObject SingleCellExperiment, CellDataSet/cell_data_set, Anndata, loom.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"seuratobject-to-singlecellexperiment","dir":"Articles","previous_headings":"Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to SingleCellExperiment","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"conversion performed functions implemented Seurat:","code":"sce.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"SCE\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"seuratobject-to-celldatasetcell_data_set","dir":"Articles","previous_headings":"Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to CellDataSet/cell_data_set","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"CellDataSet (conversion performed functions implemented Seurat): cell_data_set (conversion performed functions implemented SeuratWrappers):","code":"# BiocManager::install(\"monocle\") # reuqire monocle cds.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", reduction = \"tsne\", to = \"CellDataSet\") # remotes::install_github('cole-trapnell-lab/monocle3') # reuqire monocle3 cds3.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"cell_data_set\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"seuratobject-to-anndata","dir":"Articles","previous_headings":"Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to AnnData","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"AnnData Python object, reticulate used communicate Python R. User create Python environment contains anndata package specify environment path conda.path ensure exact usage environment. conversion performed functions implemented sceasy:","code":"# remove pbmc_small.h5ad first anndata.file <- tempfile(pattern = \"pbmc_small_\", fileext = \".h5ad\") # you may need to set conda.path ExportSeurat(   seu.obj = pbmc_small, assay = \"RNA\", to = \"AnnData\",   anndata.file = anndata.file )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"seuratobject-to-loom","dir":"Articles","previous_headings":"Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to loom","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"conversion performed functions implemented SeuratDisk:","code":"loom.file <- tempfile(pattern = \"pbmc_small_\", fileext = \".loom\") ExportSeurat(   seu.obj = pbmc_small, assay = \"RNA\", to = \"loom\",   loom.file = loom.file )"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"singlecellexperiment-to-seuratobject","dir":"Articles","previous_headings":"Format conversion > Convert other objects to SeuratObject","what":"SingleCellExperiment to SeuratObject","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"conversion performed functions implemented Seurat:","code":"seu.obj.sce <- ImportSeurat(obj = sce.obj, from = \"SCE\", count.assay = \"counts\", data.assay = \"logcounts\", assay = \"RNA\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"celldatasetcell_data_set-to-seuratobject","dir":"Articles","previous_headings":"Format conversion > Convert other objects to SeuratObject","what":"CellDataSet/cell_data_set to SeuratObject","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"CellDataSet SeuratObject (conversion performed functions implemented Seurat): cell_data_set SeuratObject (conversion performed functions implemented Seurat):","code":"seu.obj.cds <- ImportSeurat(obj = cds.obj, from = \"CellDataSet\", count.assay = \"counts\", assay = \"RNA\") seu.obj.cds3 <- ImportSeurat(obj = cds3.obj, from = \"cell_data_set\", count.assay = \"counts\", data.assay = \"logcounts\", assay = \"RNA\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"anndata-to-seuratobject","dir":"Articles","previous_headings":"Format conversion > Convert other objects to SeuratObject","what":"AnnData to SeuratObject","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"AnnData Python object, reticulate used communicate Python R. User create Python environment contains anndata package specify environment path conda.path ensure exact usage environment. conversion performed functions implemented sceasy:","code":"# you may need to set conda.path seu.obj.h5ad <- ImportSeurat(   anndata.file = anndata.file, from = \"AnnData\", assay = \"RNA\" )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"loom-to-seuratobject","dir":"Articles","previous_headings":"Format conversion > Convert other objects to SeuratObject","what":"loom to SeuratObject","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"conversion performed functions implemented SeuratDisk Seurat:","code":"# loom will lose reduction seu.obj.loom <- ImportSeurat(loom.file = loom.file, from = \"loom\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"conversion-between-singlecellexperiment-and-anndata","dir":"Articles","previous_headings":"Format conversion","what":"Conversion between SingleCellExperiment and AnnData","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"conversion performed functions implemented zellkonverter.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"singlecellexperiment-to-anndata","dir":"Articles","previous_headings":"Format conversion > Conversion between SingleCellExperiment and AnnData","what":"SingleCellExperiment to AnnData","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"","code":"# remove seger.h5ad first seger.anndata.file <- tempfile(pattern = \"seger_\", fileext = \".h5ad\") SCEAnnData(   from = \"SingleCellExperiment\", to = \"AnnData\", sce = seger, X_name = \"counts\",   anndata.file = seger.anndata.file )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"anndata-to-singlecellexperiment","dir":"Articles","previous_headings":"Format conversion > Conversion between SingleCellExperiment and AnnData","what":"AnnData to SingleCellExperiment","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"","code":"seger.anndata <- SCEAnnData(   from = \"AnnData\", to = \"SingleCellExperiment\",   anndata.file = seger.anndata.file )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"conversion-between-singlecellexperiment-and-loom","dir":"Articles","previous_headings":"Format conversion","what":"Conversion between SingleCellExperiment and loom","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"conversion performed functions implemented LoomExperiment.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"singlecellexperiment-to-loom","dir":"Articles","previous_headings":"Format conversion > Conversion between SingleCellExperiment and loom","what":"SingleCellExperiment to loom","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"","code":"# remove seger.loom first seger.loom.file <- tempfile(pattern = \"seger_\", fileext = \".loom\") SCELoom(   from = \"SingleCellExperiment\", to = \"loom\", sce = seger,   loom.file = seger.loom.file )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/GEfetch2R.html","id":"loom-to-singlecellexperiment","dir":"Articles","previous_headings":"Format conversion > Conversion between SingleCellExperiment and loom","what":"loom to SingleCellExperiment","title":"GEfetch2R - Access and Format Single-cell RNA-seq Datasets from Public Resources\n","text":"","code":"seger.loom <- SCELoom(   from = \"loom\", to = \"SingleCellExperiment\",   loom.file = seger.loom.file )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"ObjectConversion","text":"many tools developed process scRNA-seq data, Scanpy, Seurat, scran Monocle. tools objects, Anndata Scanpy, SeuratObject Seurat, SingleCellExperiment scran CellDataSet/cell_data_set Monocle2/Monocle3. also file format designed large omics datasets, loom. perform comprehensive scRNA-seq data analysis, usually need combine multiple tools, means need perform object conversion frequently. facilitate user analysis scRNA-seq data, GEfetch2R: benchmarked format conversion tools provides guides tool selection different scenarios(Anndata -> SeuratObject, SeuratObject Anndata, Anndata SingleCellExperiment, SingleCellExperiment Anndata) provides multiple functions perform format conversion widely used scRNA-seq objects (SeuratObject, AnnData, SingleCellExperiment, CellDataSet/cell_data_set loom)","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"test-data","dir":"Articles","previous_headings":"","what":"Test data","title":"ObjectConversion","text":"SeuratObject: SingleCellExperiment:","code":"# library library(GEfetch2R) ## Setting options('download.file.method.GEOquery'='auto') ## Setting options('GEOquery.inmemory.gpl'=FALSE) ## Registered S3 method overwritten by 'SeuratDisk': ##   method            from   ##   as.sparse.H5Group Seurat ## Warning: replacing previous import 'LoomExperiment::import' by ## 'reticulate::import' when loading 'GEfetch2R' ## Registered S3 method overwritten by 'zellkonverter': ##   method                                             from       ##   py_to_r.pandas.core.arrays.categorical.Categorical reticulate library(Seurat) # pbmc_small ## Attaching SeuratObject # library(scRNAseq) # seger # object pbmc_small ## An object of class Seurat  ## 230 features across 80 samples within 1 assay  ## Active assay: RNA (230 features, 20 variable features) ##  2 dimensional reductions calculated: pca, tsne # metadata head(pbmc_small@meta.data) ##                   orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 ## ATGCCAGAACGACT SeuratProject         70           47               0 ## CATGGCCTGTGCAT SeuratProject         85           52               0 ## GAACCTGATGAACC SeuratProject         87           50               1 ## TGACTGGATTCTCA SeuratProject        127           56               0 ## AGTCAGACTGCACA SeuratProject        173           53               0 ## TCTGATACACGTGT SeuratProject         70           48               0 ##                letter.idents groups RNA_snn_res.1 ## ATGCCAGAACGACT             A     g2             0 ## CATGGCCTGTGCAT             A     g1             0 ## GAACCTGATGAACC             B     g2             0 ## TGACTGGATTCTCA             A     g2             0 ## AGTCAGACTGCACA             A     g2             0 ## TCTGATACACGTGT             A     g1             0 # seger <- scRNAseq::SegerstolpePancreasData() # load from local seger = readRDS(\"/Users/soyabean/Desktop/tmp/scdown/conversion/seger.rds\") seger ## class: SingleCellExperiment  ## dim: 26179 3514  ## metadata(0): ## assays(1): counts ## rownames(26179): SGIP1 AZIN2 ... BIVM-ERCC5 eGFP ## rowData names(2): refseq symbol ## colnames(3514): HP1502401_N13 HP1502401_D14 ... HP1526901T2D_O11 ##   HP1526901T2D_A8 ## colData names(9): individual sex ... submitted single cell quality cell ##   type ## reducedDimNames(0): ## altExpNames(1): ERCC"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"convert-seuratobject-to-other-objects","dir":"Articles","previous_headings":"","what":"Convert SeuratObject to other objects","title":"ObjectConversion","text":", convert SeuratObject SingleCellExperiment, CellDataSet/cell_data_set, Anndata, loom.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"seuratobject-to-singlecellexperiment","dir":"Articles","previous_headings":"Convert SeuratObject to other objects","what":"SeuratObject to SingleCellExperiment","title":"ObjectConversion","text":"conversion performed functions implemented Seurat:","code":"sce.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"SCE\") ## Convert SeuratObject to SingleCellExperiment (suitable for scater)! sce.obj ## class: SingleCellExperiment  ## dim: 230 80  ## metadata(0): ## assays(2): counts logcounts ## rownames(230): MS4A1 CD79B ... SPON2 S100B ## rowData names(5): vst.mean vst.variance vst.variance.expected ##   vst.variance.standardized vst.variable ## colnames(80): ATGCCAGAACGACT CATGGCCTGTGCAT ... GGAACACTTCAGAC ##   CTTGATTGATCTTC ## colData names(8): orig.ident nCount_RNA ... RNA_snn_res.1 ident ## reducedDimNames(2): PCA TSNE ## altExpNames(0):"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"seuratobject-to-celldatasetcell_data_set","dir":"Articles","previous_headings":"Convert SeuratObject to other objects","what":"SeuratObject to CellDataSet/cell_data_set","title":"ObjectConversion","text":"CellDataSet (conversion performed functions implemented Seurat): cell_data_set (conversion performed functions implemented SeuratWrappers):","code":"# BiocManager::install(\"monocle\") # reuqire monocle cds.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", reduction = \"tsne\", to = \"CellDataSet\") ## Convert SeuratObject to CellDataSet (suitable for Monocle)! cds.obj ## CellDataSet (storageMode: environment) ## assayData: 230 features, 80 samples  ##   element names: exprs  ## protocolData: none ## phenoData ##   sampleNames: ATGCCAGAACGACT CATGGCCTGTGCAT ... CTTGATTGATCTTC (80 ##     total) ##   varLabels: orig.ident nCount_RNA ... Size_Factor (8 total) ##   varMetadata: labelDescription ## featureData ##   featureNames: MS4A1 CD79B ... S100B (230 total) ##   fvarLabels: vst.mean vst.variance ... gene_short_name (6 total) ##   fvarMetadata: labelDescription ## experimentData: use 'experimentData(object)' ## Annotation: # remotes::install_github('cole-trapnell-lab/monocle3') # reuqire monocle3 cds3.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"cell_data_set\") cds3.obj"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"seuratobject-to-anndata","dir":"Articles","previous_headings":"Convert SeuratObject to other objects","what":"SeuratObject to AnnData","title":"ObjectConversion","text":"multiple tools available format conversion SeuratObject Anndata: scDIOR best method terms information kept usability sceasy best performance running time disk usage.","code":"# sceasy Seu2AD(   seu.obj = pbmc_small, method = \"sceasy\", out.folder = \"/Users/soyabean/Desktop/tmp/scdown/conversion\",   assay = \"RNA\", slot = \"counts\", conda.path = \"/Applications/anaconda3\" ) ## AnnData object with n_obs × n_vars = 80 × 230 ##     obs: 'orig.ident', 'nCount_RNA', 'nFeature_RNA', 'RNA_snn_res.0.8', 'letter.idents', 'groups', 'RNA_snn_res.1' ##     var: 'vst.mean', 'vst.variance', 'vst.variance.expected', 'vst.variance.standardized', 'vst.variable' ##     obsm: 'X_pca', 'X_tsne' # # SeuratDisk # Seu2AD(seu.obj = pbmc_small, method = \"SeuratDisk\", out.folder = \"/Users/soyabean/Desktop/tmp/scdown/conversion\", #        assay = \"RNA\", save.scale = TRUE) # # scDIOR # Seu2AD(seu.obj = pbmc_small, method = \"scDIOR\", #        out.folder = \"/Users/soyabean/Desktop/tmp/scdown/conversion\", assay = \"RNA\", save.scale = TRUE)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"seuratobject-to-loom","dir":"Articles","previous_headings":"Convert SeuratObject to other objects","what":"SeuratObject to loom","title":"ObjectConversion","text":"conversion performed functions implemented SeuratDisk:","code":"ExportSeurat(   seu.obj = pbmc_small, assay = \"RNA\", to = \"loom\",   loom.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small.loom\" ) ## Convert SeuratObject to loom! ## Warning: Overwriting previous file ## /Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small.loom ## Saving data from RNA as /matrix ## Adding slot counts for assay RNA ## Adding layer counts ## Adding col attribute CellID ## Adding col attribute orig.ident ## Adding col attribute nCount_RNA ## Adding col attribute nFeature_RNA ## Adding col attribute RNA_snn_res.0.8 ## Adding col attribute letter.idents ## Adding col attribute groups ## Adding col attribute RNA_snn_res.1 ## Adding row attribute Gene"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"singlecellexperiment-to-seuratobject","dir":"Articles","previous_headings":"Convert other objects to SeuratObject","what":"SingleCellExperiment to SeuratObject","title":"ObjectConversion","text":"conversion performed functions implemented Seurat:","code":"seu.obj.sce <- ImportSeurat(   obj = sce.obj, from = \"SCE\", count.assay = \"counts\",   data.assay = \"logcounts\", assay = \"RNA\" ) ## Convert SingleCellExperiment to SeuratObject! ## Warning: Keys should be one or more alphanumeric characters followed by an ## underscore, setting key from PC__ to PC_ ## Warning: All keys should be one or more alphanumeric characters followed by an ## underscore '_', setting key to PC_ ## Warning: Keys should be one or more alphanumeric characters followed by an ## underscore, setting key from tSNE__ to tSNE_ ## Warning: All keys should be one or more alphanumeric characters followed by an ## underscore '_', setting key to tSNE_ seu.obj.sce ## An object of class Seurat  ## 230 features across 80 samples within 1 assay  ## Active assay: RNA (230 features, 0 variable features) ##  2 dimensional reductions calculated: pca, tsne"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"celldatasetcell_data_set-to-seuratobject","dir":"Articles","previous_headings":"Convert other objects to SeuratObject","what":"CellDataSet/cell_data_set to SeuratObject","title":"ObjectConversion","text":"CellDataSet SeuratObject (conversion performed functions implemented Seurat): cell_data_set SeuratObject (conversion performed functions implemented Seurat):","code":"seu.obj.cds <- ImportSeurat(   obj = cds.obj, from = \"CellDataSet\",   count.assay = \"counts\", assay = \"RNA\" ) ## Convert CellDataSet (Monocle) to SeuratObject! ## Pulling expression data ## Building Seurat object ## Adding feature-level metadata ## No dispersion information in CellDataSet object ## No variable features present ## Adding tSNE dimensional reduction seu.obj.cds ## An object of class Seurat  ## 230 features across 80 samples within 1 assay  ## Active assay: RNA (230 features, 0 variable features) ##  1 dimensional reduction calculated: tsne seu.obj.cds3 <- ImportSeurat(   obj = cds3.obj, from = \"cell_data_set\",   count.assay = \"counts\", data.assay = \"logcounts\", assay = \"RNA\" ) seu.obj.cds3"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"anndata-to-seuratobject","dir":"Articles","previous_headings":"Convert other objects to SeuratObject","what":"AnnData to SeuratObject","title":"ObjectConversion","text":"multiple tools available format conversion AnnData SeuratObject: scDIOR best method terms information kept (GEfetch2R integrates scDIOR SeuratDisk achieve best performance information kept) schard best method terms usability schard sceasy comparable performance cell number 200k, sceasy better performance scalability sceasy better performance disk usage","code":"# sceasy ann.sceasy <- AD2Seu(   anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small_sceasy.h5ad\", method = \"sceasy\",   assay = \"RNA\", slot = \"scale.data\" ) ## X -> data ann.sceasy ## An object of class Seurat  ## 230 features across 80 samples within 1 assay  ## Active assay: RNA (230 features, 0 variable features) ##  2 dimensional reductions calculated: pca, tsne # # SeuratDisk # ann.seu <- AD2Seu(anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small_sceasy.h5ad\", #                   method = \"SeuratDisk\", assay = \"RNA\", load.assays = c(\"RNA\")) # # scDIOR # ann.scdior <- AD2Seu(anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small_sceasy.h5ad\", #                      method = \"scDIOR\", assay = \"RNA\") # # schard # ann.schard <- AD2Seu(anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small_sceasy.h5ad\", #                      method = \"schard\", assay = \"RNA\", use.raw = T) # # SeuratDisk+scDIOR # ann.seuscdior <- AD2Seu(anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small_sceasy.h5ad\", #                         method = \"SeuratDisk+scDIOR\", assay = \"RNA\", load.assays = c(\"RNA\"))"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"loom-to-seuratobject","dir":"Articles","previous_headings":"Convert other objects to SeuratObject","what":"loom to SeuratObject","title":"ObjectConversion","text":"conversion performed functions implemented SeuratDisk Seurat:","code":"# loom will lose reduction seu.obj.loom <- ImportSeurat(loom.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/pbmc_small.loom\", from = \"loom\") ## Convert loom to SeuratObject! ## Reading in /matrix ## Storing /matrix as counts ## Saving /matrix to assay 'RNA' ## Loading graph RNA_snn seu.obj.loom ## An object of class Seurat  ## 230 features across 80 samples within 1 assay  ## Active assay: RNA (230 features, 0 variable features)"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"singlecellexperiment-to-anndata","dir":"Articles","previous_headings":"Conversion between SingleCellExperiment and AnnData","what":"SingleCellExperiment to AnnData","title":"ObjectConversion","text":"multiple tools available format conversion SingleCellExperiment AnnData: zellkonverter best method terms information kept running time scDIOR best method terms usability disk usage","code":"# zellkonverter SCE2AD(   sce.obj = seger, method = \"zellkonverter\",   out.folder = \"/Users/soyabean/Desktop/tmp/scdown/conversion\", slot = \"counts\",   conda.path = \"/Applications/anaconda3\" ) ## NULL # # sceasy # SCE2AD(sce.obj = seger, method = \"sceasy\", out.folder = \"/Users/soyabean/Desktop/tmp/scdown/conversion\", #        slot = \"counts\", conda.path = \"/Applications/anaconda3\") # # # scDIOR # seger.scdior <- seger # library(SingleCellExperiment) # # scDIOR does not support varm in rowData # rowData(seger.scdior)$varm <- NULL # SCE2AD(sce.obj = seger.scdior, method = \"scDIOR\", out.folder = \"/Users/soyabean/Desktop/tmp/scdown/conversion\")"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"anndata-to-singlecellexperiment","dir":"Articles","previous_headings":"Conversion between SingleCellExperiment and AnnData","what":"AnnData to SingleCellExperiment","title":"ObjectConversion","text":"multiple tools available format conversion AnnData SingleCellExperiment: zellkonverter best method terms information kept schard best method terms usability running time schard scDIOR comparable performance disk usage","code":"# zellkonverter sce.zell <- AD2SCE(   anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/seger_zellkonverter.h5ad\",   method = \"zellkonverter\", slot = \"scale.data\",   use.raw = TRUE, conda.path = \"/Applications/anaconda3\" ) ## Warning in py_to_r.pandas.core.frame.DataFrame(adata$var): index contains ## duplicated values: row names not set ## Warning: The names of these selected obs columns have been modified to match R ## conventions: 'body mass index' -> 'body.mass.index', 'clinical information' -> ## 'clinical.information', 'single cell well quality' -> ## 'single.cell.well.quality', 'submitted single cell quality' -> ## 'submitted.single.cell.quality', and 'cell type' -> 'cell.type' sce.zell ## class: SingleCellExperiment  ## dim: 26179 3514  ## metadata(1): X_name ## assays(1): scale.data ## rownames(26179): SGIP1 AZIN2 ... BIVM-ERCC5 eGFP ## rowData names(2): refseq symbol ## colnames(3514): HP1502401_N13 HP1502401_D14 ... HP1526901T2D_O11 ##   HP1526901T2D_A8 ## colData names(9): individual sex ... submitted.single.cell.quality ##   cell.type ## reducedDimNames(0): ## altExpNames(0): # # scDIOR # sce.scdior <- AD2SCE(anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/seger_zellkonverter.h5ad.h5ad\", #                      method = \"scDIOR\", assay = \"RNA\", #                      use.raw = TRUE, conda.path = \"/Applications/anaconda3\") # # schard # sce.schard <- AD2SCE(anndata.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/seger_zellkonverter.h5ad.h5ad\", #                      method = \"schard\", use.raw = TRUE)"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"conversion-between-singlecellexperiment-and-loom","dir":"Articles","previous_headings":"","what":"Conversion between SingleCellExperiment and loom","title":"ObjectConversion","text":"conversion performed functions implemented LoomExperiment.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"singlecellexperiment-to-loom","dir":"Articles","previous_headings":"Conversion between SingleCellExperiment and loom","what":"SingleCellExperiment to loom","title":"ObjectConversion","text":"","code":"# remove seger.loom first SCELoom(   from = \"SingleCellExperiment\", to = \"loom\", sce = seger,   loom.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/seger.loom\" )"},{"path":"https://showteeth.github.io/GEfetch2R/articles/ObjectConversion.html","id":"loom-to-singlecellexperiment","dir":"Articles","previous_headings":"Conversion between SingleCellExperiment and loom","what":"loom to SingleCellExperiment","title":"ObjectConversion","text":"","code":"seger.loom <- SCELoom(   from = \"loom\", to = \"SingleCellExperiment\",   loom.file = \"/Users/soyabean/Desktop/tmp/scdown/conversion/seger.loom\" ) ## Convert loom to SingleCellExperiment. seger.loom ## class: SingleCellExperiment  ## dim: 26179 3514  ## metadata(0): ## assays(1): counts ## rownames(26179): SGIP1 AZIN2 ... BIVM-ERCC5.1 eGFP ## rowData names(2): refseq symbol ## colnames(3514): HP1502401_N13 HP1502401_D14 ... HP1526901T2D_O11 ##   HP1526901T2D_A8 ## colData names(8): Source.Name age ... sex single.cell.well.quality ## reducedDimNames(0): ## altExpNames(0):"},{"path":"https://showteeth.github.io/GEfetch2R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yabing Song. Author, maintainer.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Song Y (2025). GEfetch2R: Access Format Single-Cell RNA-Seq Datasets Public Resources. R package version 0.7.1, https://github.com/showteeth/GEfetch2R.","code":"@Manual{,   title = {GEfetch2R: Access and Format Single-Cell RNA-Seq Datasets from Public Resources},   author = {Yabing Song},   year = {2025},   note = {R package version 0.7.1},   url = {https://github.com/showteeth/GEfetch2R}, }"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R designed accelerate users’ downloading preparation single-cell/bulk RNA-seq datasets public resources. can used : bulk RNA-seq: Parallel download sra/fastq/bam files ENA Support Aspera (ENA) Parallel split sra fastq files Convert bam fastq files Mapping STAR load output DESeq2 Generate count matrix supplementary files Load count matrix DESeq2 scRNA-seq: Parallel download sra/fastq/bam files ENA Foramt downloaded fastq files standard style can identified 10x softwares (e.g. CellRanger). Support Aspera (ENA) Parallel split sra fastq files Download original 10x generated bam files (custom tags) Convert bam fastq files (samtools/bamtofastq_linux) Mapping STAR/CellRanger load output Seurat Download count matrix GEO GEO accessions Download count matrix annotation (e.g. cell type) information PanglanDB UCSC Cell Browser key words (filter criteria) Extract subset annotation gene (PanglanDB UCSC Cell Browser) Load count matrix annotation Seurat Download processed object Zenodo DOI Download processed object CELLxGENE Human Cell Atlas key words (filter criteria) Parallel download Extract subset annotation gene (CELLxGENE) Load processed object (rds) Seurat Format conversion widely used single cell objects (SeuratObject, AnnData, SingleCellExperiment, CellDataSet/cell_data_set loom) SeuratObject AnnData: SeuratDisk, sceasy, scDIOR SingleCellExperiment AnnData: sceasy, scDIOR, zellkonverter AnnData SeuratObject: SeuratDisk, sceasy, scDIOR, schard AnnData SingleCellExperiment: schard, scDIOR, zellkonverter","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"install GEfetch2R, start R enter: conditionally used packages: possible issues installation, please refer INSTALL.md. data structures conversion downloading fastq/bam files, GEfetch2R requires additional tools, can install :","code":"# install via CRAN install.packages(\"GEfetch2R\") # coming soon  # you can also install the development version from GitHub # install.packages(\"devtools\") devtools::install_github(\"showteeth/GEfetch2R\") # install.packages(\"devtools\") #In case you have not installed it. devtools::install_github(\"alexvpickering/GEOfastq\") # download fastq install.packages('tiledbsoma', repos = c('https://tiledb-inc.r-universe.dev', 'https://cloud.r-project.org')) # download from CELLxGENE install.packages('cellxgene.census', repos=c('https://chanzuckerberg.r-universe.dev', 'https://cloud.r-project.org')) # download from CELLxGENE devtools::install_github(\"cellgeni/sceasy\") # format conversion devtools::install_github(\"mojaveazure/seurat-disk\") # format conversion devtools::install_github(\"satijalab/seurat-wrappers\") # format conversion devtools::install_github('theislab/zellkonverter@7b118653a471330b3734dcfee60c3537352ecb8d', upgrade = 'never') # format conversion devtools::install_github('cellgeni/schard', upgrade = 'never') # format conversion devtools::install_github('JiekaiLab/dior', upgrade = 'never')  # format conversion # install additional packages for format conversion pip install diopy conda install -c bioconda loompy anndata  # or pip install anndata loompy  # install additional packages for downloading fastq/bam files conda install -c bioconda 'parallel-fastq-dump' 'sra-tools>=3.0.0'  # install bamtofastq, the following installs linux version wget --quiet https://github.com/10XGenomics/bamtofastq/releases/download/v1.4.1/bamtofastq_linux && chmod +x bamtofastq_linux"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"docker","dir":"","previous_headings":"","what":"Docker","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"also provide docker image use: Notes: running codes, open browser enter http://localhost:8888/, user name rstudio, password passwd (set -e PASSWORD=passwd) port 8888 use, change -p 8888:8787 conda.path ExportSeurat ImportSeurat can set /opt/conda. sra-tools can found /opt/sratoolkit.3.0.6-ubuntu64/bin. parallel-fastq-dump path: /opt/conda/bin/parallel-fastq-dump. bamtofastq_linux path: /opt/bamtofastq_linux. samtools path: /opt/conda/bin/samtools. STAR Cell Ranger available image customized reference genome required.","code":"# pull the image docker pull soyabean/GEfetch2R:1.6  # run the image docker run --rm -p 8888:8787 -e PASSWORD=passwd -e ROOT=TRUE -it soyabean/GEfetch2R:1.6"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"Detailed usage available website: Download raw data Download count matrix annotaion Download processed data Format conversion benchmark","code":""},{"path":[]},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-raw-data-srafastqbam","dir":"","previous_headings":"Usage","what":"Download raw data (sra/fastq/bam)","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R supports downloading raw data (sra/fastq/bam) SRA ENA GEO accessions. general, downloading raw data ENA much faster SRA, ascp parallel support. Since downloading process time-consuming, provide commands used illustrate usage.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-all-samples-runs","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam)","what":"Extract all samples (runs)","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"fastq files stored SRA/ENA, GEfetch2R can extract sample information run number GEO accessions users can also provide dataframe contains run number interested samples. Extract samples GSE130636 platform GPL20301 (use platform = NULL platforms):","code":"GSE130636.runs <- ExtractRun(acce = \"GSE130636\", platform = \"GPL20301\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-sra","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam)","what":"Download sra","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"dataframe contains gsm run number, GEfetch2R use prefetch download sra files SRA using ascp/download.file download sra files ENA. returned value dataframe contains failed runs. NULL, users can re-run DownloadSRA setting gsm.df returned value. Download SRA: Download ENA (parallel): .folder structure : gsm_number/run_number.","code":"# a small test GSE130636.runs <- GSE130636.runs[GSE130636.runs$run %in% c(\"SRR9004346\", \"SRR9004351\"), ] # download, you may need to set prefetch.path out.folder <- tempdir() GSE130636.down <- DownloadSRA(   gsm.df = GSE130636.runs,   out.folder = out.folder ) # GSE130636.down is null or dataframe contains failed runs out.folder <- tempdir() # download from ENA using download.file GSE130636.down <- DownloadSRA(   gsm.df = GSE130636.runs, download.method = \"download.file\",   timeout = 3600, out.folder = out.folder,   parallel = TRUE, use.cores = 2 )  # download from ENA using ascp GSE130636.down <- DownloadSRA(   gsm.df = GSE130636.runs, download.method = \"ascp\",   ascp.path = \"/path/to/ascp\", max.rate = \"300m\",   rename = TRUE, out.folder = out.folder,   parallel = TRUE, use.cores = 2 )  # GSE130636.down is null or dataframe contains failed runs"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"split-sra-to-generate-fastq","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam) > Download fastq","what":"Split sra to generate fastq","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"obtaining sra files, GEfetch2R provides function SplitSRA split sra files fastq files using parallel-fastq-dump (parallel, fastest gzip output), fasterq-dump (parallel, fast unzipped output) fastq-dump (slowest gzip output). fastqs generated 10x Genomics, SplitSRA can identify read1, read2 index files format read1 read2 10x required format (sample1_S1_L001_R1_001.fastq.gz sample1_S1_L001_R2_001.fastq.gz). detail, file read length 26 28 considered read1, files read length 8 10 considered index files remain file considered read2. read length rules Sequencing Requirements Single Cell 3’ Sequencing Requirements Single Cell V(D)J. returned value vector failed sra files. NULL, users can re-run SplitSRA setting sra.path returned value.","code":"# parallel-fastq-dump requires sratools.path # you may need to set split.cmd.path and sratools.path sra.folder <- tempdir() GSE130636.split <- SplitSRA(   sra.folder = sra.folder,   fastq.type = \"10x\", split.cmd.threads = 4 )"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-fastq-directly-from-ena","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam) > Download fastq","what":"Download fastq directly from ENA","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"Alternatively, GEfetch2R provides function DownloadFastq download fastq files directly ENA (parallel, faster method). returned value dataframe contains failed runs. NULL, users can re-run DownloadFastq setting gsm.df returned value.","code":"# use download.file download.file.res <- DownloadFastq(   gsm.df = gsm.df, out.folder = out.folder,   download.method = \"download.file\",    parallel = TRUE, use.cores = 2 ) # use ascp ascp.res <- DownloadFastq(   gsm.df = gsm.df, out.folder = out.folder,   download.method = \"ascp\", ascp.path = \"/path/to/ascp\",    parallel = TRUE, use.cores = 2 )"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-all-samples-runs-1","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam) > Download bam","what":"Extract all samples (runs)","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R can extract sample information run number GEO accessions users can also provide dataframe contains run number interested samples.","code":"GSE138266.runs <- ExtractRun(acce = \"GSE138266\", platform = \"GPL18573\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-bam-from-sra","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam) > Download bam","what":"Download bam from SRA","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"dataframe contains gsm run number, GEfetch2R provides DownloadBam download bam files using prefetch. supports 10x generated bam files normal bam files. 10x generated bam: bam files generated 10x softwares (e.g. CellRanger) contain custom tags kept using default parameters prefetch, GEfetch2R adds --type TenX make sure downloaded bam files contain tags. normal bam: normal bam files, DownloadBam download sra files first convert sra files bam files sam-dump. testing efficiency prefetch + sam-dump sam-dump, former much faster latter (52G sra 72G bam files): returned value dataframe containing failed runs (either failed download sra files failed convert bam files normal bam; failed download bam files 10x generated bam). NULL, users can re-run DownloadBam setting gsm.df returned value. following example download 10x generated bam file: .folder structure : gsm_number/run_number.","code":"# # use prefetch to download sra file # prefetch -X 60G SRR1976036 # # real    117m26.334s # # user    16m42.062s # # sys 3m28.295s  # # use sam-dump to convert sra to bam # time (sam-dump SRR1976036.sra | samtools view -bS - -o SRR1976036.bam) # # real    536m2.721s # # user    749m41.421s # # sys 20m49.069s   # use sam-dump to download bam directly # time (sam-dump SRR1976036 | samtools view -bS - -o SRR1976036.bam) # # more than 36hrs only get ~3G bam files, too slow # a small test GSE138266.runs <- GSE138266.runs[GSE138266.runs$run %in% c(\"SRR10211566\"), ] # download, you may need to set prefetch.path out.folder <- tempdir() GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs,   out.folder = out.folder ) # GSE138266.down is null or dataframe contains failed runs"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-bam-from-ena","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam) > Download bam","what":"Download bam from ENA","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"returned value dataframe containing failed runs. NULL, users can re-run DownloadBam setting gsm.df returned value. following example download 10x generated bam file ENA:","code":"# download.file GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, download.method = \"download.file\",   timeout = 3600, out.folder = \"out.folder\",   parallel = TRUE, use.cores = 2 ) # ascp GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, download.method = \"ascp\",   ascp.path = \"/path/to/ascp\", max.rate = \"300m\",   rename = TRUE, out.folder = \"out.folder\",   parallel = TRUE, use.cores = 2 )"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"convert-bam-to-fastq","dir":"","previous_headings":"Usage > Download raw data (sra/fastq/bam) > Download bam","what":"Convert bam to fastq","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"downloaded bam files, GEfetch2R provides function Bam2Fastq convert bam files fastq files. bam files generated 10x softwares, Bam2Fastq utilizes bamtofastq tool developed 10x Genomics, otherwise, samtools utilized. returned value vector bam files failed convert fastq files. NULL, users can re-run Bam2Fastq setting bam.path returned value.","code":"bam.folder <- tempdir() # you may need to set bamtofastq.path and bamtofastq.paras GSE138266.convert <- Bam2Fastq(   bam.folder = bam.folder,   bamtofastq.path = \"/path/to/bamtofastq\",    bamtofastq.paras = \"--nthreads 4\" )"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-count-matrix","dir":"","previous_headings":"Usage","what":"Download count matrix","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides functions users download count matrices annotations (e.g. cell type annotation composition) GEO single-cell databases (e.g. PanglaoDB UCSC Cell Browser). GEfetch2R also supports loading downloaded data Seurat. now, public resources supported returned values:","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"geo","dir":"","previous_headings":"Usage > Download count matrix","what":"GEO","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEO international public repository archives freely distributes microarray, next-generation sequencing, forms high-throughput functional genomics data submitted research community. provides convenient way users explore select interested scRNA-seq datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-metadata","dir":"","previous_headings":"Usage > Download count matrix > GEO","what":"Extract metadata","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractGEOMeta extract sample metadata, including sample title, source name/tissue, description, cell type, treatment, paper title, paper abstract, organism, protocol, data processing methods, et al.","code":"# extract metadata of specified platform GSE200257.meta <- ExtractGEOMeta(acce = \"GSE200257\", platform = \"GPL24676\") # set VROOM_CONNECTION_SIZE to avoid error: Error: The size of the connection buffer (786432) was not large enough Sys.setenv(\"VROOM_CONNECTION_SIZE\" = 131072 * 60) # extract metadata of all platforms GSE94820.meta <- ExtractGEOMeta(acce = \"GSE94820\", platform = NULL)"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-matrix-and-load-to-seurat","dir":"","previous_headings":"Usage > Download count matrix > GEO","what":"Download matrix and load to Seurat","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"manually check extracted metadata, users can download count matrix load count matrix Seurat ParseGEO. count matrix, ParseGEO supports downloading matrix supplementary files extracting ExpressionSet, users can control source specifying .supp detecting automatically (ParseGEO extract count matrix ExpressionSet first, count matrix NULL contains non-integer values, ParseGEO download supplementary files). supplementary files two main types: single count matrix file containing cells CellRanger-style outputs (barcode, matrix, feature/gene), users required choose type supplementary files supp.type. count matrix, ParseGEO load matrix Seurat automatically. multiple samples available, users can choose merge SeuratObject merge. bulk RNA-seq, set data.type = \"bulk\" ParseGEO, return count matrix.","code":"# for cellranger output out.folder <- tempdir() GSE200257.seu <- ParseGEO(   acce = \"GSE200257\", platform = NULL, supp.idx = 1, down.supp = TRUE, supp.type = \"10x\",   out.folder = out.folder ) # for count matrix, no need to specify out.folder, download count matrix to tmp folder GSE94820.seu <- ParseGEO(acce = \"GSE94820\", platform = NULL, supp.idx = 1, down.supp = TRUE, supp.type = \"count\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"panglaodb","dir":"","previous_headings":"Usage > Download count matrix","what":"PanglaoDB","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"PanglaoDB database contains scRNA-seq datasets mouse human. now, contains 5,586,348 cells 1368 datasets (1063 Mus musculus 305 Homo sapiens). well organized metadata every dataset, including tissue, protocol, species, number cells cell type annotation (computationally identified). Daniel Osorio developed rPanglaoDB access PanglaoDB data, functions GEfetch2R based rPanglaoDB. Since PanglaoDB longer maintained, GEfetch2R cached metadata cell type composition use cached data default accelerate, users can access cached data PanglaoDBMeta (metadata) PanglaoDBComposition (cell type composition).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"summarise-attributes","dir":"","previous_headings":"Usage > Download count matrix > PanglaoDB","what":"Summarise attributes","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides StatDBAttribute summary attributes PanglaoDB:","code":"# use cached metadata StatDBAttribute(df = PanglaoDBMeta, filter = c(\"species\", \"protocol\"), database = \"PanglaoDB\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-metadata-1","dir":"","previous_headings":"Usage > Download count matrix > PanglaoDB","what":"Extract metadata","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractPanglaoDBMeta select interested datasets specified species, protocol, tissue cell number (available values attributes can obtained StatDBAttribute). User can also choose whether add cell type annotation every dataset show.cell.type. GEfetch2R uses cached metadata cell type composition default, users can change setting local.data = FALSE.","code":"hsa.meta <- ExtractPanglaoDBMeta(   species = \"Homo sapiens\", protocol = c(\"Smart-seq2\", \"10x chromium\"),   show.cell.type = TRUE, cell.num = c(1000, 2000) )"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-cell-type-composition","dir":"","previous_headings":"Usage > Download count matrix > PanglaoDB","what":"Extract cell type composition","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractPanglaoDBComposition extract cell type annotation composition (use cached data default accelerate, users can change setting local.data = FALSE).","code":"hsa.composition <- ExtractPanglaoDBComposition(species = \"Homo sapiens\", protocol = c(\"Smart-seq2\", \"10x chromium\"))"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-matrix-and-load-to-seurat-1","dir":"","previous_headings":"Usage > Download count matrix > PanglaoDB","what":"Download matrix and load to Seurat","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"manually check extracted metadata, GEfetch2R provides ParsePanglaoDB download count matrix load count matrix Seurat. available cell type annotation, uses can filter datasets without specified cell type cell.type. Users can also include/exclude cells expressing specified genes include.gene/exclude.gene. count matrix, ParsePanglaoDB load matrix Seurat automatically. multiple datasets available, users can choose merge SeuratObject merge.","code":"# small test hsa.seu <- ParsePanglaoDB(hsa.meta[1:3, ], merge = TRUE)"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"ucsc-cell-browser","dir":"","previous_headings":"Usage > Download count matrix","what":"UCSC Cell Browser","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"UCSC Cell Browser web-based tool allows scientists interactively visualize scRNA-seq datasets. contains 1040 single cell datasets 17 different species. , organized hierarchical structure, can help users quickly locate datasets interested .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"show-available-datasets","dir":"","previous_headings":"Usage > Download count matrix > UCSC Cell Browser","what":"Show available datasets","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ShowCBDatasets show available datasets. Due large number datasets, ShowCBDatasets enables users perform lazy load dataset json files instead downloading json files online (time-consuming!!!). lazy load requires users provide json.folder save json files set lazy = TRUE (first time run, ShowCBDatasets download current json files json.folder, next time run, lazy = TRUE, ShowCBDatasets load downloaded json files json.folder.). , ShowCBDatasets supports updating local datasets update = TRUE. number datasets available species:","code":"json.folder <- tempdir() # first time run, the json files are stored under json.folder # ucsc.cb.samples = ShowCBDatasets(lazy = TRUE, json.folder = json.folder, update = TRUE)  # second time run, load the downloaded json files ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, json.folder = json.folder, update = FALSE)  # always read online # ucsc.cb.samples = ShowCBDatasets(lazy = FALSE) # the number of datasets nrow(ucsc.cb.samples)  # available species unique(unlist(sapply(unique(gsub(pattern = \"\\\\|parent\", replacement = \"\", x = ucsc.cb.samples$organisms)), function(x) {   unlist(strsplit(x = x, split = \", \")) })))"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"summarise-attributes-1","dir":"","previous_headings":"Usage > Download count matrix > UCSC Cell Browser","what":"Summarise attributes","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides StatDBAttribute summary attributes UCSC Cell Browser:","code":"StatDBAttribute(df = ucsc.cb.samples, filter = c(\"organism\", \"organ\"), database = \"UCSC\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-metadata-2","dir":"","previous_headings":"Usage > Download count matrix > UCSC Cell Browser","what":"Extract metadata","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractCBDatasets filter metadata collection, sub-collection, organ, disease status, organism, project cell number (available values attributes can obtained StatDBAttribute except cell number). attributes except cell number support fuzzy match fuzzy.match, useful selecting datasets. {r cb_extract, eval=FALSE} hbb.sample.df <- ExtractCBDatasets(.samples.df = ucsc.cb.samples, organ = c(\"brain\", \"blood\"), organism = \"Human (H. sapiens)\", cell.num = c(1000, 2000))","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-cell-type-composition-1","dir":"","previous_headings":"Usage > Download count matrix > UCSC Cell Browser","what":"Extract cell type composition","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractCBComposition extract cell type annotation composition.","code":"hbb.sample.ct <- ExtractCBComposition(json.folder = json.folder, sample.df = hbb.sample.df)"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"load-the-online-datasets-to-seurat","dir":"","previous_headings":"Usage > Download count matrix > UCSC Cell Browser","what":"Load the online datasets to Seurat","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"manually check extracted metadata, GEfetch2R provides ParseCBDatasets load online count matrix Seurat. attributes available ExtractCBDatasets also . Please note loading process provided ParseCBDatasets load online count matrix instead downloading local. multiple datasets available, users can choose merge SeuratObject merge. ParseCBDatasets supports extracting subset metadata gene:","code":"# parse the whole datasets hbb.sample.seu <- ParseCBDatasets(sample.df = hbb.sample.df) # subset metadata and gene hbb.sample.seu <- ParseCBDatasets(sample.df = hbb.sample.df, obs.value.filter = \"Cell.Type == 'MP' & Phase == 'G2M'\",                                   include.genes = c(\"PAX7\", \"MYF5\", \"C1QTNF3\", \"MYOD1\", \"MYOG\", \"RASSF4\", \"MYH3\", \"MYL4\",                                                     \"TNNT3\", \"PDGFRA\", \"OGN\", \"COL3A1\"))"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-processed-object","dir":"","previous_headings":"Usage","what":"Download processed object","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides functions users download processed single-cell RNA-seq data Zenodo, CELLxGENE Human Cell Atlas, including RDS, RData, h5ad, h5, loom objects. now, public resources supported returned values:","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"zenodo","dir":"","previous_headings":"Usage > Download processed object","what":"Zenodo","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"Zenodo contains various types processed objects, SeuratObject clustered annotated, AnnData contains processed results generated scanpy.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-metadata-3","dir":"","previous_headings":"Usage > Download processed object > Zenodo","what":"Extract metadata","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractZenodoMeta extract dataset metadata, including dataset title, description, available files corresponding md5. Please note dataset restricted access, returned dataframe empty.","code":"# single doi zebrafish.df <- ExtractZenodoMeta(doi = \"10.5281/zenodo.7243603\")  # vector dois multi.dois <- ExtractZenodoMeta(doi = c(\"1111\", \"10.5281/zenodo.7243603\", \"10.5281/zenodo.7244441\"))"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-object-and-load-to-r","dir":"","previous_headings":"Usage > Download processed object > Zenodo","what":"Download object and load to R","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"manually check extracted metadata, users can download specified objects ParseZenodo. downloaded objects controlled file.ext provided object formats lower case (e.g. rds/rdata/h5ad). returned value dataframe containing failed objects SeuratObject (file.ext rds). dataframe, users can re-run ParseZenodo setting doi.df returned value.","code":"out.folder <- tempdir() # download objects multi.dois.parse <- ParseZenodo(doi = c(\"1111\", \"10.5281/zenodo.7243603\", \"10.5281/zenodo.7244441\"),                                 file.ext = c(\"rdata\"),                                 out.folder = out.folder)  # return SeuratObject sinle.doi.parse.seu <- ParseZenodo(doi = \"10.5281/zenodo.8011282\",                                    file.ext = c(\"rds\"), return.seu = TRUE,                                    out.folder = out.folder)"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"cellxgene","dir":"","previous_headings":"Usage > Download processed object","what":"CELLxGENE","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"CELLxGENE web server contains 910 single-cell datasets, users can explore, download upload datasets. downloaded datasets provided CELLxGENE two formats: h5ad (AnnData v0.8) rds (Seurat v4). CELLxGENE provides R package (cellxgene.census) access data, sometimes ’s timely updated. GEfetch2R also supports users access CELLxGENE via cellxgene.census (use.census = TRUE).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"show-available-datasets-1","dir":"","previous_headings":"Usage > Download processed object > CELLxGENE","what":"Show available datasets","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ShowCELLxGENEDatasets extract dataset metadata, including dataset title, description, contact, organism, ethnicity, sex, tissue, disease, assay, suspension type, cell type, et al.","code":"# all available datasets all.cellxgene.datasets <- ShowCELLxGENEDatasets()"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"summarise-attributes-2","dir":"","previous_headings":"Usage > Download processed object > CELLxGENE","what":"Summarise attributes","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides StatDBAttribute summary attributes CELLxGENE:","code":"StatDBAttribute(df = all.cellxgene.datasets, filter = c(\"organism\", \"sex\", \"disease\"),                  database = \"CELLxGENE\", combine = TRUE) # use cellxgene.census StatDBAttribute(filter = c(\"disease\", \"tissue\", \"cell_type\"), database = \"CELLxGENE\",                  use.census = TRUE, organism = \"homo_sapiens\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-metadata-4","dir":"","previous_headings":"Usage > Download processed object > CELLxGENE","what":"Extract metadata","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractCELLxGENEMeta filter dataset metadata, available values attributes can obtained StatDBAttribute except cell number:","code":"# human 10x v2 and v3 datasets human.10x.cellxgene.meta <- ExtractCELLxGENEMeta(   all.samples.df = all.cellxgene.datasets,   assay = c(\"10x 3' v2\", \"10x 3' v3\"), organism = \"Homo sapiens\" ) # subset cellxgene.down.meta = human.10x.cellxgene.meta[human.10x.cellxgene.meta$cell_type == \"oligodendrocyte\" &                                                  human.10x.cellxgene.meta$tissue == \"entorhinal cortex\", ]"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-object-and-load-to-r-1","dir":"","previous_headings":"Usage > Download processed object > CELLxGENE","what":"Download object and load to R","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"manually check extracted metadata, users can download specified objects ParseCELLxGENE. downloaded objects controlled file.ext (choose \"rds\" \"h5ad\"). returned value dataframe containing failed objects SeuratObject (file.ext rds). dataframe, users can re-run ParseCELLxGENE setting meta returned value. using cellxgene.census, users can subset metadata gene.","code":"out.folder <- tempdir() # download objects cellxgene.down = ParseCELLxGENE(meta = cellxgene.down.meta, file.ext = \"rds\",                                 out.folder = out.folder)  # retuen SeuratObject cellxgene.down.seu = ParseCELLxGENE(meta = cellxgene.down.meta, file.ext = \"rds\", return.seu = TRUE,                                     obs.value.filter = \"cell_type == 'oligodendrocyte' & disease == 'Alzheimer disease'\",                                     obs.keys = c(\"cell_type\", \"disease\", \"sex\", \"suspension_type\", \"development_stage\"),                                     out.folder = out.folder)  # use cellxgene.census (support subset, but update is not timely) cellxgene.down.census = ParseCELLxGENE(use.census = TRUE, organism = \"Homo sapiens\",                                        obs.value.filter = \"cell_type == 'B cell' & tissue_general == 'lung' & disease == 'COVID-19'\",                                        obs.keys = c(\"cell_type\", \"tissue_general\", \"disease\", \"sex\"),                                        include.genes = c('ENSG00000161798', 'ENSG00000188229'))"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"human-cell-atlas","dir":"","previous_headings":"Usage > Download processed object","what":"Human Cell Atlas","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"Human Cell Atlas aims map every cell type human body, contains 484 projects, Homo sapiens (also includes projects Mus musculus, Macaca mulatta canis lupus familiaris).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"show-available-datasets-2","dir":"","previous_headings":"Usage > Download processed object > Human Cell Atlas","what":"Show available datasets","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ShowHCAProjects extract detailed project metadata, including project title, description, organism, sex, organ/organPart, disease, assay, preservation method, sample type, suspension type, cell type, development stage, et al. 484 unique projects five different catalogs (dcp29, dcp30, dcp1, lm2, lm3):","code":"# all available datasets all.hca.projects = ShowHCAProjects()"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"summarise-attributes-3","dir":"","previous_headings":"Usage > Download processed object > Human Cell Atlas","what":"Summarise attributes","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides StatDBAttribute summary attributes Human Cell Atlas:","code":"StatDBAttribute(df = all.hca.projects, filter = c(\"organism\", \"sex\"), database = \"HCA\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"extract-metadata-5","dir":"","previous_headings":"Usage > Download processed object > Human Cell Atlas","what":"Extract metadata","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"GEfetch2R provides ExtractHCAMeta filter projects metadata, available values attributes can obtained StatDBAttribute except cell number:","code":"# human 10x v2 and v3 datasets hca.human.10x.projects <- ExtractHCAMeta(   all.projects.df = all.hca.projects, organism = \"Homo sapiens\",   protocol = c(\"10x 3' v2\", \"10x 3' v3\") )"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"download-object-and-load-to-r-2","dir":"","previous_headings":"Usage > Download processed object > Human Cell Atlas","what":"Download object and load to R","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"manually check extracted metadata, users can download specified objects ParseHCA. downloaded objects controlled file.ext (choose \"rds\", \"rdata\", \"h5\", \"h5ad\" \"loom\"). returned value dataframe containing failed objects SeuratObject (file.ext rds). dataframe, users can re-run ParseHCA setting meta returned value.","code":"out.folder <- tempdir() # download objects hca.down = ParseHCA(meta = hca.human.10x.projects[1:4,], out.folder = out.folder,                     file.ext = c(\"h5ad\", \"rds\"))  # return SeuratObject hca.down.seu = ParseHCA(meta = hca.human.10x.projects[1:4,], out.folder = out.folder,                         file.ext = c(\"h5ad\", \"rds\"), return.seu = TRUE)"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"format-conversion","dir":"","previous_headings":"Usage","what":"Format conversion","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"many tools developed process scRNA-seq data, Scanpy, Seurat, scran Monocle. tools object formats, Anndata Scanpy, SeuratObject Seurat, SingleCellExperiment scran CellDataSet/cell_data_set Monocle2/Monocle3. also file formats designed large omics datasets, loom. perform comprehensive scRNA-seq data analysis, usually need combine multiple tools, means need perform object format conversion frequently. facilitate user analysis scRNA-seq data, GEfetch2R benchmarked format conversion tools (Anndata -> SeuratObject, SeuratObject Anndata, Anndata SingleCellExperiment, SingleCellExperiment Anndata), provides multiple functions perform format conversion.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"test-data","dir":"","previous_headings":"Usage > Format conversion","what":"Test data","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"SeuratObject: SingleCellExperiment:","code":"# library library(Seurat) # pbmc_small library(scRNAseq) # seger # object pbmc_small seger <- scRNAseq::SegerstolpePancreasData()"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"convert-seuratobject-to-other-objects","dir":"","previous_headings":"Usage > Format conversion","what":"Convert SeuratObject to other objects","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":", convert SeuratObject SingleCellExperiment, CellDataSet/cell_data_set, Anndata, loom.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"seuratobject-to-singlecellexperiment","dir":"","previous_headings":"Usage > Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to SingleCellExperiment","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"conversion performed functions implemented Seurat:","code":"sce.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"SCE\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"seuratobject-to-celldatasetcell_data_set","dir":"","previous_headings":"Usage > Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to CellDataSet/cell_data_set","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"CellDataSet (conversion performed functions implemented Seurat): cell_data_set (conversion performed functions implemented SeuratWrappers):","code":"# BiocManager::install(\"monocle\") # reuqire monocle cds.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", reduction = \"tsne\", to = \"CellDataSet\") # remotes::install_github('cole-trapnell-lab/monocle3') # reuqire monocle3 cds3.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"cell_data_set\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"seuratobject-to-anndata","dir":"","previous_headings":"Usage > Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to AnnData","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"multiple tools available format conversion SeuratObject Anndata: scDIOR best method terms information kept usability sceasy best performance running time disk usage.","code":"# SeuratDisk Seu2AD(seu.obj = pbmc_small, method = \"SeuratDisk\", out.folder = \"out.folder\",         assay = \"RNA\", save.scale = TRUE) # sceasy Seu2AD(seu.obj = pbmc_small, method = \"sceasy\", out.folder = \"out.folder\",         assay = \"RNA\", slot = \"counts\", conda.path = \"/path/to/conda\") # scDIOR Seu2AD(seu.obj = pbmc_small, method = \"scDIOR\",         out.folder = \"out.folder\", assay = \"RNA\", save.scale = TRUE)"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"seuratobject-to-loom","dir":"","previous_headings":"Usage > Format conversion > Convert SeuratObject to other objects","what":"SeuratObject to loom","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"conversion performed functions implemented SeuratDisk:","code":"loom.file <- tempfile(pattern = \"pbmc_small_\", fileext = \".loom\") ExportSeurat(   seu.obj = pbmc_small, assay = \"RNA\", to = \"loom\",   loom.file = loom.file )"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"singlecellexperiment-to-seuratobject","dir":"","previous_headings":"Usage > Format conversion > Convert other objects to SeuratObject","what":"SingleCellExperiment to SeuratObject","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"conversion performed functions implemented Seurat:","code":"seu.obj.sce <- ImportSeurat(obj = sce.obj, from = \"SCE\",                              count.assay = \"counts\", data.assay = \"logcounts\",                              assay = \"RNA\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"celldatasetcell_data_set-to-seuratobject","dir":"","previous_headings":"Usage > Format conversion > Convert other objects to SeuratObject","what":"CellDataSet/cell_data_set to SeuratObject","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"CellDataSet SeuratObject (conversion performed functions implemented Seurat): cell_data_set SeuratObject (conversion performed functions implemented Seurat): {r cds2seu2, eval=FALSE} seu.obj.cds3 <- ImportSeurat(obj = cds3.obj, = \"cell_data_set\",                               count.assay = \"counts\", data.assay = \"logcounts\",                              assay = \"RNA\")","code":"seu.obj.cds <- ImportSeurat(obj = cds.obj, from = \"CellDataSet\",                              count.assay = \"counts\", assay = \"RNA\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"anndata-to-seuratobject","dir":"","previous_headings":"Usage > Format conversion > Convert other objects to SeuratObject","what":"AnnData to SeuratObject","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"multiple tools available format conversion AnnData SeuratObject: scDIOR best method terms information kept (GEfetch2R integrates scDIOR SeuratDisk achieve best performance information kept) schard best method terms usability schard sceasy comparable performance cell number 200k, sceasy better performance scalability sceasy better performance disk usage","code":"# SeuratDisk ann.seu <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"SeuratDisk\",                    assay = \"RNA\", load.assays = c(\"RNA\")) # sceasy ann.sceasy <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"sceasy\",                      assay = \"RNA\", slot = \"scale.data\") # scDIOR ann.scdior <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"scDIOR\",                       assay = \"RNA\") # schard ann.schard <- AD2Seu(anndata.file = \"pbmc3k.h5ad\",                       method = \"schard\", assay = \"RNA\", use.raw = T) # SeuratDisk+scDIOR ann.seuscdior <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"SeuratDisk+scDIOR\",                          assay = \"RNA\", load.assays = c(\"RNA\"))"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"loom-to-seuratobject","dir":"","previous_headings":"Usage > Format conversion > Convert other objects to SeuratObject","what":"loom to SeuratObject","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"conversion performed functions implemented SeuratDisk Seurat:","code":"# loom will lose reduction seu.obj.loom <- ImportSeurat(loom.file = loom.file, from = \"loom\")"},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"singlecellexperiment-to-anndata","dir":"","previous_headings":"Usage > Format conversion > Conversion between SingleCellExperiment and AnnData","what":"SingleCellExperiment to AnnData","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"multiple tools available format conversion SingleCellExperiment AnnData: zellkonverter best method terms information kept running time scDIOR best method terms usability disk usage","code":"# sceasy SCE2AD(sce.obj = seger, method = \"sceasy\", out.folder = \"benchmark\",         slot = \"rawcounts\", conda.path = \"/path/to/conda\")         # scDIOR seger.scdior <- seger library(SingleCellExperiment) # scDIOR does not support varm in rowData rowData(seger.scdior)$varm <- NULL SCE2AD(sce.obj = seger.scdior, method = \"scDIOR\", out.folder = \"benchmark\")  # zellkonverter SCE2AD(sce.obj = seger, method = \"zellkonverter\",         out.folder = \"benchmark\", slot = \"rawcounts\",         conda.path = \"/path/to/conda\")"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"anndata-to-singlecellexperiment","dir":"","previous_headings":"Usage > Format conversion > Conversion between SingleCellExperiment and AnnData","what":"AnnData to SingleCellExperiment","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"multiple tools available format conversion AnnData SingleCellExperiment: zellkonverter best method terms information kept schard best method terms usability running time schard scDIOR comparable performance disk usage","code":"# scDIOR sce.scdior <- AD2SCE(anndata.file = \"pbmc3k.h5ad\", method = \"scDIOR\",                       assay = \"RNA\", use.raw = TRUE, conda.path = \"/path/to/conda\") # zellkonverter sce.zell <- AD2SCE(anndata.file = \"pbmc3k.h5ad\", method = \"zellkonverter\",                    slot = \"scale.data\", use.raw = TRUE, conda.path = \"/path/to/conda\") # schard sce.schard <- AD2SCE(anndata.file = \"pbmc3k.h5ad\",                       method = \"schard\", use.raw = TRUE)"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"conversion-between-singlecellexperiment-and-loom","dir":"","previous_headings":"Usage > Format conversion","what":"Conversion between SingleCellExperiment and loom","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"conversion performed functions implemented LoomExperiment.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"singlecellexperiment-to-loom","dir":"","previous_headings":"Usage > Format conversion > Conversion between SingleCellExperiment and loom","what":"SingleCellExperiment to loom","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"","code":"# remove seger.loom first seger.loom.file <- tempfile(pattern = \"seger_\", fileext = \".loom\") SCELoom(   from = \"SingleCellExperiment\", to = \"loom\", sce = seger,   loom.file = seger.loom.file )"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"loom-to-singlecellexperiment","dir":"","previous_headings":"Usage > Format conversion > Conversion between SingleCellExperiment and loom","what":"loom to SingleCellExperiment","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"","code":"seger.loom <- SCELoom(   from = \"loom\", to = \"SingleCellExperiment\",   loom.file = seger.loom.file )"},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"question, feature request bug report please write email songyb0519@gmail.com.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Access and Format Single-Cell RNA-Seq Datasets from Public Resources ","text":"Please note GEfetch2R project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2SCE.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert AnnData to SingleCellExperiemnt using scDIOR/zellkonverter/schard. — AD2SCE","title":"Convert AnnData to SingleCellExperiemnt using scDIOR/zellkonverter/schard. — AD2SCE","text":"Convert AnnData SingleCellExperiemnt using scDIOR/zellkonverter/schard.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2SCE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert AnnData to SingleCellExperiemnt using scDIOR/zellkonverter/schard. — AD2SCE","text":"","code":"AD2SCE(   anndata.file,   method = c(\"scDIOR\", \"zellkonverter\", \"schard\"),   assay = \"RNA\",   slot = \"counts\",   use.raw = TRUE,   conda.path = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2SCE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert AnnData to SingleCellExperiemnt using scDIOR/zellkonverter/schard. — AD2SCE","text":"anndata.file file contains AnnData. method Method used perform conversion, choose \"scDIOR\", \"zellkonverter\", \"schard\". Default: \"scDIOR\". assay type data, used method \"scDIOR\". Default: \"RNA\" (scRNA-seq data). slot Name used saving adata.X assay, used method \"zellkonverter\". Default: \"counts\". use.raw Logical value, whether use adata.raw. Default: TRUE. method \"scDIOR\" use.raw TRUE (FALSE), raw.X -> assays (X/layers -> assays); method \"zellkonverter\" use.raw TRUE (FALSE), raw.X -> altExp, X layers -> assays (X layers -> assays); method \"schard\" use.raw TRUE (FALSE), raw.X -> assays (X -> assays). conda.path Conda environment path, used method \"scDIOR\" \"zellkonverter\". Default: NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2SCE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert AnnData to SingleCellExperiemnt using scDIOR/zellkonverter/schard. — AD2SCE","text":"SingleCellExperiment object.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2SCE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert AnnData to SingleCellExperiemnt using scDIOR/zellkonverter/schard. — AD2SCE","text":"","code":"# scDIOR sce.scdior <- AD2SCE(anndata.file = \"pbmc3k.h5ad\", method = \"scDIOR\", assay = \"RNA\", use.raw = TRUE, conda.path = \"/path/to/conda\") #> Error in reticulate::use_condaenv(conda.path, required = TRUE): Unable to locate conda environment '/path/to/conda'. # zellkonverter sce.zell <- AD2SCE(anndata.file = \"pbmc3k.h5ad\", method = \"zellkonverter\", slot = \"scale.data\", use.raw = TRUE, conda.path = \"/path/to/conda\") #> Error in reticulate::use_condaenv(conda.path, required = TRUE): Unable to locate conda environment '/path/to/conda'. # schard sce.schard <- AD2SCE(anndata.file = \"pbmc3k.h5ad\", method = \"schard\", use.raw = TRUE) #> Error in AD2SCE(anndata.file = \"pbmc3k.h5ad\", method = \"schard\", use.raw = TRUE): pbmc3k.h5ad does not exist, please check!"},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2Seu.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert AnnData to SeuratObject using SeuratDisk/sceasy/scDIOR/schard/SeuratDisk+scDIOR. — AD2Seu","title":"Convert AnnData to SeuratObject using SeuratDisk/sceasy/scDIOR/schard/SeuratDisk+scDIOR. — AD2Seu","text":"Convert AnnData SeuratObject using SeuratDisk/sceasy/scDIOR/schard/SeuratDisk+scDIOR.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2Seu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert AnnData to SeuratObject using SeuratDisk/sceasy/scDIOR/schard/SeuratDisk+scDIOR. — AD2Seu","text":"","code":"AD2Seu(   anndata.file,   method = c(\"SeuratDisk\", \"sceasy\", \"scDIOR\", \"schard\", \"SeuratDisk+scDIOR\"),   assay = \"RNA\",   load.assays = \"RNA\",   slot = \"counts\",   use.raw = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2Seu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert AnnData to SeuratObject using SeuratDisk/sceasy/scDIOR/schard/SeuratDisk+scDIOR. — AD2Seu","text":"anndata.file file contains AnnData. method Method used perform conversion, choose \"SeuratDisk\", \"sceasy\",    \"scDIOR\", \"schard\", \"SeuratDisk+scDIOR\". Default: \"SeuratDisk\". assay Name store assay data . Default: RNA. load.assays assays load, used method \"SeuratDisk\". Default: RNA. slot Slot store adata.X, used method \"sceasy\". Default: counts. use.raw Logical value, whether use adata.raw, used method \"schard\". Default: TRUE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2Seu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert AnnData to SeuratObject using SeuratDisk/sceasy/scDIOR/schard/SeuratDisk+scDIOR. — AD2Seu","text":"SeuratObject.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/AD2Seu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert AnnData to SeuratObject using SeuratDisk/sceasy/scDIOR/schard/SeuratDisk+scDIOR. — AD2Seu","text":"","code":"# SeuratDisk ann.seu <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"SeuratDisk\", assay = \"RNA\", load.assays = c(\"RNA\")) #> Error in AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"SeuratDisk\", assay = \"RNA\",     load.assays = c(\"RNA\")): pbmc3k.h5ad does not exist, please check! # sceasy ann.sceasy <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"sceasy\", assay = \"RNA\", slot = \"scale.data\") #> Error in AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"sceasy\", assay = \"RNA\",     slot = \"scale.data\"): pbmc3k.h5ad does not exist, please check! # scDIOR ann.scdior <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"scDIOR\", assay = \"RNA\") #> Error in AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"scDIOR\", assay = \"RNA\"): pbmc3k.h5ad does not exist, please check! # schard ann.schard <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"schard\", assay = \"RNA\", use.raw = T) #> Error in AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"schard\", assay = \"RNA\",     use.raw = T): pbmc3k.h5ad does not exist, please check! # SeuratDisk+scDIOR ann.seuscdior <- AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"SeuratDisk+scDIOR\", assay = \"RNA\", load.assays = c(\"RNA\")) #> Error in AD2Seu(anndata.file = \"pbmc3k.h5ad\", method = \"SeuratDisk+scDIOR\",     assay = \"RNA\", load.assays = c(\"RNA\")): pbmc3k.h5ad does not exist, please check!"},{"path":"https://showteeth.github.io/GEfetch2R/reference/Bam2Fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bam files to fastq files. — Bam2Fastq","title":"Convert bam files to fastq files. — Bam2Fastq","text":"Convert bam files fastq files.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Bam2Fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bam files to fastq files. — Bam2Fastq","text":"","code":"Bam2Fastq(   bam.folder = NULL,   bam.path = NULL,   bam.type = c(\"10x\", \"other\"),   pair.end = NULL,   bamtofastq.path = NULL,   bamtofastq.paras = \"--nthreads 4\",   sort.name = FALSE,   sort.thread = 4 )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/Bam2Fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bam files to fastq files. — Bam2Fastq","text":"bam.folder Folder contains bam files, obtained DownloadSRA. Default: NULL. bam.path Paths bams. bam.folder bam.path NULL. Default: NULL. bam.type source bam files, choose 10x (e.g. CellRanger) . Default: 10x. pair.end bam files pair-end single-end, used bam.type . Default: NULL (identify flag). bamtofastq.path Path 10x bamtofastq (bam.type 10x) samtools (bam.type ). Default: NULL (conduct automatic detection bamtofastq_linux/samtools). bamtofastq.paras Parameters bamtofastq.path. Default: \"--nthreads 4\". sort.name Logical value, whether bam files sorted name, required bam.type . Default: FALSE. sort.thread number threads bam sorting, used bam.type . Default: 4.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Bam2Fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bam files to fastq files. — Bam2Fastq","text":"NULL paths failed bams.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Bam2Fastq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert bam files to fastq files. — Bam2Fastq","text":"","code":"if (FALSE) { # need users to provide prefetch.path and bamtofastq.path GSE138266.runs <- ExtractRun(acce = \"GSE138266\", platform = \"GPL18573\") GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, prefetch.path = \"/path/to/prefetch\",   out.folder = \"/path/to/output\" ) GSE138266.convert <- Bam2Fastq(   bam.folder = \"/path/to/output\",   bamtofastq.path = \"/path/to/bamtofastq_linux or samtools\",   bamtofastq.paras = \"--nthreads 4\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadBam.html","id":null,"dir":"Reference","previous_headings":"","what":"Download bam. — DownloadBam","title":"Download bam. — DownloadBam","text":"Download bam.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadBam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download bam. — DownloadBam","text":"","code":"DownloadBam(   gsm.df,   out.folder = NULL,   download.method = c(\"prefetch\", \"download.file\", \"ascp\"),   bam.type = c(\"10x\", \"other\"),   prefetch.path = NULL,   prefetch.paras = \"-X 100G\",   samdump.path = NULL,   samdump.paras = \"\",   quiet = FALSE,   timeout = 3600,   ascp.path = NULL,   max.rate = \"300m\",   rename = TRUE,   parallel = TRUE,   use.cores = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadBam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download bam. — DownloadBam","text":"gsm.df Dataframe contains GSM Run numbers, obtained ExtractRun. .folder Output folder. Default: NULL (current working directory). download.method Method download sra files, chosen \"prefetch\", \"download.file\", \"ascp\". Default: \"prefetch\". bam.type source bam files download, choose 10x (e.g. CellRanger) . Used download.method \"prefetch\". Default: 10x. prefetch.path Path prefetch. Default: NULL (conduct automatic detection). prefetch.paras Parameters prefetch. contain --type -T values. Default: \"-X 100G\". samdump.path Path sam-dump, used bam.type . Default: NULL (conduct automatic detection). samdump.paras Parameters sam-dump. Default: \"\". quiet Logical value, whether show downloading progress. Used download.method \"download.file\". Default: FALSE (show). timeout Maximum request time. Used download.method \"download.file\". Default: 3600. ascp.path Path ascp (/path/bin/ascp), please ensure relative path asperaweb_id_dsa.openssh file (/path/bin/ascp/../etc/asperaweb_id_dsa.openssh). Default: NULL (conduct automatic detection). max.rate Max transfer rate. Used download.method \"ascp\". Default: 300m. rename Logical value, whether rename download sra files. Recommended download.method \"ascp\". Default: FALSE (show). parallel Logical value, whether download parallelly. Used download.method \"ascp\" \"download.file\". Default: TRUE. use.cores number cores used. Used download.method \"ascp\" \"download.file\". Default: NULL (minimum value nrow(gsm.df) parallel::detectCores()).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadBam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download bam. — DownloadBam","text":"Dataframe contains failed runs NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadBam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download bam. — DownloadBam","text":"","code":"if (FALSE) { GSE138266.runs <- ExtractRun(acce = \"GSE138266\", platform = \"GPL18573\") # prefetch GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, bam.type = \"10x\",   prefetch.path = \"/path/to/prefetch\", out.folder = \"/path/to/output\" ) # download.file GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, download.method = \"download.file\",   timeout = 3600, out.folder = \"/path/to/output\",   parallel = TRUE, use.cores = 2 ) # ascp GSE138266.down <- DownloadBam(   gsm.df = GSE138266.runs, download.method = \"ascp\",   ascp.path = \"/path/to/ascp\", max.rate = \"300m\",   rename = TRUE, out.folder = \"/path/to/output\",   parallel = TRUE, use.cores = 2 ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadFastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Download FASTQ Files. — DownloadFastq","title":"Download FASTQ Files. — DownloadFastq","text":"Download FASTQ Files.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadFastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download FASTQ Files. — DownloadFastq","text":"","code":"DownloadFastq(   gsm.df,   out.folder = NULL,   download.method = c(\"download.file\", \"ascp\"),   quiet = FALSE,   timeout = 3600,   ascp.path = NULL,   max.rate = \"300m\",   parallel = TRUE,   use.cores = NULL,   format.10x = TRUE,   remove.raw = FALSE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadFastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download FASTQ Files. — DownloadFastq","text":"gsm.df Dataframe contains GSM Run numbers, obtained ExtractRun. .folder Output folder. Default: NULL (current working directory). download.method Method download fastq files, chosen \"download.file\" \"ascp\". Default: \"download.file\". quiet Logical value, whether show downloading progress. Used download.method \"download.file\". Default: FALSE (show). timeout Maximum request time. Used download.method \"download.file\". Default: 3600. ascp.path Path ascp (/path/bin/ascp), please ensure relative path asperaweb_id_dsa.openssh file (/path/bin/ascp/../etc/asperaweb_id_dsa.openssh). Default: NULL (conduct automatic detection). max.rate Max transfer rate. Used download.method \"ascp\". Default: 300m. parallel Logical value, whether download parallelly. Default: TRUE. use.cores number cores used. Default: NULL (minimum value nrow(gsm.df) parallel::detectCores()). format.10x Logical value, whether format split fastqs 10x standard format. Default: TRUE. remove.raw Logical value, whether remove old split fastqs (unformatted), used format.10x TRUE. Default: FALSE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadFastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download FASTQ Files. — DownloadFastq","text":"Dataframe contains failed gsm.df NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadFastq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download FASTQ Files. — DownloadFastq","text":"","code":"GSE130636.runs <- ExtractRun(acce = \"GSE130636\", platform = \"GPL20301\") #> Extract all GSM with acce: GSE130636 and platform: GPL20301 #> Found 1 file(s) #> GSE130636_series_matrix.txt.gz #> Rows: 0 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (7): ID_REF, GSM3745992, GSM3745993, GSM3745994, GSM3745995, GSM3745996,... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> File stored at:  #> /var/folders/_4/k4qmvf7s2gx_6789px8n_sxh0000gn/T//Rtmp1TqNsD/GPL20301.soft #> 6 GSMs to process # a small test GSE130636.runs <- GSE130636.runs[GSE130636.runs$run %in% c(\"SRR9004325\", \"SRR9004326\"), ] # use download.file download.file.res <- DownloadFastq(   gsm.df = gsm.df, out.folder = \"/path/to/output\",   download.method = \"download.file\", parallel = TRUE, use.cores = 2 ) #> Error in nrow(gsm.df): object 'gsm.df' not found # use ascp ascp.res <- DownloadFastq(   gsm.df = gsm.df, out.folder = \"/home/songyabing/data/projects/tmp/GEfetch2R\",   download.method = \"ascp\", ascp.path = \"~/.aspera/connect/bin/ascp\", parallel = TRUE, use.cores = 2 ) #> Error in nrow(gsm.df): object 'gsm.df' not found"},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadSRA.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SRA. — DownloadSRA","title":"Download SRA. — DownloadSRA","text":"Download SRA.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadSRA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SRA. — DownloadSRA","text":"","code":"DownloadSRA(   gsm.df,   out.folder = NULL,   download.method = c(\"prefetch\", \"download.file\", \"ascp\"),   prefetch.path = NULL,   prefetch.paras = \"-X 100G\",   quiet = FALSE,   timeout = 3600,   ascp.path = NULL,   max.rate = \"300m\",   rename = TRUE,   parallel = TRUE,   use.cores = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadSRA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SRA. — DownloadSRA","text":"gsm.df Dataframe contains GSM Run numbers, obtained ExtractRun. .folder Output folder. Default: NULL (current working directory). download.method Method download sra files, chosen \"prefetch\", \"download.file\", \"ascp\". Default: \"prefetch\". prefetch.path Path prefetch. Used ExtractRun \"prefetch\". Default: NULL (conduct automatic detection). prefetch.paras Parameters prefetch. Used ExtractRun \"prefetch\". Default: \"-X 100G\". quiet Logical value, whether show downloading progress. Used download.method \"download.file\". Default: FALSE (show). timeout Maximum request time. Used download.method \"download.file\". Default: 3600. ascp.path Path ascp (/path/bin/ascp), please ensure relative path asperaweb_id_dsa.openssh file (/path/bin/ascp/../etc/asperaweb_id_dsa.openssh). Default: NULL (conduct automatic detection). max.rate Max transfer rate. Used download.method \"ascp\". Default: 300m. rename Logical value, whether rename download sra files. Recommended download.method \"ascp\". Default: FALSE (show). parallel Logical value, whether download parallelly. Used download.method \"ascp\" \"download.file\". Default: TRUE. use.cores number cores used. Used download.method \"ascp\" \"download.file\". Default: NULL (minimum value nrow(gsm.df) parallel::detectCores()).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadSRA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download SRA. — DownloadSRA","text":"Dataframe contains failed runs NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/DownloadSRA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SRA. — DownloadSRA","text":"","code":"if (FALSE) { # need users to provide the prefetch.path and out.folder GSE186003.runs <- ExtractRun(acce = \"GSE186003\", platform = \"GPL24247\") # prefetch GSE186003.down <- DownloadSRA(   gsm.df = GSE186003.runs, prefetch.path = \"/path/to/prefetch\",   out.folder = \"/path/to/output\" ) # download.file GSE186003.down <- DownloadSRA(   gsm.df = GSE186003.runs, download.method = \"download.file\",   timeout = 3600, out.folder = \"/path/to/output\",   parallel = TRUE, use.cores = 2 ) # ascp GSE186003.down <- DownloadSRA(   gsm.df = GSE186003.runs, download.method = \"ascp\",   ascp.path = \"/path/to/ascp\", max.rate = \"300m\",   rename = TRUE, out.folder = \"/path/to/output\",   parallel = TRUE, use.cores = 2 ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExportSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Export SeuratObject to Other Formats. — ExportSeurat","title":"Export SeuratObject to Other Formats. — ExportSeurat","text":"Export SeuratObject Formats.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExportSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export SeuratObject to Other Formats. — ExportSeurat","text":"","code":"ExportSeurat(   seu.obj,   assay = NULL,   reduction = NULL,   to = c(\"SCE\", \"AnnData\", \"CellDataSet\", \"cell_data_set\", \"loom\"),   anndata.file = NULL,   loom.file = NULL,   conda.path = NULL,   ... )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExportSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export SeuratObject to Other Formats. — ExportSeurat","text":"seu.obj seurat object. assay assay use. Default: NULL (get DefaultAssay). reduction Name DimReduc set main reducedDim cds. target format, chosen \"SCE\" (SingleCellExperiment), \"AnnData\", \"CellDataSet\", \"cell_data_set\", \"loom\". Default: \"SCE\". anndata.file File used save AnnData results. Default: NULL. loom.file File used save loom results. Default: NULL. conda.path Conda environment path, used \"AnnData\". Default: NULL. ... Parameter .SingleCellExperiment, sceasy::convertFormat, .CellDataSet, .cell_data_set, SaveLoom, corresponding .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExportSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export SeuratObject to Other Formats. — ExportSeurat","text":"Object corresponding .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExportSeurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export SeuratObject to Other Formats. — ExportSeurat","text":"","code":"if (FALSE) { library(Seurat) # export to SingleCellExperiment sce.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"SCE\") # export to CellDataSet cds.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", reduction = \"tsne\", to = \"CellDataSet\") # export to cell_data_set cds3.obj <- ExportSeurat(seu.obj = pbmc_small, assay = \"RNA\", to = \"cell_data_set\") # export to AnnData, need users to provide the conda path and the output file ExportSeurat(   seu.obj = pbmc_small, assay = \"RNA\", to = \"AnnData\", conda.path = \"/path/to/anaconda3\",   anndata.file = \"/path/to/pbmc_small.h5ad\" ) # export to loom, need users to provide the output file ExportSeurat(   seu.obj = pbmc_small, assay = \"RNA\", to = \"loom\",   loom.file = \"/path/to/pbmc_small.loom\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBComposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Cell Type Composition of UCSC Cell Browser Datasets. — ExtractCBComposition","title":"Extract Cell Type Composition of UCSC Cell Browser Datasets. — ExtractCBComposition","text":"Extract Cell Type Composition UCSC Cell Browser Datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBComposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Cell Type Composition of UCSC Cell Browser Datasets. — ExtractCBComposition","text":"","code":"ExtractCBComposition(   json.folder = NULL,   sample.df = NULL,   all.samples.df = NULL,   collection = NULL,   sub.collection = NULL,   organ = NULL,   disease = NULL,   organism = NULL,   project = NULL,   fuzzy.match = TRUE,   cell.num = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBComposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Cell Type Composition of UCSC Cell Browser Datasets. — ExtractCBComposition","text":"json.folder Folder contains datasets json files, json.folder ShowCBDatasets. Default: NULL (current working directory). sample.df Dataframe contains used datasets. Default: NULL. .samples.df Dataframe contains samples metadata, obtained ShowCBDatasets. Default: NULL. sample.df .samples.df NULL. collection collection datasets, corresponds shortLabel column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). sub.collection sub-collection datasets, corresponds subLabel column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). organ organ datasets, corresponds body_parts column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). disease disease datasets, corresponds diseases column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). organism specie datasets, corresponds organisms column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). project project datasets, corresponds projects column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). fuzzy.match Logical value, whether perform fuzzy match provided attribute values. Default: TRUE. cell.num Cell number filter. NULL, filter; one value, lower filter; two values, low high filter. Deault: NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBComposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Cell Type Composition of UCSC Cell Browser Datasets. — ExtractCBComposition","text":"Dataframe contains sample information cell type composition.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBComposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Cell Type Composition of UCSC Cell Browser Datasets. — ExtractCBComposition","text":"","code":"if (FALSE) { # lazy mode, load datasets json files locally, need users to provide json folder ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, json.folder = NULL, update = FALSE) # cell number is between 1000 and 2000 hbb.sample.df <- ExtractCBDatasets(   all.samples.df = ucsc.cb.samples, organ = c(\"brain\", \"blood\"),   organism = \"Human (H. sapiens)\", cell.num = c(1000, 2000) ) hbb.sample.ct <- ExtractCBComposition(json.folder = NULL, sample.df = hbb.sample.df) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBDatasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract UCSC Cell Browser Datasets with Attributes. — ExtractCBDatasets","title":"Extract UCSC Cell Browser Datasets with Attributes. — ExtractCBDatasets","text":"Extract UCSC Cell Browser Datasets Attributes.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBDatasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract UCSC Cell Browser Datasets with Attributes. — ExtractCBDatasets","text":"","code":"ExtractCBDatasets(   all.samples.df,   collection = NULL,   sub.collection = NULL,   organ = NULL,   disease = NULL,   organism = NULL,   project = NULL,   fuzzy.match = TRUE,   cell.num = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBDatasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract UCSC Cell Browser Datasets with Attributes. — ExtractCBDatasets","text":".samples.df Dataframe contains samples metadata, obtained ShowCBDatasets. collection collection datasets, corresponds shortLabel column ShowCBDatasets, obtain available values StatDBAttribute. Default: NULL (without filtering). sub.collection sub-collection datasets, corresponds subLabel column ShowCBDatasets, obtain available values StatDBAttribute. Default: NULL (without filtering). organ organ datasets, corresponds body_parts column ShowCBDatasets, obtain available values StatDBAttribute. Default: NULL (without filtering). disease disease datasets, corresponds diseases column ShowCBDatasets, obtain available values StatDBAttribute. Default: NULL (without filtering). organism specie datasets, corresponds organisms column ShowCBDatasets, obtain available values StatDBAttribute. Default: NULL (without filtering). project project datasets, corresponds projects column ShowCBDatasets, obtain available values StatDBAttribute. Default: NULL (without filtering). fuzzy.match Logical value, whether perform fuzzy match provided attribute values. Default: TRUE. cell.num Cell number filter. NULL, filter; one value, lower filter; two values, low high filter. Deault: NULL(without filtering).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBDatasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract UCSC Cell Browser Datasets with Attributes. — ExtractCBDatasets","text":"Dataframe contains filtered datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCBDatasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract UCSC Cell Browser Datasets with Attributes. — ExtractCBDatasets","text":"","code":"if (FALSE) { # lazy mode, load datasets json files locally, need users to provide json folder ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, json.folder = NULL, update = FALSE) # cell number is between 1000 and 2000 hbb.sample.df <- ExtractCBDatasets(   all.samples.df = ucsc.cb.samples, organ = c(\"brain\", \"blood\"),   organism = \"Human (H. sapiens)\", cell.num = c(1000, 2000) ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCELLxGENEMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Metadata of CELLxGENE Datasets with Attributes. — ExtractCELLxGENEMeta","title":"Extract Metadata of CELLxGENE Datasets with Attributes. — ExtractCELLxGENEMeta","text":"Extract Metadata CELLxGENE Datasets Attributes.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCELLxGENEMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Metadata of CELLxGENE Datasets with Attributes. — ExtractCELLxGENEMeta","text":"","code":"ExtractCELLxGENEMeta(   all.samples.df,   organism = NULL,   ethnicity = NULL,   sex = NULL,   tissue = NULL,   disease = NULL,   assay = NULL,   suspension.type = NULL,   cell.type = NULL,   cell.num = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCELLxGENEMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Metadata of CELLxGENE Datasets with Attributes. — ExtractCELLxGENEMeta","text":".samples.df detail information CELLxGENE datasets, obtained ShowCELLxGENEDatasets. organism organism datasets, choose \"Homo sapiens\", \"Mus musculus\", \"Callithrix jacchus\", \"Macaca mulatta\", \"Sus scrofa domesticus\", one multiple values. Default: NULL (). ethnicity ethnicity datasets, choose \"Asian\", \"European\", \"unknown\", \"na\", \"African\", \"Bangladeshi\", \"British\", \"Irish\", \"East Asian\", \"African American\", \"Hispanic Latin American\", \"African American Afro-Caribbean\", \"European American\", \"Finnish\", \"Indian\", \"Japanese\", \"Korean\", \"Malaysian\", \"Singaporean Chinese\", \"American\", \"Pacific Islander\", \"admixed ancestry\", \"Eskimo\", \"Han Chinese\", \"Greater Middle Eastern  (Middle Eastern, North African Persian)\", \"multiethnic\", \"Jewish Israeli\", \"South Asian\", \"Oceanian\", \"Chinese\", one multiple values. Default: NULL (). sex sex datasets, choose \"female\", \"male\", \"unknown\", one multiple values. Default: NULL (). tissue tissue datasets, obtain available values StatDBAttribute. One multiple values. Default: NULL (). disease disease datasets, obtain available values StatDBAttribute. One multiple values. Default: NULL (). assay assay datasets, choose \"10x 3' v1\", \"10x 3' v2\", \"10x 3' v3\", \"10x 3' transcription profiling\", \"10x 5' v1\", \"10x 5' v2\", \"10x 5' transcription profiling\", \"10x multiome\", \"10x scATAC-seq\", \"sci-RNA-seq\", \"Drop-seq\", \"Smart-seq\", \"Smart-seq2\", \"Smart-seq v4\", \"snmC-Seq2\", \"Visium Spatial Gene Expression\", \"Seq-Well\", \"Seq-Well S3\", \"Patch-seq\", \"sci-Plex\", \"BD Rhapsody Targeted mRNA\", \"BD Rhapsody Whole Transcriptome Analysis\", \"Slide-seqV2\", \"GEXSCOPE technology\", \"inDrop\", \"microwell-seq\", \"CEL-seq2\", \"STRT-seq\", \"DroNc-seq\", \"MERFISH\", \"scATAC-seq\", \"MARS-seq\", \"TruDrop\", one multiple values. Default: NULL (). suspension.type suspension type datasets, choose \"nucleus\", \"cell\", \"na\", one multiple values. Default: NULL (). cell.type cell type datasets, obtain available values StatDBAttribute. One multiple values. Default: NULL (). cell.num Cell number filter. NULL, filter; one value, lower filter; two values, low high filter. Deault: NULL(without filtering).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCELLxGENEMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Metadata of CELLxGENE Datasets with Attributes. — ExtractCELLxGENEMeta","text":"Dataframe contains filtered datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCELLxGENEMeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract Metadata of CELLxGENE Datasets with Attributes. — ExtractCELLxGENEMeta","text":"https://gist.github.com/ivirshup/f1a1603db69de3888eacb4bdb6a9317a","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractCELLxGENEMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Metadata of CELLxGENE Datasets with Attributes. — ExtractCELLxGENEMeta","text":"","code":"# \\donttest{ # all available datasets all.cellxgene.datasets <- ShowCELLxGENEDatasets() # human 10x v2 and v3 datasets human.10x.cellxgene.meta <- ExtractCELLxGENEMeta(   all.samples.df = all.cellxgene.datasets,   assay = c(\"10x 3' v2\", \"10x 3' v3\"),   organism = \"Homo sapiens\" ) #> Use all self_reported_ethnicity as input! #> Use all sex as input! #> Use all tissue as input! #> Use all disease as input! #> Use all suspension_type as input! #> Use all cell_type as input! # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Raw Count Matrix or Fortmat Supplementary Files to 10x. — ExtractGEOExp","title":"Extract Raw Count Matrix or Fortmat Supplementary Files to 10x. — ExtractGEOExp","text":"Extract Raw Count Matrix Fortmat Supplementary Files 10x.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Raw Count Matrix or Fortmat Supplementary Files to 10x. — ExtractGEOExp","text":"","code":"ExtractGEOExp(   pf.obj,   acce,   supp.idx = 1,   down.supp = FALSE,   timeout = 3600,   supp.type = c(\"count\", \"10x\", \"10xSingle\"),   out.folder = NULL,   gene2feature = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Raw Count Matrix or Fortmat Supplementary Files to 10x. — ExtractGEOExp","text":"pf.obj GEO object platform. acce GEO accession number. supp.idx index supplementary files download. Default: 1. .supp Logical value, whether download supplementary files create count matrix. TRUE, always download supplementary files. FALSE, use ExpressionSet (contains non-integer emoty, download supplementary files automatically). Default: FALSE. timeout Timeout download.file. Default: 3600. supp.type type downloaded supplementary files, choose count (count matrix file single count matrix file), 10x (cellranger output files tar/gz supplementary files, contains barcodes, genes/features matrix, e.g. GSE200257) 10xSingle (cellranger output files supplementary files directly, e.g. GSE236082). Default: count. .folder Output folder save 10x files. Default: NULL (current working directory). gene2feature Logical value, whether rename genes.tsv.gz features.tsv.gz. Default: TRUE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Raw Count Matrix or Fortmat Supplementary Files to 10x. — ExtractGEOExp","text":"Count matrix (supp.type count) NULL (supp.type 10x/10xSingle).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Raw Count Matrix from Supplementary Files. — ExtractGEOExpSupp","title":"Extract Raw Count Matrix from Supplementary Files. — ExtractGEOExpSupp","text":"Extract Raw Count Matrix Supplementary Files.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Raw Count Matrix from Supplementary Files. — ExtractGEOExpSupp","text":"","code":"ExtractGEOExpSupp(acce, timeout = 3600, supp.idx = 1)"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Raw Count Matrix from Supplementary Files. — ExtractGEOExpSupp","text":"acce GEO accession number. timeout Timeout download.file. Default: 3600. supp.idx index supplementary files download. Default: 1.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Raw Count Matrix from Supplementary Files. — ExtractGEOExpSupp","text":"dataframe.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Fortmat Supplementary Files to 10x. — ExtractGEOExpSupp10x","title":"Fortmat Supplementary Files to 10x. — ExtractGEOExpSupp10x","text":"Fortmat Supplementary Files 10x.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fortmat Supplementary Files to 10x. — ExtractGEOExpSupp10x","text":"","code":"ExtractGEOExpSupp10x(   acce,   supp.idx = 1,   timeout = 3600,   out.folder = NULL,   gene2feature = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp10x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fortmat Supplementary Files to 10x. — ExtractGEOExpSupp10x","text":"acce GEO accession number. supp.idx index supplementary files download. Default: 1. timeout Timeout download.file. Default: 3600. .folder Output folder save 10x files. Default: NULL (current working directory). gene2feature Logical value, whether rename genes.tsv.gz features.tsv.gz. Default: TURE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp10xSingle.html","id":null,"dir":"Reference","previous_headings":"","what":"Fortmat Supplementary Files to 10x (separate files). — ExtractGEOExpSupp10xSingle","title":"Fortmat Supplementary Files to 10x (separate files). — ExtractGEOExpSupp10xSingle","text":"Fortmat Supplementary Files 10x (separate files).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp10xSingle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fortmat Supplementary Files to 10x (separate files). — ExtractGEOExpSupp10xSingle","text":"","code":"ExtractGEOExpSupp10xSingle(   acce,   timeout = 3600,   out.folder = NULL,   gene2feature = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSupp10xSingle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fortmat Supplementary Files to 10x (separate files). — ExtractGEOExpSupp10xSingle","text":"acce GEO accession number. timeout Timeout download.file. Default: 3600. .folder Output folder save 10x files. Default: NULL (current working directory). gene2feature Logical value, whether rename genes.tsv.gz features.tsv.gz. Default: TURE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSuppAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Raw Count Matrix from Supplementary Files or Fortmat Supplementary Files to 10x. — ExtractGEOExpSuppAll","title":"Extract Raw Count Matrix from Supplementary Files or Fortmat Supplementary Files to 10x. — ExtractGEOExpSuppAll","text":"Extract Raw Count Matrix Supplementary Files Fortmat Supplementary Files 10x.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSuppAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Raw Count Matrix from Supplementary Files or Fortmat Supplementary Files to 10x. — ExtractGEOExpSuppAll","text":"","code":"ExtractGEOExpSuppAll(   acce,   supp.idx = 1,   timeout = 3600,   supp.type = c(\"count\", \"10x\", \"10xSingle\"),   out.folder = NULL,   gene2feature = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSuppAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Raw Count Matrix from Supplementary Files or Fortmat Supplementary Files to 10x. — ExtractGEOExpSuppAll","text":"acce GEO accession number. supp.idx index supplementary files download. Default: 1. timeout Timeout download.file. Default: 3600. supp.type type downloaded supplementary files, choose count (count matrix file single count matrix file), 10x (cellranger output files tar/gz supplementary files, contains barcodes, genes/features matrix, e.g. GSE200257) 10xSingle (cellranger output files supplementary files directly, e.g. GSE236082). Default: count. .folder Output folder save 10x files. Default: NULL (current working directory). gene2feature Logical value, whether rename genes.tsv.gz features.tsv.gz. Default: TRUE. Default: TURE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOExpSuppAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Raw Count Matrix from Supplementary Files or Fortmat Supplementary Files to 10x. — ExtractGEOExpSuppAll","text":"Count matrix (supp.type count) NULL (supp.type 10x).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract GEO Study Information. — ExtractGEOInfo","title":"Extract GEO Study Information. — ExtractGEOInfo","text":"Extract GEO Study Information.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract GEO Study Information. — ExtractGEOInfo","text":"","code":"ExtractGEOInfo(pf.obj, sample.wise = FALSE)"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract GEO Study Information. — ExtractGEOInfo","text":"pf.obj GEO object platform. sample.wise Logical value, whether extract sample-wise information. Default: FALSE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract GEO Study Information. — ExtractGEOInfo","text":"dataframe.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sample Metadata from GEO. — ExtractGEOMeta","title":"Extract Sample Metadata from GEO. — ExtractGEOMeta","text":"Extract Sample Metadata GEO.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sample Metadata from GEO. — ExtractGEOMeta","text":"","code":"ExtractGEOMeta(acce, platform = NULL, ...)"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sample Metadata from GEO. — ExtractGEOMeta","text":"acce GEO accession number. platform Platform information/field. Default: NULL (platforms). ... Parameters getGEO.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sample Metadata from GEO. — ExtractGEOMeta","text":"Dataframe contains metadata provided GEO accession number.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Sample Metadata from GEO. — ExtractGEOMeta","text":"","code":"# \\donttest{ # users may need to set the size of the connection buffer # Sys.setenv(\"VROOM_CONNECTION_SIZE\" = 131072 * 60) # extract metadata of specified platform GSE200257.meta <- ExtractGEOMeta(acce = \"GSE200257\", platform = \"GPL24676\") #> Found 1 file(s) #> GSE200257_series_matrix.txt.gz #> Rows: 0 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (9): ID_REF, GSM6025648, GSM6025649, GSM6025650, GSM6025651, GSM6025652,... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> File stored at:  #> /var/folders/_4/k4qmvf7s2gx_6789px8n_sxh0000gn/T//Rtmp1TqNsD/GPL24676.soft # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOSubMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sample Metadata. — ExtractGEOSubMeta","title":"Extract Sample Metadata. — ExtractGEOSubMeta","text":"Extract Sample Metadata.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOSubMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sample Metadata. — ExtractGEOSubMeta","text":"","code":"ExtractGEOSubMeta(pf.obj)"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOSubMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sample Metadata. — ExtractGEOSubMeta","text":"pf.obj GEO object platform.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractGEOSubMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sample Metadata. — ExtractGEOSubMeta","text":"dataframe.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractHCAMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Metadata of Human Cell Atlas Projects with Attributes. — ExtractHCAMeta","title":"Extract Metadata of Human Cell Atlas Projects with Attributes. — ExtractHCAMeta","text":"Extract Metadata Human Cell Atlas Projects Attributes.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractHCAMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Metadata of Human Cell Atlas Projects with Attributes. — ExtractHCAMeta","text":"","code":"ExtractHCAMeta(   all.projects.df,   organism = NULL,   sex = NULL,   organ = NULL,   organ.part = NULL,   disease = NULL,   sample.type = NULL,   preservation.method = NULL,   protocol = NULL,   suspension.type = NULL,   cell.type = NULL,   cell.num = NULL,   sequencing.type = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractHCAMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Metadata of Human Cell Atlas Projects with Attributes. — ExtractHCAMeta","text":".projects.df detail information HCA projects, obtained ShowHCAProjects. organism organism projects, choose \"Homo sapiens\", \"Mus musculus\", \"Macaca mulatta\", \"canis lupus familiaris\", one multiple values. Default: NULL (). sex sex projects, choose \"female\", \"male\", \"mixed\", \"unknown\", one multiple values. Default: NULL (). organ organ projects (e.g. brain), obtain available values StatDBAttribute, one multiple values. Default: NULL (). organ.part organ part projects (e.g. cortex), obtain available values StatDBAttribute, one multiple values. Default: NULL (). disease disease projects (e.g. normal), obtain available values StatDBAttribute, one multiple values. Default: NULL (). sample.type sex projects, choose \"specimens\", \"organoids\", \"cellLines\", one multiple values. Default: NULL (). preservation.method preservation method projects (e.g. fresh), obtain available values StatDBAttribute, one multiple values. Default: NULL (). protocol protocol projects (e.g. 10x 3' v2), obtain available values StatDBAttribute, one multiple values. Default: NULL (). suspension.type suspension type projects, choose \"single cell\", \"single nucleus\", \"bulk cell\", \"bulk nuclei\", one multiple values. Default: NULL (). cell.type cell type projects (e.g. neuron), obtain available values StatDBAttribute, one multiple values. Default: NULL (). cell.num Cell number filter. NULL, filter; one value, lower filter; two values, low high filter. Deault: NULL(without filtering). sequencing.type sequencing instrument type projects (e.g. illumina hiseq 2500), obtain available values StatDBAttribute, one multiple values. Default: NULL ().","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractHCAMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Metadata of Human Cell Atlas Projects with Attributes. — ExtractHCAMeta","text":"Dataframe contains filtered projects.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractHCAMeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract Metadata of Human Cell Atlas Projects with Attributes. — ExtractHCAMeta","text":"https://bioconductor.org/packages/release/bioc/html/hca.html","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractHCAMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Metadata of Human Cell Atlas Projects with Attributes. — ExtractHCAMeta","text":"","code":"# \\donttest{ # all available projects all.hca.projects <- ShowHCAProjects() # all human projects all.human.projects <- ExtractHCAMeta(all.projects.df = all.hca.projects, organism = \"Homo sapiens\") #> Use all biologicalSex as input! #> Use all organ as input! #> Use all organPart as input! #> Use all disease as input! #> Use all sampleEntityType as input! #> Use all preservationMethod as input! #> Use all libraryConstructionApproach as input! #> Use all nucleicAcidSource as input! #> Use all selectedCellType as input! #> Use all instrumentManufacturerModel as input! # all human and 10x 3' v2 all.human.10x.projects <- ExtractHCAMeta(   all.projects.df = all.hca.projects,   organism = \"Homo sapiens\",   protocol = c(\"10x 3' v2\", \"10x 3' v3\") ) #> Use all biologicalSex as input! #> Use all organ as input! #> Use all organPart as input! #> Use all disease as input! #> Use all sampleEntityType as input! #> Use all preservationMethod as input! #> Use all nucleicAcidSource as input! #> Use all selectedCellType as input! #> Use all instrumentManufacturerModel as input! # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBComposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Cell Type Composition of PanglaoDB Datasets. — ExtractPanglaoDBComposition","title":"Extract Cell Type Composition of PanglaoDB Datasets. — ExtractPanglaoDBComposition","text":"Extract Cell Type Composition PanglaoDB Datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBComposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Cell Type Composition of PanglaoDB Datasets. — ExtractPanglaoDBComposition","text":"","code":"ExtractPanglaoDBComposition(   sra = NULL,   srs = NULL,   species = NULL,   protocol = NULL,   tissue = NULL,   local.data = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBComposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Cell Type Composition of PanglaoDB Datasets. — ExtractPanglaoDBComposition","text":"sra SRA identifier datasets, obtain available values StatDBAttribute, one multiple value. Default: NULL (). srs SRS identifier datasets, obtain available values StatDBAttribute, one multiple value. Default: NULL (). species species datasets, choose \"Homo sapiens\", \"Mus musculus\", one multiple value. Default: NULL (). protocol Protocol used generate datasets, choose \"10x chromium\", \"drop-seq\", \"microwell-seq\", \"C1 Fluidigm\", \"inDrops\", \"Smart-seq2\", \"CEL-seq\", one multiple value. Default: NULL (). tissue tissue datasets, obtain available values StatDBAttribute, one multiple value. Default: NULL (). local.data Logical value, whether use local data (PanglaoDB longer maintained). Default: TRUE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBComposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Cell Type Composition of PanglaoDB Datasets. — ExtractPanglaoDBComposition","text":"Dataframe contains sample metadata, cluster, cell number cell type information.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBComposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Cell Type Composition of PanglaoDB Datasets. — ExtractPanglaoDBComposition","text":"","code":"# \\donttest{ human.composition <- ExtractPanglaoDBComposition(   species = \"Homo sapiens\",   protocol = c(\"Smart-seq2\", \"10x chromium\") ) # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Metadata of scRNA-seq Datasets in PanglaoDB. — ExtractPanglaoDBMeta","title":"Extract Metadata of scRNA-seq Datasets in PanglaoDB. — ExtractPanglaoDBMeta","text":"Extract Metadata scRNA-seq Datasets PanglaoDB.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Metadata of scRNA-seq Datasets in PanglaoDB. — ExtractPanglaoDBMeta","text":"","code":"ExtractPanglaoDBMeta(   species = NULL,   protocol = NULL,   tissue = NULL,   cell.num = NULL,   show.cell.type = TRUE,   local.data = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Metadata of scRNA-seq Datasets in PanglaoDB. — ExtractPanglaoDBMeta","text":"species species datasets, choose \"Homo sapiens\", \"Mus musculus\", one multiple value. Default: NULL (). protocol Protocol used generate datasets, choose \"10x chromium\", \"drop-seq\", \"microwell-seq\", \"C1 Fluidigm\", \"inDrops\", \"Smart-seq2\", \"CEL-seq\", one multiple value. Default: NULL (). tissue tissue datasets, obtain available values StatDBAttribute. Default: NULL (). cell.num Cell number filter. NULL, filter; one value, lower filter; two values, low high filter. Deault: NULL. show.cell.type Logical value, whether show inferred cell type. Default: TRUE. local.data Logical value, whether use local data (PanglaoDB longer maintained). Default: TRUE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Metadata of scRNA-seq Datasets in PanglaoDB. — ExtractPanglaoDBMeta","text":"Dataframe contains SRA, SRS, Tissue, Protocol, Species, Cells, CellType (inferred).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractPanglaoDBMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Metadata of scRNA-seq Datasets in PanglaoDB. — ExtractPanglaoDBMeta","text":"","code":"# \\donttest{ human.meta <- ExtractPanglaoDBMeta(   species = \"Homo sapiens\",   protocol = c(\"Smart-seq2\", \"10x chromium\"),   cell.num = c(1000, 2000) ) # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractRun.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Runs with GEO Accession Number or GSM Number. — ExtractRun","title":"Extract Runs with GEO Accession Number or GSM Number. — ExtractRun","text":"Extract Runs GEO Accession Number GSM Number.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractRun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Runs with GEO Accession Number or GSM Number. — ExtractRun","text":"","code":"ExtractRun(gsm = NULL, acce = NULL, platform = NULL, parallel = TRUE, ...)"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractRun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Runs with GEO Accession Number or GSM Number. — ExtractRun","text":"gsm GSM number. Default: NULL (use acce). acce GEO accession number. Default: NULL (use gsm). acce gsm NULL. platform Platform information/field. Default: NULL (platforms). parallel Logical value, whether process GSM parallelly. Default: TRUE. ... Parameters getGEO. Used acce NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractRun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Runs with GEO Accession Number or GSM Number. — ExtractRun","text":"Dataframe contains GSM Runs.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractRun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Runs with GEO Accession Number or GSM Number. — ExtractRun","text":"","code":"if (FALSE) { GSE186003.runs <- ExtractRun(acce = \"GSE186003\", platform = \"GPL24247\", parallel = FALSE) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractZenodoMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Dataframe with Zenodo DOIs. — ExtractZenodoMeta","title":"Prepare Dataframe with Zenodo DOIs. — ExtractZenodoMeta","text":"Prepare Dataframe Zenodo DOIs.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractZenodoMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Dataframe with Zenodo DOIs. — ExtractZenodoMeta","text":"","code":"ExtractZenodoMeta(doi, file.ext = c(\"rdata\", \"h5ad\"))"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractZenodoMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Dataframe with Zenodo DOIs. — ExtractZenodoMeta","text":"doi vector Zenodo DOIs, start \"10.5281/zenodo.\". file.ext valid file extension download. NULL, use files. Default: c(\"rdata\", \"h5ad\").","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractZenodoMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Dataframe with Zenodo DOIs. — ExtractZenodoMeta","text":"Dataframe contains files valid extension given Zenodo DOI.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ExtractZenodoMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Dataframe with Zenodo DOIs. — ExtractZenodoMeta","text":"","code":"# \\donttest{ zebrafish.df <- ExtractZenodoMeta(doi = \"10.5281/zenodo.7243603\") #> Error in curl::curl_fetch_memory(record.api): Couldn't connect to server [zenodo.org]: Failed to connect to zenodo.org port 443 after 30 ms: Couldn't connect to server ExtractZenodoMeta(doi = \"10.5281/zenodo.48065\") # Restricted Access #> Error in curl::curl_fetch_memory(record.api): Couldn't connect to server [zenodo.org]: Failed to connect to zenodo.org port 443 after 0 ms: Couldn't connect to server # vector of dois multi.dois <- ExtractZenodoMeta(doi = c(   \"1111\", \"10.5281/zenodo.7243603\",   \"10.5281/zenodo.7244441\" )) #> 1111 are not valid dois, please check! #> Error in curl::curl_fetch_memory(record.api): Couldn't connect to server [zenodo.org]: Failed to connect to zenodo.org port 443 after 0 ms: Couldn't connect to server # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/Fastq2R.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe FASTQ files to SeuratObject and DESeqDataSet. — Fastq2R","title":"Pipe FASTQ files to SeuratObject and DESeqDataSet. — Fastq2R","text":"Pipe FASTQ files SeuratObject DESeqDataSet.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Fastq2R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe FASTQ files to SeuratObject and DESeqDataSet. — Fastq2R","text":"","code":"Fastq2R(   sample.dir,   ref,   method = c(\"CellRanger\", \"STAR\"),   localcores = 4,   localmem = 16,   thread = 4,   out.folder = NULL,   st.path = NULL,   st.paras = \"--chemistry=auto --jobmode=local\",   merge = TRUE,   count.col = 2,   meta.data = NULL,   fmu = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/Fastq2R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe FASTQ files to SeuratObject and DESeqDataSet. — Fastq2R","text":"sample.dir Directory contains samples. ref Path folder containing 10x-compatible transcriptome RunCellRanger STAR RunSTAR reference. method Mapping methods, choose CellRanger (10x Genomics) STAR (Smart-seq2 bulk RNA-seq). Default: CellRanger. localcores max cores used RunCellRanger. Default: 4. localmem max memory (GB) used RunCellRanger. Default: 16. thread number threads use RunSTAR. Default: 4. .folder Output folder. Default: NULL (current working directory). st.path Path STAR cellranger. Default: NULL (conduct automatic detection). st.paras Parameters STAR cellranger. Default: \"--chemistry=auto --jobmode=local\". merge Logical, whether merge SeuratObjects, use method CellRanger. Default: TRUE. count.col Column contains used count data (2: unstranded; 3: stranded=yes; 4: stranded=reverse), use method STAR. Default: 2. meta.data Dataframe contains sample information DESeqDataSet, use method STAR. Default: NULL. fmu Column meta.data contains group information. Default: NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Fastq2R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe FASTQ files to SeuratObject and DESeqDataSet. — Fastq2R","text":"SeuratObject, DESeqDataSet NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Fastq2R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe FASTQ files to SeuratObject and DESeqDataSet. — Fastq2R","text":"","code":"if (FALSE) { # run CellRanger (10x Genomics) seu <- Fastq2R(   sample.dir = \"/path/to/fastq\",   ref = \"/path/to/10x/ref\",   method = \"CellRanger\",   out.folder = \"/path/to/results\",   st.path = \"/path/to/cellranger\" ) # run STAR (Smart-seq2 or bulk RNA-seq) deobj <- Fastq2R(   sample.dir = \"/path/to/fastq\",   ref = \"/path/to/star/ref\",   method = \"STAR\",   out.folder = \"/path/to/results\",   st.path = \"/path/to/STAR\",   st.paras = \"--outBAMsortingThreadN 4 --twopassMode None\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ImportSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Other Formats to SeuratObject. — ImportSeurat","title":"Convert Other Formats to SeuratObject. — ImportSeurat","text":"Convert Formats SeuratObject.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ImportSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Other Formats to SeuratObject. — ImportSeurat","text":"","code":"ImportSeurat(   obj = NULL,   assay = \"RNA\",   from = c(\"SCE\", \"AnnData\", \"CellDataSet\", \"cell_data_set\", \"loom\"),   count.assay = \"counts\",   data.assay = \"logcounts\",   slot = \"counts\",   anndata.file = NULL,   loom.file = NULL,   conda.path = NULL,   ... )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ImportSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Other Formats to SeuratObject. — ImportSeurat","text":"obj formats object (eg: SingleCellExperiment, CellDataSet). Default: NULL (used \"AnnData\"). assay Assay name store expression matrices SeuratObject. Default: RNA. source formats, chosen \"SCE\" (SingleCellExperiment), \"AnnData\", \"CellDataSet\", \"cell_data_set\". Default: \"SCE\". count.assay assay source formats save raw counts, used \"SCE\" cell_data_set. Default: counts. data.assay assay source formats save log transformed counts, used \"SCE\" cell_data_set. Default: logcounts. slot Slot store expression data , used \"CellDataSet\". Default: counts. anndata.file file contains AnnData. Default: NULL. loom.file file contains loom. Default: NULL. conda.path Conda environment path, used \"AnnData\". Default: NULL. ... Parameter .Seurat, sceasy::convertFormat, .Seurat, .Seurat, .Seurat, corresponding .","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ImportSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Other Formats to SeuratObject. — ImportSeurat","text":"Seurat object.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ImportSeurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Other Formats to SeuratObject. — ImportSeurat","text":"","code":"if (FALSE) { # import data from SingleCellExperiment seu.obj <- ImportSeurat(   obj = sce.obj, from = \"SCE\", count.assay = \"counts\",   data.assay = \"logcounts\", assay = \"RNA\" ) # import data from CellDataSet seu.obj <- ImportSeurat(obj = cds.obj, from = \"CellDataSet\", count.assay = \"counts\", assay = \"RNA\") # import data from cell_data_set seu.obj <- ImportSeurat(   obj = sce.obj, from = \"cell_data_set\", count.assay = \"counts\",   data.assay = \"logcounts\", assay = \"RNA\" ) # import data from AnnData, need users to provide the file for conversion seu.obj <- ImportSeurat(anndata.file = \"path/to/h5ad\", from = \"AnnData\", assay = \"RNA\") # import data from loom, need users to provide the file for conversion seu.obj <- ImportSeurat(loom.file = \"path/to/loom\", from = \"loom\") }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/PanglaoDBComposition.html","id":null,"dir":"Reference","previous_headings":"","what":"All Sample Composition of PanglaoDB Datasets — PanglaoDBComposition","title":"All Sample Composition of PanglaoDB Datasets — PanglaoDBComposition","text":"dataset contains sample composition PanglaoDB datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/PanglaoDBComposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All Sample Composition of PanglaoDB Datasets — PanglaoDBComposition","text":"","code":"PanglaoDBComposition"},{"path":"https://showteeth.github.io/GEfetch2R/reference/PanglaoDBComposition.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All Sample Composition of PanglaoDB Datasets — PanglaoDBComposition","text":"data frame 19,449 rows 8 variables: SRA SRA identifier SRS SRS identifier Tissue tissue sample Protocol protocol used generate sample Species species sample Cluster Seurat cluster Cells Cluster cell number Cell Type Predicted cluster cell types","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/PanglaoDBMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"All Sample Metadata of PanglaoDB Datasets — PanglaoDBMeta","title":"All Sample Metadata of PanglaoDB Datasets — PanglaoDBMeta","text":"dataset contains sample metadata cell types PanglaoDB datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/PanglaoDBMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All Sample Metadata of PanglaoDB Datasets — PanglaoDBMeta","text":"","code":"PanglaoDBMeta"},{"path":"https://showteeth.github.io/GEfetch2R/reference/PanglaoDBMeta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All Sample Metadata of PanglaoDB Datasets — PanglaoDBMeta","text":"data frame 1,368 rows 7 variables: SRA SRA identifier SRS SRS identifier Tissue tissue sample Protocol protocol used generate sample Species species sample Cells Total cell number sample CellType Predicted cell types, separated comma","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCBDatasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Download UCSC Cell Browser Datasets. — ParseCBDatasets","title":"Download UCSC Cell Browser Datasets. — ParseCBDatasets","text":"Download UCSC Cell Browser Datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCBDatasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download UCSC Cell Browser Datasets. — ParseCBDatasets","text":"","code":"ParseCBDatasets(   sample.df = NULL,   all.samples.df = NULL,   collection = NULL,   sub.collection = NULL,   organ = NULL,   disease = NULL,   organism = NULL,   project = NULL,   fuzzy.match = TRUE,   cell.num = NULL,   timeout = 1000,   obs.value.filter = NULL,   obs.keys = NULL,   include.genes = NULL,   merge = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCBDatasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download UCSC Cell Browser Datasets. — ParseCBDatasets","text":"sample.df Dataframe contains used datasets. Default: NULL. .samples.df Dataframe contains samples metadata, obtained ShowCBDatasets. Default: NULL. sample.df .samples.df NULL. collection collection datasets, corresponds shortLabel column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). sub.collection sub-collection datasets, corresponds subLabel column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). organ organ datasets, corresponds body_parts column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). disease disease datasets, corresponds diseases column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). organism specie datasets, corresponds organisms column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). project project datasets, corresponds projects column .samples.df, obtain available values StatDBAttribute. Default: NULL (without filtering). fuzzy.match Logical value, whether perform fuzzy match provided attribute values. Default: TRUE. cell.num Cell number filter. NULL, filter; one value, lower filter; two values, low high filter. Deault: NULL. timeout Maximum request time loading data online. Default: 1000. obs.value.filter Filter expression cell's metadata, e.g., `Louvain Cluster` == 1 & sex == 'M' (use `` wrap columns space). Default: NULL. obs.keys Columns fetch cell's metadata. e.g., c(\"cluster\", \"Louvain Cluster\", \"donor\",\"sex\"). Default: NULL. include.genes Genes include. Default: NULL. merge Logical value, whether merge Seurat list. Default: FALSE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCBDatasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download UCSC Cell Browser Datasets. — ParseCBDatasets","text":"Seurat object (merge TRUE) list Seurat objects (merge FALSE).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCBDatasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download UCSC Cell Browser Datasets. — ParseCBDatasets","text":"","code":"if (FALSE) { # lazy mode, load datasets json files locally, need users to provide json folder ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, json.folder = NULL, update = FALSE) # cell number is between 1000 and 2000 hbb.sample.df <- ExtractCBDatasets(   all.samples.df = ucsc.cb.samples, organ = c(\"brain\", \"blood\"),   organism = \"Human (H. sapiens)\", cell.num = c(1000, 2000) ) hbb.sample.seu <- ParseCBDatasets(sample.df = hbb.sample.df) # test 10x and matrix load complex.df <- ucsc.cb.samples[c(1, 927, 379), ] # two 10x and one matrix complex.seu.list <- ParseCBDatasets(sample.df = test.df, merge = F) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCELLxGENE.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CELLxGENE Datasets and Return SeuratObject. — ParseCELLxGENE","title":"Download CELLxGENE Datasets and Return SeuratObject. — ParseCELLxGENE","text":"Download CELLxGENE Datasets Return SeuratObject.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCELLxGENE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CELLxGENE Datasets and Return SeuratObject. — ParseCELLxGENE","text":"","code":"ParseCELLxGENE(   meta = NULL,   file.ext = c(\"rds\", \"h5ad\"),   out.folder = NULL,   timeout = 3600,   quiet = FALSE,   parallel = TRUE,   use.cores = NULL,   return.seu = FALSE,   merge = TRUE,   use.census = FALSE,   census.version = \"stable\",   organism = NULL,   obs.value.filter = NULL,   obs.keys = NULL,   include.genes = NULL,   obsm.layers = FALSE,   ... )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCELLxGENE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CELLxGENE Datasets and Return SeuratObject. — ParseCELLxGENE","text":"meta Metadata used download, can ExtractCELLxGENEMeta, contain dataset_id, rds_id/h5ad_id (depend file.ext) name columns. Skip use.census TRUE. Default: NULL. file.ext valid file extension download. NULL, use \"rds\" \"h5ad\". Default: c(\"rds\", \"h5ad\"). .folder output folder. Default: NULL (current working directory). timeout Maximum request time. Default: 3600. quiet Logical value, whether show downloading progress. Default: FALSE (show). parallel Logical value, whether download parallelly. Default: TRUE. \"libcurl\" available download.file, parallel done default (parallel can FALSE). use.cores number cores used. Default: NULL (minimum value extracted length(download.urls) parallel::detectCores()). return.seu Logical value, whether load downloaded datasets Seurat. Valid rds file.ext datasets download successfully. Default: FALSE. merge Logical value, whether merge Seurat list multiple rds files, used return.seu TRUE. Default: FALSE. use.census Logical value, whether use CZ CELLxGENE Census download subset datasets. Default: FALSE. census.version version Census, e.g., \"2024-05-13\", \"latest\" \"stable\". Default: stable. organism Organism, lower case replace space '_'. Default: FALSE (human). obs.value.filter Filter expression cell's metadata, e.g., cell_type == 'B cell' & tissue_general == 'lung' & disease == 'COVID-19'. Default: NULL. obs.keys Columns fetch cell's metadata. e.g., c(\"cell_type\", \"tissue_general\", \"disease\", \"sex\"). include.genes Genes include, e.g, include.genes = c('ENSG00000161798', 'ENSG00000188229') var_value_filter = \"feature_id  Default: NULL. obsm.layers Names arrays obsm add cell embeddings. e.g., c(\"scvi\", \"geneformer\"). Default: FALSE (suppress loading dimensional reductions). ... Parameters get_seurat, used use.census TRUE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCELLxGENE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CELLxGENE Datasets and Return SeuratObject. — ParseCELLxGENE","text":"Dataframe contains failed datasets, SeuratObject (return.seu TRUE, rds file.ext) NULL (return.seu FALSE rds file.ext).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCELLxGENE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download CELLxGENE Datasets and Return SeuratObject. — ParseCELLxGENE","text":"https://gist.github.com/ivirshup/f1a1603db69de3888eacb4bdb6a9317a","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseCELLxGENE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download CELLxGENE Datasets and Return SeuratObject. — ParseCELLxGENE","text":"","code":"if (FALSE) { # all available datasets all.cellxgene.datasets <- ShowCELLxGENEDatasets() # human 10x v2 and v3 datasets human.10x.cellxgene.meta <- ExtractCELLxGENEMeta(   all.samples.df = all.cellxgene.datasets,   assay = c(\"10x 3' v2\", \"10x 3' v3\"),   organism = \"Homo sapiens\" ) # download, need to provide the output folder ParseCELLxGENE(meta = human.10x.cellxgene.meta, out.folder = \"/path/to/output\") }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseGEO.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Matrix from GEO and Load to Seurat/DESeq2. — ParseGEO","title":"Download Matrix from GEO and Load to Seurat/DESeq2. — ParseGEO","text":"Download Matrix GEO Load Seurat/DESeq2.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseGEO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Matrix from GEO and Load to Seurat/DESeq2. — ParseGEO","text":"","code":"ParseGEO(   acce,   platform = NULL,   down.supp = FALSE,   supp.idx = 1,   timeout = 3600,   data.type = c(\"sc\", \"bulk\"),   supp.type = c(\"count\", \"10x\", \"10xSingle\"),   out.folder = NULL,   gene2feature = TRUE,   merge = TRUE,   meta.data = NULL,   fmu = NULL,   ... )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseGEO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Matrix from GEO and Load to Seurat/DESeq2. — ParseGEO","text":"acce GEO accession number. platform Platform information/field. Disable .supp TRUE. Default: NULL (disable). .supp Logical value, whether download supplementary files create count matrix. TRUE, always download supplementary files. FALSE, use ExpressionSet (contains non-integer empty, download supplementary files automatically). Default: FALSE. supp.idx index supplementary files download. consistent platform. Default: 1. timeout Timeout download.file. Default: 3600. data.type data type dataset, choose \"sc\" (single-cell) \"bulk\" (bulk). Default: \"sc\". supp.type type downloaded supplementary files, choose count (count matrix file single count matrix file), 10x (cellranger output files tar/gz supplementary files, contains barcodes, genes/features matrix, e.g. GSE200257) 10xSingle (cellranger output files supplementary files directly, e.g. GSE236082). Default: count. .folder Output folder save 10x files. Default: NULL (current working directory). gene2feature Logical value, whether rename genes.tsv.gz features.tsv.gz. Default: TRUE. merge Logical value, whether merge Seurat list multiple 10x files (supp.type 10x). Default: FALSE. meta.data Dataframe contains sample information DESeqDataSet, use data.type bulk. Default: NULL. fmu Column meta.data contains group information. Default: NULL. ... Parameters getGEO.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseGEO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Matrix from GEO and Load to Seurat/DESeq2. — ParseGEO","text":"data.type \"sc\", return Seurat object (merge TRUE) Seurat object list (merge FALSE). data.type \"bulk\", return DESeqDataSet.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseGEO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Matrix from GEO and Load to Seurat/DESeq2. — ParseGEO","text":"","code":"if (FALSE) { # the supp files are count matrix GSE94820.seu <- ParseGEO(acce = \"GSE94820\", down.supp = TRUE, supp.idx = 1, supp.type = \"count\") # the supp files are cellranger output files: barcodes, genes/features and matrix # need users to provide the output folder GSE200257.seu <- ParseGEO(   acce = \"GSE200257\", down.supp = TRUE, supp.idx = 1, supp.type = \"10x\",   out.folder = \"/path/to/output/folder\" ) # need users to provide the output folder GSE236082.seu <- ParseGEO(   acce = \"GSE236082\", down.supp = TRUE, supp.type = \"10xSingle\",   out.folder = \"/path/to/output/folder\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseHCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Human Cell Atlas Datasets. — ParseHCA","title":"Download Human Cell Atlas Datasets. — ParseHCA","text":"Download Human Cell Atlas Datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseHCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Human Cell Atlas Datasets. — ParseHCA","text":"","code":"ParseHCA(   meta,   file.ext = c(\"rds\", \"rdata\", \"h5\", \"h5ad\", \"loom\", \"tsv\"),   out.folder = NULL,   timeout = 3600,   quiet = FALSE,   parallel = TRUE,   use.cores = NULL,   return.seu = FALSE,   merge = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseHCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Human Cell Atlas Datasets. — ParseHCA","text":"meta Metadata used download, can ExtractHCAMeta, contain entryId name catalog. file.ext valid file extension download. NULL, use \"rds\", \"rdata\", \"h5\", \"h5ad\", \"loom\", \"tsv\". Default: c(\"rds\", \"rdata\", \"h5\", \"h5ad\", \"loom\", \"tsv\"). .folder output folder. Default: NULL (current working directory). timeout Maximum request time. Default: 3600. quiet Logical value, whether show downloading progress. Default: FALSE (show). parallel Logical value, whether download parallelly. Default: TRUE. \"libcurl\" available download.file, parallel done default (parallel can FALSE). use.cores number cores used. Default: NULL (minimum value extracted length(download.urls) parallel::detectCores()). return.seu Logical value, whether load downloaded datasets Seurat. Valid rds file.ext datasets download successfully. Default: FALSE. merge Logical value, whether merge Seurat list multiple rds files, used return.seu TRUE. Default: FALSE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseHCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Human Cell Atlas Datasets. — ParseHCA","text":"SeuratObject (return.seu TRUE, rds file.ext) list contains files' metadata downloaded successfully (.meta) failed (fail.meta).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseHCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Human Cell Atlas Datasets. — ParseHCA","text":"","code":"if (FALSE) { # all available projects all.hca.projects <- ShowHCAProjects() # all human and 10x 3' v2 all.human.10x.projects <- ExtractHCAMeta(   all.projects.df = all.hca.projects,   organism = \"Homo sapiens\",   protocol = c(\"10x 3' v2\", \"10x 3' v3\") ) # download, need users to provide the output folder ParseHCA(meta = all.human.10x.projects, out.folder = \"/path/to/output\") }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParsePanglaoDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse PanglaoDB Data. — ParsePanglaoDB","title":"Parse PanglaoDB Data. — ParsePanglaoDB","text":"Parse PanglaoDB Data.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParsePanglaoDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse PanglaoDB Data. — ParsePanglaoDB","text":"","code":"ParsePanglaoDB(   meta,   cell.type = \"All\",   include.gene = NA,   exclude.gene = NA,   merge = FALSE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParsePanglaoDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse PanglaoDB Data. — ParsePanglaoDB","text":"meta Metadata contains \"SRA\", \"SRS\", \"Tissue\", \"Protocol\", \"Species\", can obtained ExtractPanglaoDBMeta. cell.type Extract samples specified cell types. samples without SRS (notused), value can \"\" \"None\", samples filtered. Obtain available values StatDBAttribute, one multiple value. Default: \"\". include.gene Include cells expressing genes. Default: NA. exclude.gene Exclude cells expressing genes. Default: NA. merge Logical value, whether merge Seurat list. Default: FALSE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParsePanglaoDB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse PanglaoDB Data. — ParsePanglaoDB","text":"Seurat object (merge TRUE) list Seurat objects (merge FALSE).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParsePanglaoDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse PanglaoDB Data. — ParsePanglaoDB","text":"","code":"if (FALSE) { hsa.meta <- ExtractPanglaoDBMeta(   species = \"Homo sapiens\",   protocol = c(\"Smart-seq2\", \"10x chromium\"),   show.cell.type = TRUE, cell.num = c(1000, 2000) ) hsa.seu <- ParsePanglaoDB(hsa.meta, merge = TRUE) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseZenodo.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Data with Zenodo DOI and Return SeuratObject. — ParseZenodo","title":"Download Data with Zenodo DOI and Return SeuratObject. — ParseZenodo","text":"Download Data Zenodo DOI Return SeuratObject.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseZenodo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Data with Zenodo DOI and Return SeuratObject. — ParseZenodo","text":"","code":"ParseZenodo(   doi = NULL,   file.ext = c(\"rdata\", \"rds\", \"h5ad\"),   doi.df = NULL,   out.folder = NULL,   timeout = 1000,   quiet = FALSE,   parallel = TRUE,   use.cores = NULL,   return.seu = FALSE,   merge = TRUE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseZenodo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Data with Zenodo DOI and Return SeuratObject. — ParseZenodo","text":"doi vector Zenodo DOIs download. Default: NULL. file.ext valid file extension download. NULL, use files. Default: c(\"rdata\", \"rds\", \"h5ad\"). doi.df DOI dataframe download. useful something wrong happens downloading (e.g. MD5 verification failure, DownloadZenodo return dataframe contains failure terms.). Default: NULL. required provide either doi doi.df. .folder output folder. Default: NULL (current working directory). timeout Maximum request time. Default: 1000. quiet Logical value, whether show downloading progress. Default: FALSE (show). parallel Logical value, whether download parallelly. Default: TRUE. \"libcurl\" available download.file, parallel done default (parallel can FALSE). use.cores number cores used. Default: NULL (minimum value nrow(doi.df) (specified doi.df extract doi) parallel::detectCores()). return.seu Logical value, whether load downloaded datasets Seurat. Valid rds file.ext datasets download successfully. Default: FALSE. merge Logical value, whether merge Seurat list multiple rds files, used return.seu TRUE. Default: FALSE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseZenodo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Data with Zenodo DOI and Return SeuratObject. — ParseZenodo","text":"Dataframe contains failed datasets, SeuratObject (return.seu TRUE, rds file.ext) NULL (return.seu FALSE rds file.ext).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ParseZenodo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Data with Zenodo DOI and Return SeuratObject. — ParseZenodo","text":"","code":"if (FALSE) { # need users to provide the output folder multi.dois.parse <- ParseZenodo(   doi = c(     \"1111\", \"10.5281/zenodo.7243603\",     \"10.5281/zenodo.7244441\"   ),   file.ext = c(\"rdata\", \"rds\"),   out.folder = \"/path/to/outfoder\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunCellRanger.html","id":null,"dir":"Reference","previous_headings":"","what":"Run CellRanger on Downloaded FASTQ Files. — RunCellRanger","title":"Run CellRanger on Downloaded FASTQ Files. — RunCellRanger","text":"Run CellRanger Downloaded FASTQ Files.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunCellRanger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run CellRanger on Downloaded FASTQ Files. — RunCellRanger","text":"","code":"RunCellRanger(   sample.dir,   ref,   localcores = 4,   localmem = 16,   out.folder = NULL,   cr.path = NULL,   cr.paras = \"--chemistry=auto --jobmode=local\" )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunCellRanger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run CellRanger on Downloaded FASTQ Files. — RunCellRanger","text":"sample.dir Directory contains samples. ref Path folder containing 10x-compatible transcriptome reference (--transcriptome). localcores Set max cores pipeline may request one time (--localcores). applies local jobs (--jobmode=local). Default: 4. localmem Set max GB pipeline may request one time (--localmem). applies local jobs (--jobmode=local). Default: 16. .folder Output folder. Default: NULL (current working directory). cr.path Path cellranger. Default: NULL (conduct automatic detection). cr.paras Parameters cellranger. Default: \"--chemistry=auto --jobmode=local\".","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunCellRanger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run CellRanger on Downloaded FASTQ Files. — RunCellRanger","text":"Vector contains failed samples NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunCellRanger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run CellRanger on Downloaded FASTQ Files. — RunCellRanger","text":"","code":"if (FALSE) { RunCellRanger(   sample.dir = \"/path/to/fastq\",   ref = \"/path/to/cellranger_tiny_ref/3.0.0\",   out.folder = \"/path/to/results\",   cr.path = \"/path/to/cellranger-x.x.x/cellranger\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunSTAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Run STAR on Downloaded FASTQ Files. — RunSTAR","title":"Run STAR on Downloaded FASTQ Files. — RunSTAR","text":"Run STAR Downloaded FASTQ Files.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunSTAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run STAR on Downloaded FASTQ Files. — RunSTAR","text":"","code":"RunSTAR(   sample.dir,   ref,   out.folder = NULL,   thread = 4,   star.path = NULL,   star.paras = \"--outBAMsortingThreadN 4 --twopassMode None\" )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunSTAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run STAR on Downloaded FASTQ Files. — RunSTAR","text":"sample.dir Directory contains samples. ref Path folder containing STAR version-compatible reference. .folder Output folder. Default: NULL (current working directory). thread number threads use. Default: 4. star.path Path STAR. Default: NULL (conduct automatic detection). star.paras Parameters STAR. Default: \"--outBAMsortingThreadN 4 --twopassMode None\".","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunSTAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run STAR on Downloaded FASTQ Files. — RunSTAR","text":"Vector contains failed samples NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/RunSTAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run STAR on Downloaded FASTQ Files. — RunSTAR","text":"","code":"if (FALSE) { RunSTAR(   sample.dir = \"/path/to/fastq\",   ref = \"/path/to/star/index\",   out.folder = \"/path/to/star/mapping\",   star.path = \"/path/to/bin/STAR\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCE2AD.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SingleCellExperiemnt to AnnData using sceasy/scDIOR/zellkonverter. — SCE2AD","title":"Convert SingleCellExperiemnt to AnnData using sceasy/scDIOR/zellkonverter. — SCE2AD","text":"Convert SingleCellExperiemnt AnnData using sceasy/scDIOR/zellkonverter.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCE2AD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SingleCellExperiemnt to AnnData using sceasy/scDIOR/zellkonverter. — SCE2AD","text":"","code":"SCE2AD(   sce.obj,   method = c(\"sceasy\", \"scDIOR\", \"zellkonverter\"),   out.folder = NULL,   out.filename = NULL,   slot = \"counts\",   conda.path = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCE2AD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SingleCellExperiemnt to AnnData using sceasy/scDIOR/zellkonverter. — SCE2AD","text":"sce.obj SingleCellExperiment object. method Method used perform conversion, choose \"sceasy\",    \"scDIOR\", \"zellkonverter\". Default: \"sceasy\". .folder Output folder. Default: NULL (current working directory). .filename Output file name, e.g., test.h5ad. Default: NULL (seu.obj name, method, h5ad.). slot Slot adata.X, used method \"sceasy\", \"zellkonverter\". Default: counts. conda.path Conda environment path, used method \"zellkonverter\" \"sceasy\". Default: NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCE2AD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SingleCellExperiemnt to AnnData using sceasy/scDIOR/zellkonverter. — SCE2AD","text":"Run log.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCE2AD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert SingleCellExperiemnt to AnnData using sceasy/scDIOR/zellkonverter. — SCE2AD","text":"","code":"# sceasy SCE2AD(sce.obj = pbmc3k.sce, method = \"sceasy\", out.folder = \"benchmark\", slot = \"rawcounts\", conda.path = \"/path/to/conda\") #> Error in reticulate::use_condaenv(conda.path, required = TRUE): Unable to locate conda environment '/path/to/conda'. # scDIOR pbmc3k.sce.scdior <- pbmc3k.sce #> Error in eval(expr, envir, enclos): object 'pbmc3k.sce' not found library(SingleCellExperiment) #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: 'MatrixGenerics' #> The following objects are masked from 'package:matrixStats': #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #> Loading required package: parallel #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:parallel': #>  #>     clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, #>     clusterExport, clusterMap, parApply, parCapply, parLapply, #>     parLapplyLB, parRapply, parSapply, parSapplyLB #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: 'S4Vectors' #> The following objects are masked from 'package:base': #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Warning: package 'GenomeInfoDb' was built under R version 4.0.5 #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: 'Biobase' #> The following object is masked from 'package:MatrixGenerics': #>  #>     rowMedians #> The following objects are masked from 'package:matrixStats': #>  #>     anyMissing, rowMedians # scDIOR does not support varm in rowData rowData(pbmc3k.sce.scdior)$varm <- NULL #> Error in rowData(pbmc3k.sce.scdior)$varm <- NULL: object 'pbmc3k.sce.scdior' not found SCE2AD(sce.obj = pbmc3k.sce.scdior, method = \"scDIOR\", out.folder = \"benchmark\") #> There is an error when using scDIOR: Error in sce_write_h5(sce = data, file = file, assay.name = assay.name): object 'pbmc3k.sce.scdior' not found #> NULL # zellkonverter SCE2AD(sce.obj = pbmc3k.sce, method = \"zellkonverter\", out.folder = \"benchmark\", slot = \"rawcounts\", conda.path = \"/path/to/conda\") #> Error in reticulate::use_condaenv(conda.path, required = TRUE): Unable to locate conda environment '/path/to/conda'."},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCEAnnData.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Format Conversion between SingleCellExperiment and AnnData. — SCEAnnData","title":"Data Format Conversion between SingleCellExperiment and AnnData. — SCEAnnData","text":"Data Format Conversion SingleCellExperiment AnnData.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCEAnnData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Format Conversion between SingleCellExperiment and AnnData. — SCEAnnData","text":"","code":"SCEAnnData(   from = c(\"SingleCellExperiment\", \"AnnData\"),   to = c(\"AnnData\", \"SingleCellExperiment\"),   sce = NULL,   anndata.file = NULL,   slot.name = \"counts\",   ... )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCEAnnData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Format Conversion between SingleCellExperiment and AnnData. — SCEAnnData","text":"source data format convert, chosen SingleCellExperiment AnnData. Default: SingleCellExperiment. target data format convert, chosen AnnData SingleCellExperiment. Default: AnnData. sce SingleCellExperiment object convert. Default: NULL. anndata.file File used save contains AnnData results. Default: NULL. slot.name Slot name used save count matrix, used converting AnnData SingleCellExperiment. Default: counts. ... Parameters writeH5AD readH5AD.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCEAnnData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Format Conversion between SingleCellExperiment and AnnData. — SCEAnnData","text":"NULL SingleCellExperiment.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCEAnnData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Format Conversion between SingleCellExperiment and AnnData. — SCEAnnData","text":"","code":"if (FALSE) { library(scRNAseq) seger <- SegerstolpePancreasData() SCEAnnData(from = \"SingleCellExperiment\", to = \"AnnData\", sce = seger, X_name = \"counts\") # need users to provide the output file sce <- SCEAnnData(   from = \"AnnData\", to = \"SingleCellExperiment\",   anndata.file = \"path/to/seger.h5ad\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCELoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Format Conversion between SingleCellExperiment and loom. — SCELoom","title":"Data Format Conversion between SingleCellExperiment and loom. — SCELoom","text":"Data Format Conversion SingleCellExperiment loom.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCELoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Format Conversion between SingleCellExperiment and loom. — SCELoom","text":"","code":"SCELoom(   from = c(\"SingleCellExperiment\", \"loom\"),   to = c(\"loom\", \"SingleCellExperiment\"),   sce = NULL,   loom.file = NULL,   ... )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCELoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Format Conversion between SingleCellExperiment and loom. — SCELoom","text":"source data format convert, chosen SingleCellExperiment AnnData. Default: SingleCellExperiment. target data format convert, chosen AnnData SingleCellExperiment. Default: loom. sce SingleCellExperiment object convert. Default: NULL. loom.file File used save contains loom results. Default: NULL. ... Parameters sceasy::convertFormat sceasy::convertFormat.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCELoom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Format Conversion between SingleCellExperiment and loom. — SCELoom","text":"NULL SingleCellExperiment.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SCELoom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Format Conversion between SingleCellExperiment and loom. — SCELoom","text":"","code":"if (FALSE) { # convert from loom to SingleCellExperiment, need users to provide the loom file sce.obj <- SCELoom(   from = \"loom\", to = \"SingleCellExperiment\",   loom.file = \"path/to/loom\" ) # convert from SingleCellExperiment to loom, need users to provide the loom file SCELoom(   from = \"SingleCellExperiment\", to = \"loom\", sce = sce.obj,   loom.file = \"path/to/loom\" ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/Seu2AD.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SeuratObject to AnnData using SeuratDisk/sceasy/scDIOR. — Seu2AD","title":"Convert SeuratObject to AnnData using SeuratDisk/sceasy/scDIOR. — Seu2AD","text":"Convert SeuratObject AnnData using SeuratDisk/sceasy/scDIOR.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Seu2AD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SeuratObject to AnnData using SeuratDisk/sceasy/scDIOR. — Seu2AD","text":"","code":"Seu2AD(   seu.obj,   method = c(\"SeuratDisk\", \"sceasy\", \"scDIOR\"),   out.folder = NULL,   out.filename = NULL,   assay = \"RNA\",   slot = \"counts\",   save.scale = FALSE,   conda.path = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/Seu2AD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SeuratObject to AnnData using SeuratDisk/sceasy/scDIOR. — Seu2AD","text":"seu.obj seurat object. method Method used perform conversion, choose \"SeuratDisk\", \"sceasy\",    \"scDIOR\". Default: \"SeuratDisk\". .folder Output folder. Default: NULL (current working directory). .filename Output file name, e.g., test.h5ad. Default: NULL (seu.obj name, method, h5ad.). assay Assay name store expression matrices SeuratObject. Default: RNA. slot Slot adata.X, used method \"sceasy\". Default: counts. save.scale Logical value, whether save scaled count matrix, used method \"SeuratDisk\", \"scDIOR\". Default: FALSE. method \"SeuratDisk\" save.scale TRUE (FALSE), scaled data stored X， log-normalized data raw.X (log-normalized data stored X，raw count matrix raw.X); method \"scDIOR\" save.scale TRUE (FALSE), scaled data stored X，log-normalized data raw.X, raw count matrix layers (log-normalized data stored X，raw count matrix layers). conda.path Conda environment path, used method \"sceasy\". Default: NULL.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Seu2AD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SeuratObject to AnnData using SeuratDisk/sceasy/scDIOR. — Seu2AD","text":"Run log.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/Seu2AD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert SeuratObject to AnnData using SeuratDisk/sceasy/scDIOR. — Seu2AD","text":"","code":"# SeuratDisk Seu2AD(seu.obj = pbmc3k.final, method = \"SeuratDisk\", out.folder = \"benchmark\", assay = \"RNA\", save.scale = TRUE) #> Error in Seurat::GetAssayData(object = seu.obj, slot = \"scale.data\", assay = assay): object 'pbmc3k.final' not found # sceasy Seu2AD(seu.obj = pbmc3k.final, method = \"sceasy\", out.folder = \"benchmark\", assay = \"RNA\", slot = \"counts\", conda.path = \"/path/to/conda\") #> Error in reticulate::use_condaenv(conda.path, required = TRUE): Unable to locate conda environment '/path/to/conda'. # scDIOR Seu2AD(seu.obj = pbmc3k.final, method = \"scDIOR\", out.folder = \"benchmark\", assay = \"RNA\", save.scale = TRUE) #> There is an error when using scDIOR: Error in seurat_write_h5(seurat = data, file = file, assay.name = assay.name, : object 'pbmc3k.final' not found #> NULL"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCBDatasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Show All Available Datasets in UCSC Cell Browser. — ShowCBDatasets","title":"Show All Available Datasets in UCSC Cell Browser. — ShowCBDatasets","text":"Show Available Datasets UCSC Cell Browser.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCBDatasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show All Available Datasets in UCSC Cell Browser. — ShowCBDatasets","text":"","code":"ShowCBDatasets(   lazy = TRUE,   json.folder = NULL,   update = FALSE,   quiet = FALSE,   timeout = 3600 )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCBDatasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show All Available Datasets in UCSC Cell Browser. — ShowCBDatasets","text":"lazy Logical value, whether always load datasets online locally. Default: TRUE (load locally). json.folder Folder used save load datasets json files. Default: NULL (current working directory). update Logical value, whther update local datasets json. Default: FALSE. first time, set lazy TRUE update TRUE save json files. quiet Logical value, whether show downloading progress. Default: FALSE (show). timeout Timeout data access. Default: 3600.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCBDatasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show All Available Datasets in UCSC Cell Browser. — ShowCBDatasets","text":"Dataframe contains available datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCBDatasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show All Available Datasets in UCSC Cell Browser. — ShowCBDatasets","text":"","code":"if (FALSE) { # first time run (lazy mode), need users to provide json folder ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, update = TRUE) # second time run (lazy mode), need users to provide json folder ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, update = FALSE) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCELLxGENEDatasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Show All Available Datasets in CELLxGENE. — ShowCELLxGENEDatasets","title":"Show All Available Datasets in CELLxGENE. — ShowCELLxGENEDatasets","text":"Show Available Datasets CELLxGENE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCELLxGENEDatasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show All Available Datasets in CELLxGENE. — ShowCELLxGENEDatasets","text":"","code":"ShowCELLxGENEDatasets()"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCELLxGENEDatasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show All Available Datasets in CELLxGENE. — ShowCELLxGENEDatasets","text":"Dataframe contains available datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCELLxGENEDatasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show All Available Datasets in CELLxGENE. — ShowCELLxGENEDatasets","text":"https://gist.github.com/ivirshup/f1a1603db69de3888eacb4bdb6a9317a","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowCELLxGENEDatasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show All Available Datasets in CELLxGENE. — ShowCELLxGENEDatasets","text":"","code":"# \\donttest{ # all available datasets all.cellxgene.datasets <- ShowCELLxGENEDatasets() # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowHCAProjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Show All Available Projects in Human Cell Atlas. — ShowHCAProjects","title":"Show All Available Projects in Human Cell Atlas. — ShowHCAProjects","text":"Show Available Projects Human Cell Atlas.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowHCAProjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show All Available Projects in Human Cell Atlas. — ShowHCAProjects","text":"","code":"ShowHCAProjects(catalog = NULL)"},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowHCAProjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show All Available Projects in Human Cell Atlas. — ShowHCAProjects","text":"catalog catalog projects. Different catalogs may share projects. Choose \"dcp29\", \"dcp30\", \"dcp1\", \"lm2\", \"lm3\", one multiple values. Default: NULL (catalogs, remove duplicated projects).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowHCAProjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show All Available Projects in Human Cell Atlas. — ShowHCAProjects","text":"Dataframe contains available projects.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/ShowHCAProjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show All Available Projects in Human Cell Atlas. — ShowHCAProjects","text":"","code":"# \\donttest{ # all available projects all.hca.projects <- ShowHCAProjects() # }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/SplitSRA.html","id":null,"dir":"Reference","previous_headings":"","what":"Split SRA to fastq Files and Format to 10x Standard Style. — SplitSRA","title":"Split SRA to fastq Files and Format to 10x Standard Style. — SplitSRA","text":"Split SRA fastq Files Format 10x Standard Style.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SplitSRA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split SRA to fastq Files and Format to 10x Standard Style. — SplitSRA","text":"","code":"SplitSRA(   sra.folder = NULL,   sra.path = NULL,   fastq.type = c(\"10x\", \"other\"),   split.cmd.path = NULL,   sratools.path = NULL,   split.cmd.paras = NULL,   split.cmd.threads = NULL,   format.10x = TRUE,   remove.raw = FALSE )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/SplitSRA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split SRA to fastq Files and Format to 10x Standard Style. — SplitSRA","text":"sra.folder Folder contains sras, obtained DownloadSRA. Default: NULL. sra.path Paths sras. sra.folder sra.path NULL. Default: NULL. fastq.type source fastq files, choose 10x (use --split-files split sra) (use --split-3 split sra). Default: 10x. split.cmd.path full command path used split, can path parallel-fastq-dump, fasterq-dump fastq-dump. Default: NULL (conduct automatic detection). sratools.path Path sratoolkit bin. split.cmd.path path parallel-fastq-dump, requires sratoolkit. Default: NULL (conduct automatic detection). split.cmd.paras Parameters split.cmd.path. Default: NULL. split.cmd.threads Threads, used split.cmd.path path parallel-fastq-dump fasterq-dump. Default: NULL (1). format.10x Logical value, whether format split fastqs 10x standard format. Default: TRUE. remove.raw Logical value, whether remove old split fastqs (unformatted), used format.10x TRUE. Default: FALSE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SplitSRA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split SRA to fastq Files and Format to 10x Standard Style. — SplitSRA","text":"NULL paths failed sras.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/SplitSRA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split SRA to fastq Files and Format to 10x Standard Style. — SplitSRA","text":"","code":"if (FALSE) { # need users to provide the prefetch.path, sra.folder, split.cmd.path, sratools.path and out.folder GSE186003.runs <- ExtractRun(acce = \"GSE186003\", platform = \"GPL24247\") GSE186003.down <- DownloadSRA(   gsm.df = GSE186003.runs, prefetch.path = \"/path/to/prefetch\",   out.folder = \"/path/to/output\" ) GSE186003.split <- SplitSRA(   sra.folder = \"/path/to/output\",   split.cmd.path = \"/path/to/parallel-fastq-dump\",   sratools.path = \"/path/to/sra/bin\", fastq.type = \"10x\",   split.cmd.threads = 4 ) }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/StatDBAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Stat Database Attributes. — StatDBAttribute","title":"Stat Database Attributes. — StatDBAttribute","text":"Stat Database Attributes.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/StatDBAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stat Database Attributes. — StatDBAttribute","text":"","code":"StatDBAttribute(   df = NULL,   filter,   database = c(\"PanglaoDB\", \"UCSC\", \"CELLxGENE\", \"HCA\"),   combine = FALSE,   use.census = FALSE,   census.version = \"stable\",   organism = NULL )"},{"path":"https://showteeth.github.io/GEfetch2R/reference/StatDBAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stat Database Attributes. — StatDBAttribute","text":"df metadata, can PanglaoDBMeta obtained ShowCBDatasets, ShowCELLxGENEDatasets, ShowHCAProjects. Skip use.census TRUE. Default: NULL. filter Vector attributes. database Database name, choose \"PanglaoDB\", \"UCSC\", \"CELLxGENE\", \"HCA\". Default: \"PanglaoDB\". combine Logical value, whether combine attributes filter summarising. Default: FALSE. use.census Logical value, whether use CZ CELLxGENE Census summarise metadata. Default: FALSE. census.version version Census, e.g., \"2024-05-13\", \"latest\" \"stable\". Default: stable. organism Organism, lower case replace space '_'. Default: FALSE (human).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/StatDBAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stat Database Attributes. — StatDBAttribute","text":"List attributes information (attribute, value number) combine FALSE, dataframe combine TRUE.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/StatDBAttribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stat Database Attributes. — StatDBAttribute","text":"","code":"if (FALSE) { # PanglaoDB StatDBAttribute(df = PanglaoDBMeta, filter = c(\"species\", \"protocol\"), database = \"PanglaoDB\") # UCSC Cell Browser, need users to provide the json folder ucsc.cb.samples <- ShowCBDatasets(lazy = TRUE, json.folder = NULL, update = FALSE) StatDBAttribute(df = ucsc.cb.samples, filter = c(\"organism\", \"organ\"), database = \"UCSC\") # CELLxGENE all.cellxgene.datasets <- ShowCELLxGENEDatasets() StatDBAttribute(   df = all.cellxgene.datasets, filter = c(\"organism\", \"sex\"),   database = \"CELLxGENE\" ) # HCA all.hca.projects <- ShowHCAProjects() StatDBAttribute(df = all.hca.projects, filter = c(\"organism\", \"sex\"), database = \"HCA\") }"},{"path":"https://showteeth.github.io/GEfetch2R/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://showteeth.github.io/GEfetch2R/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"new-features-0-7-1","dir":"Changelog","previous_headings":"","what":"New features","title":"GEfetch2R 0.7.1","text":"Added Seu2AD/SCE2AD/AD2Seu/AD2SCE benchmark (data IO).","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"minor-changes-0-7-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GEfetch2R 0.7.1","text":"Added timeout ShowCBDatasets. Added Gunzip deal removal gunzip package GEOquery.","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"New features","title":"GEfetch2R 0.7.0","text":"Added DownloadFastq download FASTQ files directly ENA. Updated DownloadSRA download sra files directly ENA. Updated DownloadBam download bam files directly ENA.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"minor-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GEfetch2R 0.7.0","text":"Updated DownloadSRA, DownloadFastq, DownloadBam keep file structure. Updated DownloadFastq format fastqs 10x format.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"gefetch2r-061","dir":"Changelog","previous_headings":"","what":"GEfetch2R 0.6.1","title":"GEfetch2R 0.6.1","text":"Fix bugs LoadRDS2Seurat. Give message file file.ext ParseHCA, ParseHCA, ExtractZenodoMeta, ParseZenodo. Return SeuratObject ParseHCA. Fix bug Load2Seurat. Support pigz Bam2Fastq. Return full dataframe ExtractRun. Fix bug ParseCELLxGENE, ParseHCA. Add use.cores ParseCELLxGENE, ParseHCA, ParseZenodo. Fix bug ExtractGEOMeta.","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New features","title":"GEfetch2R 0.6.0","text":"Added RunCellRanger run CellRanger downloaded FASTQ files. Added RunSTAR run STAR downloaded FASTQ files. Added Fastq2R pipe FASTQ files SeuratObject DESeqDataSet. Updated StatDBAttribute support cellxgene.census. Updated ParseCELLxGENE support cellxgene.census return SeuratObject. Updated ParseCBDatasets support subset.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"minor-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GEfetch2R 0.6.0","text":"Return DESeqDataSet data.type bulk ParseGEO. Support summarising multiple attributes StatDBAttribute. Fix bugs mergeExperiments. Fix bugs ParseHCA (file extension specified file.ext). Optimize ParseHCA return metadata downloaded files.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"gefetch2r-051","dir":"Changelog","previous_headings":"","what":"GEfetch2R 0.5.1","title":"GEfetch2R 0.5.1","text":"Create output directory automatically. CELLxGENE new API.","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"GEfetch2R 0.5.0","text":"Added ExtractCELLxGENEMeta extract metadata CELLxGENE datasets. Added ParseCELLxGENE download objects CELLxGENE. Added ExtractHCAMeta extract metadata Human Cell Atlas projects. Added ShowHCAProjects show available Human Cell Atlas projects. Added ShowCELLxGENEDatasets show available CELLxGENE datasets. Added StatDBAttributeto stat database attributes. Added ParseHCA download objects Human Cell Atlas. docker image added.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"minor-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GEfetch2R 0.5.0","text":"Added filters ExtractCELLxGENEMeta. Added data.type ParseGEO return count matrix bulk RNA-seq. Added filters ExtractHCAMeta. Added catalog ShowHCAProjects. Fixed bug ParseCELLxGENE returned failed dataframe downloading error. Fixed bug ImportSeurat. Fixed bug ExportSeurat. Resolved installation. Fixed bug ExtractZenodoMeta (API changed). Fixed bug ShowCBDatasets (added ---check-certificate downloading json files). Fixed bug ShowCELLxGENEDatasets. Supported GEO 10x (separate files).","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"GEfetch2R 0.4.0","text":"Added ExportSeurat convert SeuratObject scRNA-seq formats. Added ImportSeurat convert scRNA-seq formats SeuratObject. Added SCEaAnnData perform data format conversion SingleCellExperiment AnnData. Added SCELoom perform data format conversion SingleCellExperiment loom. Added ExtractPanglaoDBComposition extract cell type composition PanglaoDB datasets.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GEfetch2R 0.4.0","text":"Added conda.path ExportSeurat specify conda enviroment used. Fixed bug SCELoom keep gene names cell ID. Bam2Fastq supported normal bam files (non-10x bam files). Changed function names: ShowPanglaoDBMeta ExtractPanglaoDBMeta, PrepareZenodo ExtractZenodoMeta. Supported downloadding normal (non-10x) bam file DownloadBam. ExtractZenodoMeta supported vector Zenodo dois. Added fastq.type SplitSRA deal fastq files 10x, scRNA-seq protocols bulk RNA-seq. Added check split.cmd.paras SplitSRA. Added local.data ExtractPanglaoDBMeta ExtractPanglaoDBComposition use cached sample metadata composition.","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"GEfetch2R 0.3.0","text":"Added ExtractRun extract run number GEO. Added DownloadSRA download SRA according run number. Added SplitSRA split SRA fastqs format fastqs 10x format. Added DownloadBam download 10x bam files GEO. Added Bam2Fastq convert bam 10x formatted fastqs.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GEfetch2R 0.3.0","text":"Fixed bug DownloadSRA downloading bam files.","code":""},{"path":[]},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"GEfetch2R 0.2.0","text":"Provided APIs GEO. Added Read10XOnline load cellranger output. Added ExtractCBComposition extract cell type composition UCSC Cell Browser datasets. ParseGEO support creating Seurat object. Added ExtractGEOMeta support extract metadata GEO.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"GEfetch2R 0.2.0","text":"Supported lazy mode ShowCBDatasets save time multi-runs. Optimized paras ExtractCBDatasets ParseCBDatasets. Added cell.num filter ParseCBDatasets, ExtractCBDatasets ShowPanglaoDBMeta. Extracted matrix, barcode feature info dataset.json (comprehensive) instead desc.json. Fixed bugs ParseCBDatasets dealing cellranger output. Added timeout ParseCBDatasets avoid possible timeout error. Changed time.GEO related functions timeout. Simplified output ParseGEO. Fixed bug ExtractGEOMeta.","code":""},{"path":"https://showteeth.github.io/GEfetch2R/news/index.html","id":"gefetch2r-010","dir":"Changelog","previous_headings":"","what":"GEfetch2R 0.1.0","title":"GEfetch2R 0.1.0","text":"Provided APIs Zenodo, PanglaoDB UCSC Cell Browser.","code":""}]
